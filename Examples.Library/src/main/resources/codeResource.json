{
  "com.grapecity.documents.excel.examples.Tutorial": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //-----------------------------Set Value------------------------------\n        worksheet.getRange(\"B3:C7\").setValue(new Object[][]{\n                {\"ITEM\", \"AMOUNT\"},\n                {\"Income 1\", 2500},\n                {\"Income 2\", 1000},\n                {\"Income 3\", 250},\n                {\"Other\", 250},\n        });\n        worksheet.getRange(\"B10:C23\").setValue(new Object[][]{\n                {\"ITEM\", \"AMOUNT\"},\n                {\"Rent/mortgage\", 800},\n                {\"Electric\", 120},\n                {\"Gas\", 50},\n                {\"Cell phone\", 45},\n                {\"Groceries\", 500},\n                {\"Car payment\", 273},\n                {\"Auto expenses\", 120},\n                {\"Student loans\", 50},\n                {\"Credit cards\", 100},\n                {\"Auto Insurance\", 78},\n                {\"Personal care\", 50},\n                {\"Entertainment\", 100},\n                {\"Miscellaneous\", 50},\n        });\n\n        worksheet.getRange(\"B2:C2\").merge();\n        worksheet.getRange(\"B2\").setValue(\"MONTHLY INCOME\");\n        worksheet.getRange(\"B9:C9\").merge();\n        worksheet.getRange(\"B9\").setValue(\"MONTHLY EXPENSES\");\n        worksheet.getRange(\"E2:G2\").merge();\n        worksheet.getRange(\"E2\").setValue(\"PERCENTAGE OF INCOME SPENT\");\n        worksheet.getRange(\"E5:G5\").merge();\n        worksheet.getRange(\"E5\").setValue(\"SUMMARY\");\n        worksheet.getRange(\"E3:F3\").merge();\n        worksheet.getRange(\"E9\").setValue(\"BALANCE\");\n        worksheet.getRange(\"E6\").setValue(\"Total Monthly Income\");\n        worksheet.getRange(\"E7\").setValue(\"Total Monthly Expenses\");\n\n\n        //--------------------------------Set Height & Width--------------------------------\n        worksheet.setStandardHeight(26.25);\n        worksheet.setStandardWidth(8.43);\n\n        worksheet.getRange(\"2:24\").setRowHeight(27);\n        worksheet.getRange(\"A:A\").setColumnWidth(2.855);\n        worksheet.getRange(\"B:B\").setColumnWidth(33.285);\n        worksheet.getRange(\"C:C\").setColumnWidth(25.57);\n        worksheet.getRange(\"D:D\").setColumnWidth(1);\n        worksheet.getRange(\"E:F\").setColumnWidth(25.57);\n        worksheet.getRange(\"G:G\").setColumnWidth(14.285);\n\n        //------------------------------Set Table--------------------------------------\n        ITable incomeTable = worksheet.getTables().add(worksheet.getRange(\"B3:C7\"), true);\n        incomeTable.setName(\"tblIncome\");\n        incomeTable.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium4\"));\n        ITable expensesTable = worksheet.getTables().add(worksheet.getRange(\"B10:C23\"), true);\n        expensesTable.setName(\"tblExpenses\");\n        expensesTable.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium4\"));\n\n        //------------------------------Set Formulas-----------------------------------\n        worksheet.getNames().add(\"TotalMonthlyIncome\", \"=SUM(tblIncome[AMOUNT])\");\n        worksheet.getNames().add(\"TotalMonthlyExpenses\", \"=SUM(tblExpenses[AMOUNT])\");\n        worksheet.getRange(\"E3\").setFormula(\"=TotalMonthlyExpenses\");\n        worksheet.getRange(\"G3\").setFormula(\"=TotalMonthlyExpenses/TotalMonthlyIncome\");\n        worksheet.getRange(\"G6\").setFormula(\"=TotalMonthlyIncome\");\n        worksheet.getRange(\"G7\").setFormula(\"=TotalMonthlyExpenses\");\n        worksheet.getRange(\"G9\").setFormula(\"=TotalMonthlyIncome-TotalMonthlyExpenses\");\n\n        //----------------------------Set Styles-------------------------\n        IStyle currencyStyle = workbook.getStyles().get(\"Currency\");\n        currencyStyle.setIncludeAlignment(true);\n        currencyStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        currencyStyle.setVerticalAlignment(VerticalAlignment.Bottom);\n        currencyStyle.setNumberFormat(\"$#,##0.00\");\n\n        IStyle heading1Style = workbook.getStyles().get(\"Heading 1\");\n        heading1Style.setIncludeAlignment(true);\n        heading1Style.setHorizontalAlignment(HorizontalAlignment.Center);\n        heading1Style.setVerticalAlignment(VerticalAlignment.Center);\n        heading1Style.getFont().setName(\"Century Gothic\");\n        heading1Style.getFont().setBold(true);\n        heading1Style.getFont().setSize(11);\n        heading1Style.getFont().setColor(Color.GetWhite());\n        heading1Style.setIncludeBorder(false);\n        heading1Style.setIncludePatterns(true);\n        heading1Style.getInterior().setColor(Color.FromArgb(32, 61, 64));\n\n        IStyle percentStyle = workbook.getStyles().get(\"Percent\");\n        percentStyle.setIncludeAlignment(true);\n        percentStyle.setHorizontalAlignment(HorizontalAlignment.Center);\n        percentStyle.setIncludeFont(true);\n        percentStyle.getFont().setColor(Color.FromArgb(32, 61, 64));\n        percentStyle.getFont().setName(\"Century Gothic\");\n        percentStyle.getFont().setBold(true);\n        percentStyle.getFont().setSize(14);\n\n        worksheet.getSheetView().setDisplayGridlines(false);\n        worksheet.getRange(\"C4:C7, C11:C23, G6:G7, G9\").setStyle(currencyStyle);\n        worksheet.getRange(\"B2, B9, E2, E5\").setStyle(heading1Style);\n        worksheet.getRange(\"G3\").setStyle(percentStyle);\n\n        worksheet.getRange(\"E6:G6\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Medium);\n        worksheet.getRange(\"E6:G6\").getBorders().get(BordersIndex.EdgeBottom).setColor(Color.FromArgb(32, 61, 64));\n        worksheet.getRange(\"E7:G7\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Medium);\n        worksheet.getRange(\"E7:G7\").getBorders().get(BordersIndex.EdgeBottom).setColor(Color.FromArgb(32, 61, 64));\n\n        worksheet.getRange(\"E9:G9\").getInterior().setColor(Color.FromArgb(32, 61, 64));\n        worksheet.getRange(\"E9:G9\").setHorizontalAlignment(HorizontalAlignment.Left);\n        worksheet.getRange(\"E9:G9\").setVerticalAlignment(VerticalAlignment.Center);\n        worksheet.getRange(\"E9:G9\").getFont().setName(\"Century Gothic\");\n        worksheet.getRange(\"E9:G9\").getFont().setBold(true);\n        worksheet.getRange(\"E9:G9\").getFont().setSize(11);\n        worksheet.getRange(\"E9:G9\").getFont().setColor(Color.GetWhite());\n        worksheet.getRange(\"E3:F3\").getBorders().setColor(Color.FromArgb(32, 61, 64));\n\n        //----------------------------Set Conditional Format-------------------------\n        IDataBar dataBar = worksheet.getRange(\"E3\").getFormatConditions().addDatabar();\n        dataBar.getMinPoint().setType(ConditionValueTypes.Number);\n        dataBar.getMinPoint().setValue(1);\n        dataBar.getMaxPoint().setType(ConditionValueTypes.Number);\n        dataBar.getMaxPoint().setValue(\"=TotalMonthlyIncome\");\n        dataBar.setBarFillType(DataBarFillType.Gradient);\n        dataBar.getBarColor().setColor(Color.GetRed());\n        dataBar.setShowValue(false);\n\n        //--------------------------------Set Shape--------------------------------\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 339, 247, 316.5, 346);\n        shape.getChart().getChartArea().getFormat().getLine().setTransparency(1);\n        shape.getChart().getColumnGroups().get(0).setOverlap(0);\n        shape.getChart().getColumnGroups().get(0).setGapWidth(37);\n\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n        category_axis.getFormat().getLine().getColor().setRGB(Color.GetBlack());\n        category_axis.getTickLabels().getFont().setSize(11);\n        category_axis.getTickLabels().getFont().getColor().setRGB(Color.GetBlack());\n\n        IAxis series_axis = shape.getChart().getAxes().item(AxisType.Value);\n        series_axis.getFormat().getLine().setWeight(1);\n        series_axis.getFormat().getLine().getColor().setRGB(Color.GetBlack());\n        series_axis.getTickLabels().setNumberFormat(\"$###0\");\n        series_axis.getTickLabels().getFont().setSize(11);\n        series_axis.getTickLabels().getFont().getColor().setRGB(Color.GetBlack());\n\n        ISeries chartSeries = shape.getChart().getSeriesCollection().newSeries();\n        chartSeries.setFormula(\"=SERIES(\\\"Simple Budget\\\",{\\\"Income\\\",\\\"Expenses\\\"},'Sheet1'!$G$6:$G$7,1)\");\n        chartSeries.getPoints().get(0).getFormat().getFill().getColor().setRGB(Color.FromArgb(176, 21, 19));\n        chartSeries.getPoints().get(1).getFormat().getFill().getColor().setRGB(Color.FromArgb(234, 99, 18));\n        chartSeries.getDataLabels().getFont().setSize(11);\n        chartSeries.getDataLabels().getFont().getColor().setRGB(Color.GetBlack());\n        chartSeries.getDataLabels().setShowValue(true);\n        chartSeries.getDataLabels().setPosition(DataLabelPosition.OutsideEnd);\n\n\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.HomeInventory": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.SimplePersonalBudget": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.StudentCalendar": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.WebsiteFlowChart": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.ProjectCostTracker": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.AgingReport": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.FamilyBudget": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.TravelExpenseReport": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.spreadsheetsviewer.AnnualFinancialReport": "\n        workbook.open(this.getTemplateStream());\n    ",
  "com.grapecity.documents.excel.examples.showcase.SimpleInvoice": "\n\n        //Load template file Simple invoice.xlsx from resource\n        workbook.open(this.getResourceStream(\"xlsx/Simple invoice.xlsx\"));\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        // fill some new items\n        worksheet.getRange(\"E09:H09\").setValue(new Object[]{\"DD1-001\", \"Item 3\", 5.60, 12});\n        worksheet.getRange(\"E10:H10\").setValue(new Object[]{\"DD2-001\", \"Item 3\", 8.5, 14});\n        worksheet.getRange(\"E11:H11\").setValue(new Object[]{\"DD3-001\", \"Item 3\", 9.6, 16});\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.PersonalAddressBook": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // ***************************Set RowHeight & Width****************************\n        worksheet.setStandardHeight(30);\n        worksheet.getRange(\"3:4\").setRowHeight(30.25);\n        worksheet.getRange(\"1:1\").setRowHeight(103.50);\n        worksheet.getRange(\"2:2\").setRowHeight(38.25);\n        worksheet.getRange(\"A:A\").setColumnWidth(2.625);\n        worksheet.getRange(\"B:B\").setColumnWidth(22.25);\n        worksheet.getRange(\"C:E\").setColumnWidth(17.25);\n        worksheet.getRange(\"F:F\").setColumnWidth(31.875);\n        worksheet.getRange(\"G:G\").setColumnWidth(22.625);\n        worksheet.getRange(\"H:H\").setColumnWidth(30);\n        worksheet.getRange(\"I:I\").setColumnWidth(20.25);\n        worksheet.getRange(\"J:J\").setColumnWidth(17.625);\n        worksheet.getRange(\"K:K\").setColumnWidth(12.625);\n        worksheet.getRange(\"L:L\").setColumnWidth(37.25);\n        worksheet.getRange(\"M:M\").setColumnWidth(2.625);\n\n        // *******************************Set Table Value &\n        // Formulas*************************************\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B2:L4\"), true);\n        worksheet.getRange(\"B2:L4\").setValue(new Object[][]{\n                {\"NAME\", \"WORK\", \"CELL\", \"HOME\", \"EMAIL\", \"BIRTHDAY\", \"ADDRESS\", \"CITY\", \"STATE\", \"ZIP\", \"NOTE\"},\n                {\"Kim Abercrombie\", 1235550123, 1235550123, 1235550123, \"someone@example.com\", null, \"123 N. Maple\",\n                        \"Cherryville\", \"WA\", 98031, \"\"},\n                {\"John Smith\", 3215550123L, \"\", \"\", \"someone@example.com\", null, \"456 E. Aspen\", \"\", \"\", \"\", \"\"},});\n        worksheet.getRange(\"B1\").setValue(\"ADDRESS BOOK\");\n        worksheet.getRange(\"G3\").setFormula(\"=TODAY()\");\n        worksheet.getRange(\"G4\").setFormula(\"=TODAY()+5\");\n\n        // ****************************Set Table Style********************************\n        ITableStyle tableStyle = workbook.getTableStyles().add(\"Personal Address Book\");\n        workbook.setDefaultTableStyle(\"Personal Address Book\");\n\n        // Set WholeTable element style.\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setColor(Color.FromArgb(179, 35, 23));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Thin);\n\n        // Set FirstColumn element style.\n        tableStyle.getTableStyleElements().get(TableStyleElementType.FirstColumn).getFont().setBold(true);\n\n        // Set SecondColumns element style.\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().setColor(Color.FromArgb(179, 35, 23));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thick);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n\n        // ***********************************Set Named\n        // Styles*****************************\n        IStyle normalStyle = workbook.getStyles().get(\"Normal\");\n        normalStyle.getFont().setName(\"Arial\");\n        normalStyle.getFont().setColor(Color.FromArgb(179, 35, 23));\n        normalStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        normalStyle.setIndentLevel(1);\n        normalStyle.setVerticalAlignment(VerticalAlignment.Center);\n        normalStyle.setWrapText(true);\n\n        IStyle titleStyle = workbook.getStyles().get(\"Title\");\n        titleStyle.setIncludeAlignment(true);\n        titleStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        titleStyle.setVerticalAlignment(VerticalAlignment.Center);\n        titleStyle.getFont().setName(\"Arial\");\n        titleStyle.getFont().setBold(true);\n        titleStyle.getFont().setSize(72);\n        titleStyle.getFont().setColor(Color.FromArgb(179, 35, 23));\n\n        IStyle heading1Style = workbook.getStyles().get(\"Heading 1\");\n        heading1Style.setIncludeBorder(false);\n        heading1Style.getFont().setName(\"Arial\");\n        heading1Style.getFont().setSize(18);\n        heading1Style.getFont().setColor(Color.FromArgb(179, 35, 23));\n\n        IStyle dataStyle = workbook.getStyles().add(\"Data\");\n        dataStyle.setIncludeNumber(true);\n        dataStyle.setNumberFormat(\"m/d/yyyy\");\n\n        IStyle phoneStyle = workbook.getStyles().add(\"Phone\");\n        phoneStyle.setIncludeNumber(true);\n        phoneStyle.setNumberFormat(\"[<=9999999]###-####;(###) ###-####\");\n\n        // ****************************************Use\n        // NamedStyle**************************\n        worksheet.getSheetView().setDisplayGridlines(false);\n        worksheet.getRange(\"B2:L2\").getInterior().setColor(Color.FromArgb(217, 217, 217));\n        worksheet.getRange(\"B3:B4\").getFont().setBold(true);\n        worksheet.getRange(\"2:2\").setHorizontalAlignment(HorizontalAlignment.Left);\n\n        table.setTableStyle(tableStyle);\n        worksheet.getRange(\"B1\").setStyle(titleStyle);\n        worksheet.getRange(\"B2:L2\").setStyle(heading1Style);\n        worksheet.getRange(\"C3:E4\").setStyle(phoneStyle);\n        worksheet.getRange(\"G3:G4\").setStyle(dataStyle);\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.CustomerProfitabilityAnalysis": "\n\n        Object data = new Object[][]{\n            {null, \"[Segment Name]\", \"[Segment Name]\", \"[Segment Name]\", \"Overall\"},\n            {\"Customer Activity:\", null, null, null, null},\n            {\"Number of active customers—Beginning of period\", 5, 8, 8, null},\n            {\"Number of customers added\", 2, 4, 4, null},\n            {\"Number of customers lost/terminated\", -1, -2, -2, null},\n            {\"Number of active customers—End of period\", null, null, null, null},\n            {null, null, null, null, null},\n            {\"Profitability Analysis:\", null, null, null, null},\n            {\"Revenue per segment\", 1500000, 1800000, 2500000, null},\n            {\"Weighting\", null, null, null, null},\n            {null, null, null, null, null},\n            {\"Cost of sales:\", null, null, null, null},\n            {\"Ongoing service and support costs\", 1000000, 1400000, 1400000, null},\n            {\"Other direct customer costs\", 200000, 100000, 100000, null},\n            {\"Total cost of sales\", null, null, null, null},\n            {\"Gross margin\", null, null, null, null},\n            {\"Weighting\", null, null, null, null},\n            {null, null, null, null, null},\n            {\"Other costs:\", null, null, null, null},\n            {\"Customer acquisition\", 105000, 120000, 235000, null},\n            {\"Customer marketing\", 150000, 125000, 275000, null},\n            {\"Customer termination\", 80000, 190000, 140000, null},\n            {\"Total other customer costs\", null, null, null, null},\n            {\"Customer profit by segment\", null, null, null, null},\n            {\"Weighting\", null, null, null, null},\n            {null, null, null, null, null},\n            {\"Summary Metrics:\", \"[Segment Name]\", \"[Segment Name]\", \"[Segment Name]\", \"Trend\"},\n            {\"Average cost per acquired customer\", null, null, null, null},\n            {\"Average cost per terminated customer\", null, null, null, null},\n            {\"Average marketing cost per active customer\", null, null, null, null},\n            {\"Average profit (loss) per customer\", null, null, null, null},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.setName(\"Customer Profitability\");\n        worksheet.setTabColor(Color.FromArgb(131, 172, 121));\n        worksheet.getSheetView().setDisplayGridlines(false);\n\n        //Set Value.\n        worksheet.getRange(\"B2\").setValue(\"[Company Name]\");\n        worksheet.getRange(\"B3\").setValue(\"Customer Profitability Analysis\");\n        worksheet.getRange(\"B4\").setValue(\"[Date]\");\n        worksheet.getRange(\"B6\").setValue(\"Gray cells will be calculated for you. You do not need to enter anything into them.\");\n        worksheet.getRange(\"B7:F37\").setValue(data);\n\n        //Set formula.\n        worksheet.getRange(\"F9:F11\").setFormula(\"=SUM(C9:E9)\");\n        worksheet.getRange(\"C12:F12\").setFormula(\"=SUM(C9:C11)\");\n\n        worksheet.getRange(\"C16:E16\").setFormula(\"=+C15/$F$15\");\n        worksheet.getRange(\"F15:F16\").setFormula(\"=SUM(C15:E15)\");\n\n        worksheet.getRange(\"F19:F20\").setFormula(\"=SUM(C19:E19)\");\n        worksheet.getRange(\"C21:F21\").setFormula(\"=SUM(C19:C20)\");\n        worksheet.getRange(\"C22:F22\").setFormula(\"=+C15-C21\");\n        worksheet.getRange(\"C23:E23\").setFormula(\"=MAX(0, MIN(1,C22/$F$22))\");\n        worksheet.getRange(\"F23\").setFormula(\"=SUM(C23:E23)\");\n\n        worksheet.getRange(\"F26:F28\").setFormula(\"=SUM(C26:E26)\");\n        worksheet.getRange(\"C29:F29\").setFormula(\"=SUM(C26:C28)\");\n        worksheet.getRange(\"C30:E30\").setFormula(\"=+C22-C29\");\n        worksheet.getRange(\"C31:E31\").setFormula(\"=MAX(0,MIN(1, C30/$F$30))\");\n        worksheet.getRange(\"F30:F31\").setFormula(\"=SUM(C30:E30)\");\n\n        worksheet.getRange(\"C34:E34\").setFormula(\"=+C26/C10\");\n        worksheet.getRange(\"C35:E35\").setFormula(\"=-C28/C11\");\n        worksheet.getRange(\"C36:E36\").setFormula(\"=+C27/C12\");\n        worksheet.getRange(\"C37:E37\").setFormula(\"=+C30/C12\");\n\n        //Change the range's RowHeight and ColumnWidth.\n        worksheet.setStandardHeight(15);\n        worksheet.setStandardWidth(9.140625);\n        worksheet.getRows().get(0).setRowHeight(9.95);\n        worksheet.getRows().get(1).setRowHeight(33);\n        worksheet.getRows().get(2).setRowHeight(27);\n        worksheet.getRows().get(3).setRowHeight(19.5);\n        worksheet.getRows().get(4).setRowHeight(9);\n        worksheet.getRows().get(5).setRowHeight(19.5);\n        worksheet.getRows().get(6).setRowHeight(18);\n        worksheet.getRows().get(12).setRowHeight(9);\n        worksheet.getRows().get(16).setRowHeight(9);\n        worksheet.getRows().get(23).setRowHeight(9);\n        worksheet.getRows().get(31).setRowHeight(9);\n\n        worksheet.getColumns().get(0).setColumnWidth(1.85546875);\n        worksheet.getColumns().get(1).setColumnWidth(46.7109375);\n        worksheet.getColumns().get(2).setColumnWidth(16.42578125);\n        worksheet.getColumns().get(3).setColumnWidth(16.42578125);\n        worksheet.getColumns().get(4).setColumnWidth(16.42578125);\n        worksheet.getColumns().get(5).setColumnWidth(16.42578125);\n\n        //Modify the build in name styles.\n        IStyle nameStyle_Normal = workbook.getStyles().get(\"Normal\");\n        nameStyle_Normal.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Normal.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Normal.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Normal.getFont().setSize(10);\n\n        IStyle nameStyle_Heading_1 = workbook.getStyles().get(\"Heading 1\");\n        nameStyle_Heading_1.setHorizontalAlignment(HorizontalAlignment.Left);\n        nameStyle_Heading_1.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Heading_1.getFont().setThemeFont(ThemeFont.Major);\n        nameStyle_Heading_1.getFont().setBold(false);\n        nameStyle_Heading_1.getFont().setSize(24);\n        nameStyle_Heading_1.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Heading_1.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Heading_1.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        nameStyle_Heading_1.setIncludeAlignment(true);\n\n        IStyle nameStyle_Heading_2 = workbook.getStyles().get(\"Heading 2\");\n        nameStyle_Heading_2.setHorizontalAlignment(HorizontalAlignment.Left);\n        nameStyle_Heading_2.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Heading_2.getFont().setThemeFont(ThemeFont.Major);\n        nameStyle_Heading_2.getFont().setBold(false);\n        nameStyle_Heading_2.getFont().setSize(20);\n        nameStyle_Heading_2.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Heading_2.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Heading_2.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        nameStyle_Heading_2.getInterior().setThemeColor(ThemeColor.Accent3);\n        nameStyle_Heading_2.getInterior().setTintAndShade(0.39994506668294322);\n        nameStyle_Heading_2.setIncludeNumber(true);\n        nameStyle_Heading_2.setIncludePatterns(true);\n\n        IStyle nameStyle_Heading_3 = workbook.getStyles().get(\"Heading 3\");\n        nameStyle_Heading_3.setHorizontalAlignment(HorizontalAlignment.Left);\n        nameStyle_Heading_3.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Heading_3.getFont().setThemeFont(ThemeFont.Major);\n        nameStyle_Heading_3.getFont().setBold(false);\n        nameStyle_Heading_3.getFont().setSize(14);\n        nameStyle_Heading_3.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Heading_3.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Heading_3.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        nameStyle_Heading_3.setIncludeAlignment(true);\n        nameStyle_Heading_3.setIncludePatterns(true);\n\n        IStyle nameStyle_Heading_4 = workbook.getStyles().get(\"Heading 4\");\n        nameStyle_Heading_4.setHorizontalAlignment(HorizontalAlignment.Left);\n        nameStyle_Heading_4.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Heading_4.getFont().setThemeFont(ThemeFont.Major);\n        nameStyle_Heading_4.getFont().setBold(true);\n        nameStyle_Heading_4.getFont().setSize(10);\n        nameStyle_Heading_4.getFont().setThemeColor(ThemeColor.Light1);\n        nameStyle_Heading_4.getFont().setTintAndShade(-0.0499893185216834);\n        nameStyle_Heading_4.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        nameStyle_Heading_4.getInterior().setThemeColor(ThemeColor.Accent3);\n        nameStyle_Heading_4.getInterior().setTintAndShade(-0.249946592608417);\n        nameStyle_Heading_4.setIncludeAlignment(true);\n        nameStyle_Heading_4.setIncludeBorder(true);\n        nameStyle_Heading_4.setIncludePatterns(true);\n\n        //Apply the above name styles on ranges.\n        worksheet.getRange(\"B2:F2\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n        worksheet.getRange(\"B3:F3\").setStyle(workbook.getStyles().get(\"Heading 2\"));\n        worksheet.getRange(\"B4:F4\").setStyle(workbook.getStyles().get(\"Heading 3\"));\n        worksheet.getRange(\"B8:F8\").setStyle(workbook.getStyles().get(\"Heading 4\"));\n        worksheet.getRange(\"B14:F14\").setStyle(workbook.getStyles().get(\"Heading 4\"));\n        worksheet.getRange(\"B18:F18\").setStyle(workbook.getStyles().get(\"Heading 4\"));\n        worksheet.getRange(\"B25:F25\").setStyle(workbook.getStyles().get(\"Heading 4\"));\n        worksheet.getRange(\"B33:F33\").setStyle(workbook.getStyles().get(\"Heading 4\"));\n\n        //Set NumberFormat.\n        worksheet.getRange(\"C9:F12\").setNumberFormat(\"0_);[Red](0)\");\n        worksheet.getRange(\"C15:F15\").setNumberFormat(\"\\\"$\\\"#,##0.00_);[Red](\\\"$\\\"#,##0.00)\");\n        worksheet.getRange(\"C16:F16\").setNumberFormat(\"0%\");\n        worksheet.getRange(\"C19:F22\").setNumberFormat(\"\\\"$\\\"#,##0.00_);[Red](\\\"$\\\"#,##0.00)\");\n        worksheet.getRange(\"C23:F23\").setNumberFormat(\"0%\");\n        worksheet.getRange(\"C26:F30\").setNumberFormat(\"\\\"$\\\"#,##0.00_);[Red](\\\"$\\\"#,##0.00)\");\n        worksheet.getRange(\"C31:F31\").setNumberFormat(\"0%\");\n        worksheet.getRange(\"C34:F37\").setNumberFormat(\"\\\"$\\\"#,##0.00_);[Red](\\\"$\\\"#,##0.00)\");\n\n        //Set range's font style.\n        worksheet.getRange(\"B6\").getFont().setTintAndShade(0.34998626667073579);\n        worksheet.getRange(\"B6\").getFont().setSize(8);\n        worksheet.getRange(\"B6\").getFont().setItalic(true);\n        worksheet.getRange(\"C7:F7\").getFont().setTintAndShade(0);\n        worksheet.getRange(\"B9:F12\").getFont().setTintAndShade(0);\n        worksheet.getRange(\"B15:F16\").getFont().setTintAndShade(0);\n        worksheet.getRange(\"B19:F23\").getFont().setTintAndShade(0);\n        worksheet.getRange(\"B26:F31\").getFont().setTintAndShade(0);\n        worksheet.getRange(\"B34:F37\").getFont().setTintAndShade(0);\n        worksheet.getRange(\"C33:F33\").getFont().setBold(false);\n\n        //Set range's alignment.\n        worksheet.getRange(\"C7:F7\").setHorizontalAlignment(HorizontalAlignment.Center);\n        worksheet.getRange(\"C33:F33\").setHorizontalAlignment(HorizontalAlignment.Center);\n\n        //Set range's border\n        worksheet.getRange(\"B9:F12\").getBorders().setLineStyle(BorderLineStyle.Thin);\n        worksheet.getRange(\"B9:F12\").getBorders().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"B9:F12\").getBorders().setTintAndShade(0.39994506668294322);\n\n        worksheet.getRange(\"B15:F16\").getBorders().setLineStyle(BorderLineStyle.Thin);\n        worksheet.getRange(\"B15:F16\").getBorders().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"B15:F16\").getBorders().setTintAndShade(0.39994506668294322);\n\n        worksheet.getRange(\"B19:F23\").getBorders().setLineStyle(BorderLineStyle.Thin);\n        worksheet.getRange(\"B19:F23\").getBorders().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"B19:F23\").getBorders().setTintAndShade(0.39994506668294322);\n\n        worksheet.getRange(\"B26:F31\").getBorders().setLineStyle(BorderLineStyle.Thin);\n        worksheet.getRange(\"B26:F31\").getBorders().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"B26:F31\").getBorders().setTintAndShade(0.39994506668294322);\n\n        worksheet.getRange(\"B34:F37\").getBorders().setLineStyle(BorderLineStyle.Thin);\n        worksheet.getRange(\"B34:F37\").getBorders().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"B34:F37\").getBorders().setTintAndShade(0.39994506668294322);\n\n        //Set range's fill.\n        worksheet.getRange(\"F9:F12\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F9:F12\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"C12:E12\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"C12:E12\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"F15:F16\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F15:F16\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"C16:E16\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"C16:E16\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"F19:F23\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F19:F23\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"C21:E23\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"C21:E23\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"F26:F31\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F26:F31\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"C29:E31\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"C29:E31\").getInterior().setTintAndShade(-0.0499893185216834);\n        worksheet.getRange(\"C34:E37\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"C34:E37\").getInterior().setTintAndShade(-0.0499893185216834);\n\n        //create a new group of sparklines.\n        ISparklineGroup sparklineGroup = worksheet.getRange(\"F34:F37\").getSparklineGroups().add(SparkType.Line, \"C34:E37\");\n\n        sparklineGroup.getSeriesColor().setThemeColor(ThemeColor.Accent3);\n        sparklineGroup.getSeriesColor().setTintAndShade(-0.249977111117893);\n        sparklineGroup.getPoints().getNegative().getColor().setThemeColor(ThemeColor.Accent4);\n        sparklineGroup.getPoints().getMarkers().getColor().setThemeColor(ThemeColor.Accent4);\n        sparklineGroup.getPoints().getMarkers().getColor().setTintAndShade(-0.249977111117893);\n        sparklineGroup.getPoints().getHighpoint().getColor().setThemeColor(ThemeColor.Accent4);\n        sparklineGroup.getPoints().getHighpoint().getColor().setTintAndShade(-0.249977111117893);\n        sparklineGroup.getPoints().getLowpoint().getColor().setThemeColor(ThemeColor.Accent4);\n        sparklineGroup.getPoints().getLowpoint().getColor().setTintAndShade(-0.249977111117893);\n        sparklineGroup.getPoints().getFirstpoint().getColor().setThemeColor(ThemeColor.Accent4);\n        sparklineGroup.getPoints().getFirstpoint().getColor().setTintAndShade(-0.249977111117893);\n        sparklineGroup.getPoints().getLastpoint().getColor().setThemeColor(ThemeColor.Accent4);\n        sparklineGroup.getPoints().getLastpoint().getColor().setTintAndShade(-0.249977111117893);\n        sparklineGroup.getPoints().getNegative().setVisible(false);\n        sparklineGroup.getPoints().getFirstpoint().setVisible(false);\n        sparklineGroup.getPoints().getLastpoint().setVisible(false);\n\n        //Add chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 9.75, 576.95, 590.25, 237);\n        shape.setName(\"Chart 3\");\n\n        //Add Series.\n        ISeries series1 = shape.getChart().getSeriesCollection().newSeries();\n        series1.setFormula(\"=SERIES('Customer Profitability'!$B$34,'Customer Profitability'!$C$33:$E$33,'Customer Profitability'!$C$34:$E$34,1)\");\n        series1.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent2);\n\n        ISeries series2 = shape.getChart().getSeriesCollection().newSeries();\n        series2.setFormula(\"=SERIES('Customer Profitability'!$B$35,'Customer Profitability'!$C$33:$E$33,'Customer Profitability'!$C$35:$E$35,2)\");\n        series2.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent4);\n\n        ISeries series3 = shape.getChart().getSeriesCollection().newSeries();\n        series3.setFormula(\"=SERIES('Customer Profitability'!$B$36,'Customer Profitability'!$C$33:$E$33,'Customer Profitability'!$C$36:$E$36,3)\");\n        series3.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent3);\n\n        ISeries series4 = shape.getChart().getSeriesCollection().newSeries();\n        series4.setFormula(\"=SERIES('Customer Profitability'!$B$37,'Customer Profitability'!$C$33:$E$33,'Customer Profitability'!$C$37:$E$37,4)\");\n        series4.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent5);\n\n        //Set the char group's Overlap and GapWidth.\n        shape.getChart().getColumnGroups().get(0).setOverlap(0);\n        shape.getChart().getColumnGroups().get(0).setGapWidth(199);\n\n        //Set the chart's title format.\n        IChartTitle chartTitle = shape.getChart().getChartTitle();\n        chartTitle.setText(\"Summary Metrics per Customer Segment\");\n        chartTitle.getFont().setThemeFont(ThemeFont.Major);\n        chartTitle.getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        chartTitle.getFont().setSize(20);\n\n        //Set the chart legend's position.\n        shape.getChart().getLegend().setPosition(LegendPosition.Top);\n\n        //Set category axis format.\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n        category_axis.setHasTitle(true);\n        category_axis.getAxisTitle().setText(\"SEGMENT\");\n        category_axis.getAxisTitle().getFont().setSize(9);\n        category_axis.getAxisTitle().getFont().setThemeFont(ThemeFont.Minor);\n\n        //Set value axis format.\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        value_axis.setCrossesAt(-200000);\n        value_axis.setHasMinorGridlines(true);\n        value_axis.getMinorGridlines().getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        value_axis.getMinorGridlines().getFormat().getLine().getColor().setBrightness(0.95);\n\n        //Create customize theme.\n        ITheme theme = new Theme(\"test\");\n        theme.getThemeColorScheme().get(ThemeColor.Dark1).setRGB(Color.FromArgb(0, 0, 0));\n        theme.getThemeColorScheme().get(ThemeColor.Light1).setRGB(Color.FromArgb(255, 255, 255));\n        theme.getThemeColorScheme().get(ThemeColor.Dark2).setRGB(Color.FromArgb(77, 70, 70));\n        theme.getThemeColorScheme().get(ThemeColor.Light2).setRGB(Color.FromArgb(255, 251, 239));\n        theme.getThemeColorScheme().get(ThemeColor.Accent1).setRGB(Color.FromArgb(255, 225, 132));\n        theme.getThemeColorScheme().get(ThemeColor.Accent2).setRGB(Color.FromArgb(102, 173, 166));\n        theme.getThemeColorScheme().get(ThemeColor.Accent3).setRGB(Color.FromArgb(131, 172, 121));\n        theme.getThemeColorScheme().get(ThemeColor.Accent4).setRGB(Color.FromArgb(254, 191, 102));\n        theme.getThemeColorScheme().get(ThemeColor.Accent5).setRGB(Color.FromArgb(219, 112, 87));\n        theme.getThemeColorScheme().get(ThemeColor.Accent6).setRGB(Color.FromArgb(165, 115, 137));\n        theme.getThemeColorScheme().get(ThemeColor.Hyperlink).setRGB(Color.FromArgb(102, 173, 166));\n        theme.getThemeColorScheme().get(ThemeColor.FollowedHyperlink).setRGB(Color.FromArgb(165, 115, 137));\n        theme.getThemeFontScheme().getMajor().get(FontLanguageIndex.Latin).setName(\"Marion\");\n        theme.getThemeFontScheme().getMinor().get(FontLanguageIndex.Latin).setName(\"Marion\");\n\n        //Apply the above custom theme.\n        workbook.setTheme(theme);\n\n        //Set active cell.\n        worksheet.getRange(\"B7\").activate();\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.MonthlyBusinessBudget": "\n\n        //Load template file Monthly business budget.xlsx from resource\n        workbook.open(this.getResourceStream(\"xlsx/Monthly business budget.xlsx\"));\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        // change table style to TableStyleMedium14\n        ITable totalsTable = worksheet.getTables().get(\"TotalsTable\");\n        totalsTable.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium14\"));\n\n        // change chart type to column stacked\n        IChart chart = worksheet.getShapes().get(0).getChart();\n        chart.setChartType(ChartType.ColumnStacked);\n        chart.getColumnGroups().get(0).setOverlap(100);\n\n        // set a bigger font size for chart title\n        chart.getChartTitle().getFont().setSize(24);\n        chart.getChartTitle().getFont().setBold(true);\n\n        // give a one color gradient to chart area\n        chart.getChartArea().getFormat().getFill().oneColorGradient(GradientStyle.Horizontal, 1, 0);\n        chart.getChartArea().getFormat().getFill().getGradientStops().get(0).getColor().setObjectThemeColor(ThemeColor.Accent6);\n        chart.getChartArea().getFormat().getFill().getGradientStops().get(0).getColor().setBrightness(0.8);\n\n        // make fill of plot area transparant\n        chart.getPlotArea().getFormat().getFill().setTransparency(1);\n\n        // config series1 of chart\n        ISeries series1 = chart.getSeriesCollection().get(0);\n        series1.setHasDataLabels(true);\n        series1.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent1);\n\n        // give some formatting for the first point of series1\n        IPoint point1 = series1.getPoints().get(0);\n        point1.getFormat().getLine().getColor().setRGB(Color.GetBlack());\n        point1.getFormat().getLine().setWeight(2);\n        point1.getFormat().getLine().setDashStyle(LineDashStyle.Dash);\n\n        // config series2 of chart\n        ISeries series2 = chart.getSeriesCollection().get(1);\n        series2.setHasDataLabels(true);\n        series2.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent6);\n        series2.getDataLabels().getFont().getColor().setRGB(Color.GetRed());\n\n        // get the value axis\n        IAxis value_axis = chart.getAxes().item(AxisType.Value, AxisGroup.Primary);\n\n        // show the display unit as thousands for value axis\n        value_axis.setHasDisplayUnitLabel(true);\n        value_axis.setDisplayUnit(DisplayUnit.Thousands);\n\n        // give a color for the major grid line of value axis\n        value_axis.getMajorGridlines().getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Accent6);\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.ToDoListWithProgressTracker": "\n\n        Object[] data = new Object[][]{\n                {\"TASK\", \"PRIORITY\", \"STATUS\", \"START DATE\", \"DUE DATE\", \"% COMPLETE\", \"DONE?\", \"NOTES\"},\n                {\"First Thing I Need To Do\", \"Normal\", \"Not Started\", null, null, 0, null, null},\n                {\"Other Thing I Need To Finish\", \"High\", \"In Progress\", null, null, 0.5, null, null},\n                {\"Something Else To Get Done\", \"Low\", \"Complete\", null, null, 1, null, null},\n                {\"More Errands And Things\", \"Normal\", \"In Progress\", null, null, 0.75, null, null},\n                {\"So Much To Get Done This Week\", \"High\", \"In Progress\", null, null, 0.25, null, null}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.setName(\"To-Do List\");\n        worksheet.setTabColor(Color.FromArgb(148, 112, 135));\n        worksheet.getSheetView().setDisplayGridlines(false);\n\n        //Set Value.\n        worksheet.getRange(\"B1\").setValue(\"To-Do List\");\n        worksheet.getRange(\"B2:I7\").setValue(data);\n\n        //Set formula.\n        worksheet.getRange(\"E3\").setFormula(\"=TODAY()\");\n        worksheet.getRange(\"E4\").setFormula(\"=TODAY()-30\");\n        worksheet.getRange(\"E5\").setFormula(\"=TODAY()-23\");\n        worksheet.getRange(\"E6\").setFormula(\"=TODAY()-15\");\n        worksheet.getRange(\"E7\").setFormula(\"=TODAY()-5\");\n\n        //Change the range's RowHeight and ColumnWidth.\n        worksheet.setStandardHeight(30);\n        worksheet.setStandardWidth(8.88671875);\n        worksheet.getRange(\"1:1\").setRowHeight(72.75);\n        worksheet.getRange(\"2:2\").setRowHeight(33);\n        worksheet.getRange(\"3:7\").setRowHeight(30.25);\n        worksheet.getRange(\"A:A\").setColumnWidth(2.77734375);\n        worksheet.getRange(\"B:B\").setColumnWidth(29.109375);\n        worksheet.getRange(\"C:G\").setColumnWidth(16.77734375);\n        worksheet.getRange(\"H:H\").setColumnWidth(10.77734375);\n        worksheet.getRange(\"I:I\").setColumnWidth(29.6640625);\n        worksheet.getRange(\"J:J\").setColumnWidth(2.77734375);\n\n        //Modify the build in name getStyles().\n        IStyle nameStyle_Normal = workbook.getStyles().get(\"Normal\");\n        nameStyle_Normal.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Normal.setWrapText(true);\n        nameStyle_Normal.getFont().setThemeFont(ThemeFont.Minor);\n        nameStyle_Normal.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Normal.getFont().setTintAndShade(0.25);\n\n        IStyle nameStyle_Title = workbook.getStyles().get(\"Title\");\n        nameStyle_Title.setHorizontalAlignment(HorizontalAlignment.General);\n        nameStyle_Title.setVerticalAlignment(VerticalAlignment.Bottom);\n        nameStyle_Title.getFont().setThemeFont(ThemeFont.Minor);\n        nameStyle_Title.getFont().setBold(true);\n        nameStyle_Title.getFont().setSize(38);\n        nameStyle_Title.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Title.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Title.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        nameStyle_Title.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Dark1);\n        nameStyle_Title.setIncludeAlignment(true);\n        nameStyle_Title.setIncludeBorder(true);\n\n        IStyle nameStyle_Percent = workbook.getStyles().get(\"Percent\");\n        nameStyle_Percent.setHorizontalAlignment(HorizontalAlignment.Right);\n        nameStyle_Percent.setIndentLevel(1);\n        nameStyle_Percent.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Percent.setIncludeAlignment(true);\n\n        IStyle nameStyle_Heading_1 = workbook.getStyles().get(\"Heading 1\");\n        nameStyle_Heading_1.setHorizontalAlignment(HorizontalAlignment.Left);\n        nameStyle_Heading_1.setVerticalAlignment(VerticalAlignment.Bottom);\n        nameStyle_Heading_1.getFont().setThemeFont(ThemeFont.Major);\n        nameStyle_Heading_1.getFont().setBold(false);\n        nameStyle_Heading_1.getFont().setSize(11);\n        nameStyle_Heading_1.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Heading_1.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Heading_1.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        nameStyle_Heading_1.setIncludeNumber(true);\n        nameStyle_Heading_1.setIncludeAlignment(true);\n        nameStyle_Heading_1.setIncludeBorder(false);\n\n        IStyle nameStyle_Heading_2 = workbook.getStyles().get(\"Heading 2\");\n        nameStyle_Heading_2.setHorizontalAlignment(HorizontalAlignment.Right);\n        nameStyle_Heading_2.setIndentLevel(2);\n        nameStyle_Heading_2.setVerticalAlignment(VerticalAlignment.Bottom);\n        nameStyle_Heading_2.getFont().setThemeFont(ThemeFont.Major);\n        nameStyle_Heading_2.getFont().setBold(false);\n        nameStyle_Heading_2.getFont().setSize(11);\n        nameStyle_Heading_2.getFont().setThemeColor(ThemeColor.Dark2);\n        nameStyle_Heading_2.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        nameStyle_Heading_2.setIncludeNumber(true);\n        nameStyle_Heading_2.setIncludeAlignment(true);\n\n        //Create custom name styes.\n        IStyle nameStyle_Done = workbook.getStyles().add(\"Done\");\n        nameStyle_Done.setNumberFormat(\"\\\"Done\\\";\\\"\\\";\\\"\\\"\");\n        nameStyle_Done.setHorizontalAlignment(HorizontalAlignment.Center);\n        nameStyle_Done.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Done.getFont().setThemeFont(ThemeFont.Minor);\n        nameStyle_Done.getFont().setThemeColor(ThemeColor.Light1);\n\n        IStyle nameStyle_Date = workbook.getStyles().add(\"Date\");\n        nameStyle_Date.setNumberFormat(\"yyyy/m/d\");\n        nameStyle_Date.setHorizontalAlignment(HorizontalAlignment.Right);\n        nameStyle_Date.setVerticalAlignment(VerticalAlignment.Center);\n        nameStyle_Date.getFont().setThemeFont(ThemeFont.Minor);\n        nameStyle_Date.getFont().setThemeColor(ThemeColor.Dark1);\n        nameStyle_Date.getFont().setTintAndShade(0.249946592608417);\n        nameStyle_Date.setIncludeBorder(false);\n        nameStyle_Date.setIncludePatterns(false);\n\n        //Apply the above name styles on ranges.\n        worksheet.getRange(\"B1:I1\").setStyle(workbook.getStyles().get(\"Title\"));\n        worksheet.getRange(\"B2:D2\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n        worksheet.getRange(\"E2:F2\").setStyle(workbook.getStyles().get(\"Heading 2\"));\n        worksheet.getRange(\"G2\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n        worksheet.getRange(\"H2:H7\").setStyle(workbook.getStyles().get(\"Done\"));\n        worksheet.getRange(\"I2\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n        worksheet.getRange(\"E3:F7\").setStyle(workbook.getStyles().get(\"Date\"));\n        worksheet.getRange(\"G3:G7\").setStyle(workbook.getStyles().get(\"Percent\"));\n\n        //Add one custom table style.\n        ITableStyle style = workbook.getTableStyles().add(\"To-do List\");\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Light1);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setTintAndShade(-0.14993743705557422);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Thin);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setThemeColor(ThemeColor.Light1);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setTintAndShade(-0.14993743705557422);\n\n        //Create a table and apply the above table style.\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B2:I7\"), true);\n        table.setName(\"ToDoList\");\n        table.setTableStyle(style);\n\n        //Use table formula in table range.\n        worksheet.getRange(\"F3\").setFormula(\"=[@[START DATE]]+7\");\n        worksheet.getRange(\"F4\").setFormula(\"=[@[START DATE]]+35\");\n        worksheet.getRange(\"F5\").setFormula(\"=[@[START DATE]]+10\");\n        worksheet.getRange(\"F6\").setFormula(\"=[@[START DATE]]+36\");\n        worksheet.getRange(\"F7\").setFormula(\"=[@[START DATE]]+14\");\n        worksheet.getRange(\"H3:H7\").setFormula(\"=--([@[% COMPLETE]]>=1)\");\n\n        //Add a expression rule.\n        IFormatCondition expression = (IFormatCondition) worksheet.getRange(\"B3:I7\").getFormatConditions().add(FormatConditionType.Expression, FormatConditionOperator.Between, \"=AND($G3=0,$G3<>\\\"\\\")\", null);\n        expression.getInterior().setThemeColor(ThemeColor.Light1);\n        expression.getInterior().setTintAndShade(-0.0499893185216834);\n\n        //Add a data bar rule.\n        IDataBar dataBar = worksheet.getRange(\"G3:G7\").getFormatConditions().addDatabar();\n        dataBar.setBarFillType(DataBarFillType.Solid);\n        dataBar.getBarColor().setThemeColor(ThemeColor.Accent1);\n        dataBar.getBarColor().setTintAndShade(0.39997558519241921);\n\n        //Add an icon set rule.\n        IIconSetCondition iconSet = worksheet.getRange(\"H3:H7\").getFormatConditions().addIconSetCondition();\n        iconSet.setIconSet(workbook.getIconSets().get(IconSetType.Icon3Symbols));\n        iconSet.getIconCriteria().get(2).setOperator(FormatConditionOperator.GreaterEqual);\n        iconSet.getIconCriteria().get(2).setValue(1);\n        iconSet.getIconCriteria().get(2).setType(ConditionValueTypes.Number);\n        iconSet.getIconCriteria().get(1).setOperator(FormatConditionOperator.GreaterEqual);\n        iconSet.getIconCriteria().get(1).setValue(0);\n        iconSet.getIconCriteria().get(1).setType(ConditionValueTypes.Number);\n\n        //Add a cell value rule.\n        IFormatCondition cellValue = (IFormatCondition) worksheet.getRange(\"H3:H7\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.NotEqual, 1, null);\n        cellValue.setStopIfTrue(true);\n\n        //Create list validations.\n        worksheet.getRange(\"C3:C7\").getValidation().add(ValidationType.List, ValidationAlertStyle.Warning, ValidationOperator.Between, \"Low, Normal, High\", null);\n        IValidation validation = worksheet.getRange(\"C3:C7\").getValidation();\n        validation.setErrorMessage(\"Select entry from the list. Select CANCEL, then press ALT+DOWN ARROW to navigate the list. Select ENTER to make selection\");\n\n        worksheet.getRange(\"D3:D7\").getValidation().add(ValidationType.List, ValidationAlertStyle.Warning, ValidationOperator.Between, \"Not Started,In Progress, Deferred, Complete\", null);\n        validation = worksheet.getRange(\"D3:D7\").getValidation();\n        validation.setErrorMessage(\"Select entry from the list. Select CANCEL, then press ALT+DOWN ARROW to navigate the list. Select ENTER to make selection\");\n\n        worksheet.getRange(\"G3:G7\").getValidation().add(ValidationType.List, ValidationAlertStyle.Warning, ValidationOperator.Between, \"0%,25%,50%,75%,100%\", null);\n        validation = worksheet.getRange(\"G3:G7\").getValidation();\n        validation.setErrorMessage(\"Select entry from the list. Select CANCEL, then press ALT+DOWN ARROW to navigate the list. Select ENTER to make selection\");\n\n        //Create custom validation.\n        worksheet.getRange(\"F3:F7\").getValidation().add(ValidationType.Custom, ValidationAlertStyle.Warning, ValidationOperator.Between, \"=F3>=E3\", null);\n        validation = worksheet.getRange(\"F3:F7\").getValidation();\n        validation.setErrorMessage(\"The Due Date must be greater than or equal to the Start Date. Select YES to keep the value, NO to retry or CANCEL to clear the entry\");\n\n        //Create none validations, set inputmessage.\n        worksheet.getRange(\"B2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"B2\").getValidation();\n        validation.setInputMessage(\"Enter Task in this column under this heading. Use heading filters to find specific entries\");\n\n        worksheet.getRange(\"C2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"C2\").getValidation();\n        validation.setInputMessage(\"Select Priority in this column under this heading. Press ALT+DOWN ARROW to open the drop-down list, then ENTER to make selection\");\n\n        worksheet.getRange(\"D2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"D2\").getValidation();\n        validation.setInputMessage(\"Select Status in this column under this heading.  Press ALT+DOWN ARROW to open the drop-down list, then ENTER to make selection\");\n\n        worksheet.getRange(\"E2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"E2\").getValidation();\n        validation.setInputMessage(\"Enter Start Date in this column under this heading\");\n\n        worksheet.getRange(\"F2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"F2\").getValidation();\n        validation.setInputMessage(\"Enter Due Date in this column under this heading\");\n\n        worksheet.getRange(\"G2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"G2\").getValidation();\n        validation.setInputMessage(\"Select % Complete in this column. Press ALT+DOWN ARROW to open the drop-down list, then ENTER to make selection. A status bar indicates progress toward completion\");\n\n        worksheet.getRange(\"H2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"H2\").getValidation();\n        validation.setInputMessage(\"Icon indicator for task completion in this column under this heading is automatically updated as tasks complete\");\n\n        worksheet.getRange(\"I2\").getValidation().add(ValidationType.None, ValidationAlertStyle.Stop, ValidationOperator.Between, null, null);\n        validation = worksheet.getRange(\"I2\").getValidation();\n        validation.setInputMessage(\"Enter Notes in this column under this heading\");\n\n        //Create customize theme.\n        ITheme theme = new Theme(\"test\");\n        theme.getThemeColorScheme().get(ThemeColor.Dark1).setRGB(Color.FromArgb(0, 0, 0));\n        theme.getThemeColorScheme().get(ThemeColor.Light1).setRGB(Color.FromArgb(255, 255, 255));\n        theme.getThemeColorScheme().get(ThemeColor.Dark2).setRGB(Color.FromArgb(37, 28, 34));\n        theme.getThemeColorScheme().get(ThemeColor.Light2).setRGB(Color.FromArgb(240, 248, 246));\n        theme.getThemeColorScheme().get(ThemeColor.Accent1).setRGB(Color.FromArgb(148, 112, 135));\n        theme.getThemeColorScheme().get(ThemeColor.Accent2).setRGB(Color.FromArgb(71, 166, 181));\n        theme.getThemeColorScheme().get(ThemeColor.Accent3).setRGB(Color.FromArgb(234, 194, 53));\n        theme.getThemeColorScheme().get(ThemeColor.Accent4).setRGB(Color.FromArgb(107, 192, 129));\n        theme.getThemeColorScheme().get(ThemeColor.Accent5).setRGB(Color.FromArgb(233, 115, 61));\n        theme.getThemeColorScheme().get(ThemeColor.Accent6).setRGB(Color.FromArgb(251, 147, 59));\n        theme.getThemeColorScheme().get(ThemeColor.Hyperlink).setRGB(Color.FromArgb(71, 166, 181));\n        theme.getThemeColorScheme().get(ThemeColor.FollowedHyperlink).setRGB(Color.FromArgb(148, 112, 135));\n        theme.getThemeFontScheme().getMajor().get(FontLanguageIndex.Latin).setName(\"Helvetica Neue\");\n        theme.getThemeFontScheme().getMinor().get(FontLanguageIndex.Latin).setName(\"Bookman Old Style\");\n\n        //Apply the above custom theme.\n        workbook.setTheme(theme);\n\n        //Set active cell.\n        worksheet.getRange(\"G4\").activate();\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.EventBudget": "\n\n        //Load template file Event budget.xlsx from resource\n        workbook.open(this.getResourceStream(\"xlsx/Event budget.xlsx\"));\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        //change range B2's font size.\n        worksheet.getRange(\"B2\").getFont().setSize(22);\n\n        //change range E4's font style to bold.\n        worksheet.getRange(\"E4\").getFont().setBold(true);\n\n        //change table style.\n        worksheet.getTables().get(\"tblAdmissions\").setTableStyle(workbook.getTableStyles().get(\"TableStyleLight10\"));\n        worksheet.getTables().get(\"tblAds\").setTableStyle(workbook.getTableStyles().get(\"TableStyleLight10\"));\n        worksheet.getTables().get(\"tblVendors\").setTableStyle(workbook.getTableStyles().get(\"TableStyleLight10\"));\n        worksheet.getTables().get(\"tblItems\").setTableStyle(workbook.getTableStyles().get(\"TableStyleLight10\"));\n\n        //modify range F4:G5's cell style.\n        worksheet.getRange(\"F4:G5\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F4:G5\").getInterior().setTintAndShade(-0.15);\n        worksheet.getRange(\"F4:G5\").getFont().setThemeFont(ThemeFont.Major);\n        worksheet.getRange(\"F4:G5\").getFont().setSize(12);\n        worksheet.getRange(\"F4:G5\").getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.None);\n        worksheet.getRange(\"F5:G5\").setNumberFormat(\"$#,##0.00\");\n\n        //modify table columns' style.\n        worksheet.getRange(\"F8:G11, F15:G18, F22:G25, F29:G33\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F8:G11, F15:G18, F22:G25, F29:G33\").getInterior().setTintAndShade(-0.15);\n        worksheet.getRange(\"E8:G11, E15:G18, E22:G25, E29:G33\").setNumberFormat(\"$#,##0.00\");\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.IncomeStatement": "\n\n        //Load template file Income statement.xlsx from resource\n        workbook.open(this.getResourceStream(\"xlsx/Income statement.xlsx\"));\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        //set values\n        Object[][] RevData = new Object[][]{\n                {454597, 687802, 469902, 335846, 776667, 806250, 552036, 346734, 787205, 720496, 686963, 835688},\n                {821687, 679306, 568503, 715827, 627459, 822625, 271114, 797991, 823966, 304521, 758665, 322694},\n                {426510, 767295, 799314, 408533, 353862, 261403, 344075, 277433, 289814, 386539, 625447, 489178},\n        };\n\n        Object[][] CostData = new Object[][]{\n                {113053, 134668, 192784, 199522, 163169, 109389, 187568, 170346, 130920, 180119, 184725, 162780},\n                {42667, 14921, 42007, 10264, 48864, 10360, 42378, 31445, 15208, 34418, 37529, 22077},\n        };\n\n        Object[][] OpeData = new Object[][]{\n                {264290, 282301, 266021, 272333, 285359, 256072, 289430, 280307, 278656, 272674, 299784, 284062},\n                {29536, 28709, 27579, 27862, 26750, 26970, 27847, 27680, 28375, 25474, 27514, 26753},\n                {23473, 22902, 21680, 19232, 23077, 20839, 19461, 15504, 21117, 20102, 16322, 21160},\n                {11340, 11514, 11207, 9186, 9243, 10003, 11092, 10761, 9032, 10366, 9571, 11774},\n                {9562, 10787, 11809, 9949, 9559, 9753, 11761, 10702, 10545, 10347, 10593, 10719},\n                {9410, 9646, 9969, 10758, 9183, 10777, 11249, 9763, 9445, 11218, 10579, 10203},\n        };\n\n        Object[][] EarnData = new Object[][]{\n                {1038, 1430, 627, 1352, 765, 1190, 1082, 1261, 1240, 645, 552, 669},\n                {1227, 1372, 544, 1172, 1479, 821, 891, 1361, 1187, 760, 1126, 873},\n                {661, 1342, 1119, 1085, 887, 1274, 883, 582, 601, 845, 948, 817},\n        };\n\n        worksheet.getRange(\"E10:P12\").setValue(RevData);\n        worksheet.getRange(\"E15:P16\").setValue(CostData);\n        worksheet.getRange(\"E21:P26\").setValue(OpeData);\n        worksheet.getRange(\"E31:P33\").setValue(EarnData);\n\n        //set formulars\n        worksheet.getRange(\"E13:P13\").setFormula(\"=SUM(E10:E12)\");\n        worksheet.getRange(\"E17:P17\").setFormula(\"=SUM(E15:E16)\");\n        worksheet.getRange(\"E19:P19\").setFormula(\"=E13-E17\");\n        worksheet.getRange(\"E27:P27\").setFormula(\"=SUM(E21:E26)\");\n        worksheet.getRange(\"E29:P29\").setFormula(\"=E19-E27\");\n        worksheet.getRange(\"E34:P34\").setFormula(\"=E29-E31+E32-E33\");\n        worksheet.getRange(\"E36:P36\").setFormula(\"=E34*0.17\");\n        worksheet.getRange(\"E38:P38\").setFormula(\"=E34-E36\");\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.PersonalNetWorthCalculator": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //-------------------------Set RowHeight & Width-----------------------------------\n        worksheet.setStandardHeight(30);\n        worksheet.setStandardWidth(8.43);\n\n        worksheet.getRange(\"1:1\").setRowHeight(278.25);\n        worksheet.getRange(\"2:4\").setRowHeight(30.25);\n        worksheet.getRange(\"8:8\").setRowHeight(55.5);\n        worksheet.getRange(\"9:30\").setRowHeight(30.25);\n        worksheet.getRange(\"33:33\").setRowHeight(55.5);\n        worksheet.getRange(\"34:44\").setRowHeight(43.5);\n        worksheet.getRange(\"A:A\").setColumnWidth(2.777);\n        worksheet.getRange(\"B:B\").setColumnWidth(32.887);\n        worksheet.getRange(\"C:C\").setColumnWidth(24.219);\n        worksheet.getRange(\"D:D\").setColumnWidth(10.109);\n        worksheet.getRange(\"E:E\").setColumnWidth(61.332);\n        worksheet.getRange(\"F:F\").setColumnWidth(2.777);\n\n\n        //-------------------------Set Table Value & Formulas-------------------------------\n        ITable assetsTable = worksheet.getTables().add(worksheet.getRange(\"B9:D30\"), true);\n        assetsTable.setName(\"Assets\");\n        worksheet.getRange(\"B8\").setValue(\"Assets\");\n        worksheet.getRange(\"B9:D30\").setValue(new Object[][]{\n                {\"Category\", \"Item\", \"Value\"},\n                {\"Real Estate\", \"Home\", 560000},\n                {\"Real Estate\", \"Other\", 255000},\n                {\"Investments\", \"Retirement accounts\", 98000},\n                {\"Investments\", \"Stocks\", 53000},\n                {\"Investments\", \"Bonds\", 25000},\n                {\"Investments\", \"Mutual funds\", 33000},\n                {\"Investments\", \"CDs\", 74000},\n                {\"Investments\", \"Bullion\", 20000},\n                {\"Investments\", \"Trust funds\", 250000},\n                {\"Investments\", \"Health savings account\", 18000},\n                {\"Investments\", \"Face value of life insurance policy\", 85000},\n                {\"Investments\", \"Other\", 20000},\n                {\"Cash\", \"Checking accounts\", 14500},\n                {\"Cash\", \"Savings accounts\", 5000},\n                {\"Cash\", \"Other\", 2000},\n                {\"Personal Property\", \"Cars\", 55000},\n                {\"Personal Property\", \"Other vehicles\", 85000},\n                {\"Personal Property\", \"Furnishings\", 100000},\n                {\"Personal Property\", \"Collectibles\", 50000},\n                {\"Personal Property\", \"Jewelry\", 60000},\n                {\"Personal Property\", \"Other luxury goods\", 40000},\n        });\n\n        ITable debtsTable = worksheet.getTables().add(worksheet.getRange(\"B34:C44\"), true);\n        debtsTable.setName(\"Debts\");\n        worksheet.getRange(\"B33\").setValue(\"Debts\");\n        worksheet.getRange(\"B34:C44\").setValue(new Object[][]{\n                {\"Category\", \"Value\"},\n                {\"Mortgages\", 400000},\n                {\"Home equity loans\", 50000},\n                {\"Car loans\", 30000},\n                {\"Personal loans\", 0},\n                {\"Credit cards\", 0},\n                {\"Student loans\", 10000},\n                {\"Loans against investments\", 20000},\n                {\"Life insurance loans\", 5000},\n                {\"Other installment loans\", 10000},\n                {\"Other debts\", 50000},\n        });\n\n        worksheet.getRange(\"B1:C1\").merge();\n        worksheet.getRange(\"B1\").setValue(\"Personal\\r\\nNet\\r\\nWorth\");\n        worksheet.getRange(\"B2\").setFormula(\"=\\\"Total \\\"&TotalAssetsLabel\");\n        worksheet.getRange(\"B3\").setFormula(\"=\\\"Total \\\"&TotalDebtsLabel\");\n        worksheet.getRange(\"B4\").setFormula(\"=NetWorthLabel\");\n        worksheet.getRange(\"C2\").setFormula(\"=TotalAssets\");\n        worksheet.getRange(\"C3\").setFormula(\"=TotalDebts\");\n        worksheet.getRange(\"C4\").setFormula(\"=NetWorth\");\n\n        worksheet.getNames().add(\"TotalAssets\", \"=SUM(Assets[Value])\");\n        worksheet.getNames().add(\"TotalDebts\", \"=SUM(Debts[Value])\");\n        worksheet.getNames().add(\"NetWorth\", \"=TotalAssets-TotalDebts\");\n        worksheet.getNames().add(\"TotalAssetsLabel\", \"=Sheet1!$B$8\");\n        worksheet.getNames().add(\"TotalDebtsLabel\", \"=Sheet1!$B$33\");\n        worksheet.getNames().add(\"NetWorthLabel\", \"=\\\"Net Worth\\\"\");\n\n\n        //---------------------------Set Table Style---------------------------\n        ITableStyle assetsTableStyle = workbook.getTableStyles().add(\"Assets\");\n        workbook.setDefaultTableStyle(\"Assets\");\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setColor(Color.FromArgb(64, 64, 64));\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setColor(Color.FromArgb(128, 128, 128));\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Dotted);\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.None);\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.None);\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.None);\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.None);\n\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).getInterior().setColor(Color.GetWhite());\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).setStripeSize(1);\n\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.LastColumn).getFont().setBold(true);\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.LastColumn).getFont().setColor(Color.FromArgb(61, 125, 137));\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.LastColumn).getInterior().setColor(Color.GetWhite());\n\n        assetsTableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setColor(Color.FromArgb(61, 125, 137));\n\n\n        ITableStyle debtsTableStyle = workbook.getTableStyles().add(\"Debts\");\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setColor(Color.FromArgb(64, 64, 64));\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setColor(Color.FromArgb(128, 128, 128));\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Dotted);\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.None);\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.None);\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.None);\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.None);\n\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).getInterior().setColor(Color.GetWhite());\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).setStripeSize(1);\n\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.LastColumn).getFont().setBold(true);\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.LastColumn).getFont().setColor(Color.FromArgb(146, 75, 12));\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.LastColumn).getInterior().setColor(Color.GetWhite());\n\n        debtsTableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setColor(Color.FromArgb(218, 113, 18));\n\n\n        //----------------------------Set Named Styles-------------------------\n        IStyle normalStyle = workbook.getStyles().get(\"Normal\");\n        normalStyle.getFont().setName(\"Century Gothic\");\n        normalStyle.getFont().setSize(12);\n        normalStyle.getFont().setColor(Color.FromArgb(64, 64, 64));\n        normalStyle.getInterior().setColor(Color.FromArgb(243, 243, 236));\n        normalStyle.getInterior().setPatternColor(Color.FromArgb(243, 243, 236));\n        normalStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        normalStyle.setIndentLevel(1);\n        normalStyle.setVerticalAlignment(VerticalAlignment.Center);\n        normalStyle.setWrapText(true);\n\n        IStyle titleStyle = workbook.getStyles().get(\"Title\");\n        titleStyle.setIncludeAlignment(true);\n        titleStyle.setVerticalAlignment(VerticalAlignment.Center);\n        titleStyle.setWrapText(true);\n        titleStyle.getFont().setName(\"Century Gothic\");\n        titleStyle.getFont().setSize(66);\n        titleStyle.getFont().setColor(Color.FromArgb(64, 64, 64));\n        titleStyle.setIncludePatterns(true);\n        titleStyle.getInterior().setColor(Color.FromArgb(243, 243, 236));\n\n        IStyle heading1Style = workbook.getStyles().get(\"Heading 1\");\n        heading1Style.setIncludeAlignment(true);\n        heading1Style.setHorizontalAlignment(HorizontalAlignment.Left);\n        heading1Style.setIndentLevel(4);\n        heading1Style.setVerticalAlignment(VerticalAlignment.Center);\n        heading1Style.getFont().setName(\"Century Gothic\");\n        heading1Style.getFont().setBold(false);\n        heading1Style.getFont().setSize(16);\n        heading1Style.getFont().setColor(Color.FromArgb(64, 64, 64));\n        heading1Style.setIncludeBorder(false);\n        heading1Style.setIncludePatterns(true);\n        heading1Style.getInterior().setColor(Color.FromArgb(243, 243, 236));\n\n        IStyle heading2Style = workbook.getStyles().get(\"Heading 2\");\n        heading2Style.setIncludeNumber(true);\n        heading2Style.setNumberFormat(\"$#,##0\");\n        heading2Style.setIncludeAlignment(true);\n        heading2Style.setHorizontalAlignment(HorizontalAlignment.Right);\n        heading2Style.setIndentLevel(2);\n        heading2Style.setVerticalAlignment(VerticalAlignment.Center);\n        heading2Style.getFont().setName(\"Century Gothic\");\n        heading2Style.getFont().setSize(16);\n        heading2Style.getFont().setColor(Color.FromArgb(64, 64, 64));\n        heading2Style.setIncludeBorder(false);\n        heading2Style.setIncludePatterns(true);\n        heading2Style.getInterior().setColor(Color.FromArgb(243, 243, 236));\n\n        IStyle heading3Style = workbook.getStyles().get(\"Heading 3\");\n        heading3Style.setIncludeAlignment(true);\n        heading3Style.setHorizontalAlignment(HorizontalAlignment.Left);\n        heading3Style.setVerticalAlignment(VerticalAlignment.Bottom);\n        heading3Style.setIncludeBorder(false);\n        heading3Style.getFont().setName(\"Century Gothic\");\n        heading3Style.getFont().setBold(false);\n        heading3Style.getFont().setSize(27);\n        heading3Style.getFont().setColor(Color.FromArgb(64, 64, 64));\n        heading3Style.setIncludePatterns(true);\n        heading3Style.getInterior().setColor(Color.FromArgb(243, 243, 236));\n\n        IStyle heading4Style = workbook.getStyles().get(\"Heading 4\");\n        heading4Style.getFont().setName(\"Century Gothic\");\n        heading4Style.getFont().setSize(16);\n        heading4Style.getFont().setColor(Color.GetWhite());\n        heading4Style.getFont().setBold(false);\n\n        IStyle currencyStyle = workbook.getStyles().get(\"Currency\");\n        currencyStyle.setNumberFormat(\"$#,##0\");\n        currencyStyle.setIncludeAlignment(true);\n        currencyStyle.setHorizontalAlignment(HorizontalAlignment.Right);\n        currencyStyle.setIndentLevel(1);\n        currencyStyle.setVerticalAlignment(VerticalAlignment.Center);\n        currencyStyle.setIncludeFont(true);\n        currencyStyle.getFont().setBold(true);\n        currencyStyle.getFont().setName(\"Century Gothic\");\n        currencyStyle.getFont().setSize(12);\n\n\n        //----------------------------------Use Style---------------------------\n        assetsTable.setTableStyle(assetsTableStyle);\n        debtsTable.setTableStyle(debtsTableStyle);\n\n        worksheet.getSheetView().setDisplayGridlines(false);\n        worksheet.getRange(\"B2:B4\").setStyle(heading1Style);\n        worksheet.getRange(\"C2:C4\").setStyle(heading2Style);\n        worksheet.getRange(\"B9:D9\").setStyle(heading4Style);\n        worksheet.getRange(\"D10:D30\").setStyle(currencyStyle);\n        worksheet.getRange(\"D10:D30\").getFont().setColor(Color.FromArgb(61, 125, 137));\n\n        worksheet.getRange(\"B34:C34\").setStyle(heading4Style);\n        worksheet.getRange(\"C35:C44\").setStyle(currencyStyle);\n        worksheet.getRange(\"C35:C44\").getFont().setColor(Color.FromArgb(218, 113, 18));\n        worksheet.getRange(\"B1\").setStyle(titleStyle);\n        worksheet.getRange(\"B8\").setStyle(heading3Style);\n        worksheet.getRange(\"B33\").setStyle(heading3Style);\n\n        worksheet.getRange(\"B3:C3\").getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Hair);\n        worksheet.getRange(\"B3:C3\").getBorders().get(BordersIndex.EdgeTop).setColor(Color.FromArgb(128, 128, 128));\n        worksheet.getRange(\"B3:C3\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Hair);\n        worksheet.getRange(\"B3:C3\").getBorders().get(BordersIndex.EdgeBottom).setColor(Color.FromArgb(128, 128, 128));\n\n\n        //--------------------------------Add Shape--------------------------------\n        IShape recShape1 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 17.81, 282.75, 20.963, 21.75);\n        recShape1.getLine().getColor().setColorType(SolidColorType.None);\n        recShape1.getFill().getColor().setRGB(Color.FromArgb(60, 126, 138));\n        IShape recShape2 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 17.81, 312.75, 20.963, 21.75);\n        recShape2.getLine().getColor().setColorType(SolidColorType.None);\n        recShape2.getFill().getColor().setRGB(Color.FromArgb(218, 118, 13));\n        IShape recShape3 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 17.81, 342.75, 20.963, 21.75);\n        recShape3.getLine().getColor().setColorType(SolidColorType.None);\n        recShape3.getFill().getColor().setRGB(Color.FromArgb(84, 138, 57));\n\n        IShape pieShape = worksheet.getShapes().addChart(ChartType.Pie, 442.5, 26.25, 346, 350.25);\n        pieShape.getChart().setHasLegend(false);\n        pieShape.getChart().setHasTitle(false);\n        pieShape.getChart().getChartGroups().get(0).setFirstSliceAngle(180);\n        pieShape.setPlacement(Placement.Move);\n\n        IChartArea chartArea = pieShape.getChart().getChartArea();\n        chartArea.getFormat().getFill().setTransparency(1);\n        chartArea.getFormat().getLine().setTransparency(1);\n\n        ISeries chartSeries = pieShape.getChart().getSeriesCollection().newSeries();\n        chartSeries.setFormula(\"=SERIES('Sheet1'!$B$2:$B$4,,'Sheet1'!$C$2:$C$4,1)\");\n\n        chartSeries.setHasDataLabels(true);\n        chartSeries.getDataLabels().getFont().setName(\"Century Gothic\");\n        chartSeries.getDataLabels().getFont().setSize(20);\n        chartSeries.getDataLabels().getFont().setBold(true);\n        chartSeries.getDataLabels().getFont().getColor().setRGB(Color.GetWhite());\n        chartSeries.getDataLabels().setShowValue(false);\n        chartSeries.getDataLabels().setShowPercentage(true);\n        chartSeries.getDataLabels().setPosition(DataLabelPosition.Center);\n\n        chartSeries.getPoints().get(0).getFormat().getFill().getColor().setRGB(Color.FromArgb(60, 126, 138));\n        chartSeries.getPoints().get(1).getFormat().getFill().getColor().setRGB(Color.FromArgb(218, 118, 13));\n        chartSeries.getPoints().get(2).getFormat().getFill().getColor().setRGB(Color.FromArgb(84, 138, 57));\n        chartSeries.setExplosion(1);\n\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.BidTracker": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //***********************Set RowHeight & ColumnWidth***************\n        worksheet.setStandardHeight(30);\n        worksheet.getRange(\"1:1\").setRowHeight(57.75);\n        worksheet.getRange(\"2:9\").setRowHeight(30.25);\n        worksheet.getRange(\"A:A\").setColumnWidth(2.71);\n        worksheet.getRange(\"B:B\").setColumnWidth(11.71);\n        worksheet.getRange(\"C:C\").setColumnWidth(28);\n        worksheet.getRange(\"D:D\").setColumnWidth(22.425);\n        worksheet.getRange(\"E:E\").setColumnWidth(16.71);\n        worksheet.getRange(\"F:F\").setColumnWidth(28);\n        worksheet.getRange(\"G:H\").setColumnWidth(16.71);\n        worksheet.getRange(\"I:I\").setColumnWidth(2.71);\n\n        //**************************Set Table Value & Formulas*********************\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B2:H9\"), true);\n        worksheet.getRange(\"B2:H9\").setValue(new Object[][]{\n            {\"BID #\", \"DESCRIPTION\", \"DATE RECEIVED\", \"AMOUNT\", \"PERCENT COMPLETE\", \"DEADLINE\", \"DAYS LEFT\"},\n            {1, \"Bid number 1\", null, 2000, 0.5, null, null},\n            {2, \"Bid number 2\", null, 3500, 0.25, null, null},\n            {3, \"Bid number 3\", null, 5000, 0.3, null, null},\n            {4, \"Bid number 4\", null, 4000, 0.2, null, null},\n            {5, \"Bid number 5\", null, 4000, 0.75, null, null},\n            {6, \"Bid number 6\", null, 1500, 0.45, null, null},\n            {7, \"Bid number 7\", null, 5000, 0.65, null, null},\n        });\n        worksheet.getRange(\"B1\").setValue(\"Bid Details\");\n        worksheet.getRange(\"D3\").setFormula(\"=TODAY()-10\");\n        worksheet.getRange(\"D4:D5\").setFormula(\"=TODAY()-20\");\n        worksheet.getRange(\"D6\").setFormula(\"=TODAY()-10\");\n        worksheet.getRange(\"D7\").setFormula(\"=TODAY()-28\");\n        worksheet.getRange(\"D8\").setFormula(\"=TODAY()-17\");\n        worksheet.getRange(\"D9\").setFormula(\"=TODAY()-15\");\n        worksheet.getRange(\"G3:G9\").setFormula(\"=[@[DATE RECEIVED]]+30\");\n        worksheet.getRange(\"H3:H9\").setFormula(\"=[@DEADLINE]-TODAY()\");\n\n        //****************************Set Table Style********************************\n        ITableStyle tableStyle = workbook.getTableStyles().add(\"Bid Tracker\");\n        workbook.setDefaultTableStyle(\"Bid Tracker\");\n\n        //Set WholeTable element style.\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setColor(Color.FromArgb(89, 89, 89));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setColor(Color.FromArgb(89, 89, 89));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Thin);\n\n        //Set HeaderRow element style.\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getFont().setColor(Color.FromArgb(89, 89, 89));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setColor(Color.FromArgb(131, 95, 1));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setPatternColor(Color.FromArgb(254, 184, 10));\n\n\n        //Set TotalRow element style.\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().setColor(Color.GetWhite());\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Thin);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getInterior().setColor(Color.FromArgb(131, 95, 1));\n\n\n        //***********************************Set Named Styles*****************************\n        IStyle titleStyle = workbook.getStyles().get(\"Title\");\n        titleStyle.getFont().setName(\"Trebuchet MS\");\n        titleStyle.getFont().setSize(36);\n        titleStyle.getFont().setColor(Color.FromArgb(56, 145, 167));\n        titleStyle.setIncludeAlignment(true);\n        titleStyle.setVerticalAlignment(VerticalAlignment.Center);\n\n        IStyle heading1Style = workbook.getStyles().get(\"Heading 1\");\n        heading1Style.setIncludeAlignment(true);\n        heading1Style.setHorizontalAlignment(HorizontalAlignment.Left);\n        heading1Style.setIndentLevel(1);\n        heading1Style.setVerticalAlignment(VerticalAlignment.Bottom);\n        heading1Style.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        heading1Style.getFont().setSize(14);\n        heading1Style.getFont().setColor(Color.GetWhite());\n        heading1Style.getFont().setBold(false);\n        heading1Style.setIncludePatterns(true);\n        heading1Style.getInterior().setColor(Color.FromArgb(131, 95, 1));\n        heading1Style.getFont().setName(\"Trebuchet MS\");\n\n\n        IStyle dateStyle = workbook.getStyles().add(\"Date\");\n        dateStyle.setIncludeNumber(true);\n        dateStyle.setNumberFormat(\"m/d/yyyy\");\n        dateStyle.setIncludeAlignment(true);\n        dateStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        dateStyle.setIndentLevel(1);\n        dateStyle.setVerticalAlignment(VerticalAlignment.Center);\n        dateStyle.setIncludeFont(false);\n        dateStyle.setIncludeBorder(false);\n        dateStyle.setIncludePatterns(false);\n        dateStyle.getFont().setName(\"Trebuchet MS\");\n\n\n        IStyle commaStyle = workbook.getStyles().get(\"Comma\");\n        commaStyle.setIncludeNumber(true);\n        commaStyle.setNumberFormat(\"#,##0_);(#,##0)\");\n        commaStyle.setIncludeAlignment(true);\n        commaStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        commaStyle.setIndentLevel(1);\n        commaStyle.setVerticalAlignment(VerticalAlignment.Center);\n        commaStyle.getFont().setName(\"Trebuchet MS\");\n\n\n        IStyle normalStyle = workbook.getStyles().get(\"Normal\");\n        normalStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        normalStyle.setIndentLevel(1);\n        normalStyle.setVerticalAlignment(VerticalAlignment.Center);\n        normalStyle.setWrapText(true);\n        normalStyle.getFont().setColor(Color.FromArgb(89, 89, 89));\n\n\n        IStyle currencyStyle = workbook.getStyles().get(\"Currency\");\n        currencyStyle.setNumberFormat(\"$#,##0.00\");\n        currencyStyle.setIncludeAlignment(true);\n        currencyStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        currencyStyle.setIndentLevel(1);\n        currencyStyle.setVerticalAlignment(VerticalAlignment.Center);\n        currencyStyle.getFont().setName(\"Trebuchet MS\");\n\n\n        IStyle percentStyle = workbook.getStyles().get(\"Percent\");\n        percentStyle.setIncludeAlignment(true);\n        percentStyle.setHorizontalAlignment(HorizontalAlignment.Right);\n        percentStyle.setVerticalAlignment(VerticalAlignment.Center);\n        percentStyle.setIncludeFont(true);\n        percentStyle.getFont().setName(\"Trebuchet MS\");\n        percentStyle.getFont().setSize(20);\n        percentStyle.getFont().setBold(true);\n        percentStyle.getFont().setColor(Color.FromArgb(89, 89, 89));\n        percentStyle.getFont().setName(\"Trebuchet MS\");\n\n\n        IStyle comma0Style = workbook.getStyles().get(\"Comma [0]\");\n        comma0Style.setNumberFormat(\"#,##0_);(#,##0)\");\n        comma0Style.setIncludeAlignment(true);\n        comma0Style.setHorizontalAlignment(HorizontalAlignment.Right);\n        comma0Style.setIndentLevel(3);\n        comma0Style.setVerticalAlignment(VerticalAlignment.Center);\n        percentStyle.getFont().setName(\"Trebuchet MS\");\n\n\n        //************************************Add Conditional Formatting****************\n        IDataBar dataBar = worksheet.getRange(\"F3:F9\").getFormatConditions().addDatabar();\n        dataBar.getMinPoint().setType(ConditionValueTypes.Number);\n        dataBar.getMinPoint().setValue(1);\n        dataBar.getMaxPoint().setType(ConditionValueTypes.Number);\n        dataBar.getMaxPoint().setValue(0);\n\n        dataBar.setBarFillType(DataBarFillType.Gradient);\n        dataBar.getBarColor().setColor(Color.FromArgb(126, 194, 211));\n        dataBar.setDirection(DataBarDirection.Context);\n\n        dataBar.getAxisColor().setColor(Color.GetBlack());\n        dataBar.setAxisPosition(DataBarAxisPosition.Automatic);\n\n        dataBar.getNegativeBarFormat().setColorType(DataBarNegativeColorType.Color);\n        dataBar.getNegativeBarFormat().getColor().setColor(Color.GetRed());\n        dataBar.setShowValue(true);\n\n\n        //****************************************Use NamedStyle**************************\n        worksheet.getSheetView().setDisplayGridlines(false);\n        table.setTableStyle(tableStyle);\n        worksheet.getRange(\"B1\").setStyle(titleStyle);\n        worksheet.getRange(\"B1\").setWrapText(false);\n        worksheet.getRange(\"B2:H2\").setStyle(heading1Style);\n        worksheet.getRange(\"B3:B9\").setStyle(commaStyle);\n        worksheet.getRange(\"C3:C9\").setStyle(normalStyle);\n        worksheet.getRange(\"D3:D9\").setStyle(dateStyle);\n        worksheet.getRange(\"E3:E9\").setStyle(currencyStyle);\n        worksheet.getRange(\"F3:F9\").setStyle(percentStyle);\n        worksheet.getRange(\"G3:G9\").setStyle(dateStyle);\n        worksheet.getRange(\"H3:H9\").setStyle(comma0Style);\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.FinancialKPIs": "\n\n        //Load template file Financial KPIs.xlsx from resource\n        workbook.open(this.getResourceStream(\"xlsx/Financial KPIs.xlsx\"));\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        //set values\n        Object proData = new Object[][]{\n                {1483550, 121386},\n                {0.4336, 0.32},\n                {0.1236, -0.0438},\n                {12.36, -0.0438}\n        };\n\n        Object proData1 = new Object[]{0.14, 0.0029, 0.0361, 0.0361};\n\n        worksheet.getRange(\"E7:F10\").setValue(proData);\n        worksheet.getRange(\"I7:I10\").setValue(proData1);\n\n        Object activeData = new Object[][]{\n                {\"4.32 item\", \"2.00 item\"},\n                {\"72 days\", \"45 days\"},\n                {\"53 days\", \"55 days\"}\n        };\n\n        Object activeData1 = new Object[]{\"0.45 items\", \"-5 days\", \"-6 days\"};\n\n        worksheet.getRange(\"E12:F14\").setValue(activeData);\n        worksheet.getRange(\"I12:I14\").setValue(activeData1);\n\n        Object effData = new Object[][]{\n                {0.3446, 0.25},\n                {0.5335, 0.11}\n        };\n\n        Object effData1 = new Object[]{0.1245, 0.1946};\n\n        worksheet.getRange(\"E16:F17\").setValue(effData);\n        worksheet.getRange(\"I16:I17\").setValue(effData1);\n\n        Object linData = new Object[][]{\n                {\"0.91:1\", \"'2:1\"},\n                {\"0.58:1\", \"'1:1\"}\n        };\n\n        Object linData1 = new Object[]{\"'0.02:1\", \"'0.03:1\"};\n\n        worksheet.getRange(\"E19:F20\").setValue(linData);\n        worksheet.getRange(\"I19:I20\").setValue(linData1);\n\n        Object geaData = new Object[][]{\n                {-9.60, 0.85},\n                {0.68, 0.5}\n        };\n\n        Object geaData1 = new Object[]{6.65, 0.0282};\n\n        worksheet.getRange(\"E22:F23\").setValue(geaData);\n        worksheet.getRange(\"I22:I23\").setValue(geaData1);\n\n        Object casData = new Object[][]{\n                {0.0735, 1.2},\n                {0.1442, 0.1442}\n        };\n\n        Object casData1 = new Object[]{-0.0046, 0.023};\n\n        worksheet.getRange(\"E25:F26\").setValue(casData);\n        worksheet.getRange(\"I25:I26\").setValue(casData1);\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.BasicSalesReport": "\n\n        //create a custom theme.\n        ITheme theme = new Theme(\"testTheme\");\n        theme.getThemeColorScheme().get(ThemeColor.Light1).setRGB(Color.FromArgb(255, 255, 255));\n        theme.getThemeColorScheme().get(ThemeColor.Dark1).setRGB(Color.FromArgb(0, 0, 0));\n        theme.getThemeColorScheme().get(ThemeColor.Light2).setRGB(Color.FromArgb(255, 255, 255));\n        theme.getThemeColorScheme().get(ThemeColor.Dark2).setRGB(Color.FromArgb(0, 0, 0));\n        theme.getThemeColorScheme().get(ThemeColor.Accent1).setRGB(Color.FromArgb(140, 198, 63));\n        theme.getThemeColorScheme().get(ThemeColor.Accent2).setRGB(Color.FromArgb(242, 116, 45));\n        theme.getThemeColorScheme().get(ThemeColor.Accent3).setRGB(Color.FromArgb(106, 159, 207));\n        theme.getThemeColorScheme().get(ThemeColor.Accent4).setRGB(Color.FromArgb(242, 192, 45));\n        theme.getThemeColorScheme().get(ThemeColor.Accent5).setRGB(Color.FromArgb(146, 98, 174));\n        theme.getThemeColorScheme().get(ThemeColor.Accent6).setRGB(Color.FromArgb(121, 198, 199));\n        theme.getThemeColorScheme().get(ThemeColor.Hyperlink).setRGB(Color.FromArgb(106, 159, 207));\n        theme.getThemeColorScheme().get(ThemeColor.FollowedHyperlink).setRGB(Color.FromArgb(146, 98, 74));\n        theme.getThemeFontScheme().getMajor().get(FontLanguageIndex.Latin).setName(\"Garamond\");\n        theme.getThemeFontScheme().getMinor().get(FontLanguageIndex.Latin).setName(\"Garamond\");\n\n        //assign the custom theme for workbook.\n        workbook.setTheme(theme);\n\n\n        //Change built-in custom styles.\n        IStyle style_Title = workbook.getStyles().get(\"Title\");\n        style_Title.getFont().setThemeFont(ThemeFont.Major);\n        style_Title.getFont().setSize(26);\n        style_Title.getFont().setBold(true);\n        style_Title.getFont().setThemeColor(ThemeColor.Light1);\n        style_Title.setIncludeAlignment(false);\n        style_Title.setIncludeFont(true);\n        style_Title.setIncludeBorder(false);\n        style_Title.setIncludeNumber(false);\n        style_Title.setIncludePatterns(false);\n        style_Title.setIncludeProtection(false);\n\n        IStyle style_Normal = workbook.getStyles().get(\"Normal\");\n        style_Normal.setHorizontalAlignment(HorizontalAlignment.General);\n        style_Normal.setVerticalAlignment(VerticalAlignment.Center);\n        style_Normal.getFont().setThemeFont(ThemeFont.Minor);\n        style_Normal.getFont().setSize(9);\n        style_Normal.getFont().setThemeColor(ThemeColor.Dark1);\n        style_Normal.setIncludeAlignment(true);\n        style_Normal.setIncludeFont(true);\n        style_Normal.setIncludeBorder(true);\n        style_Normal.setIncludeNumber(true);\n        style_Normal.setIncludePatterns(true);\n        style_Normal.setIncludeProtection(true);\n\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.setName(\"Data Input\");\n        //hide worksheet gridlines.\n        worksheet.getSheetView().setDisplayGridlines(false);\n\n        //RowHeightColumnWidth\n        worksheet.setStandardHeight(18.75);\n        worksheet.setStandardWidth(8.43);\n\n        worksheet.getRange(\"1:1\").setRowHeight(51.75);\n        worksheet.getRange(\"2:2\").setRowHeight(20.25);\n        worksheet.getRange(\"3:87\").setRowHeight(19);\n\n        worksheet.getRange(\"A:A\").setColumnWidth(2.28515625);\n        worksheet.getRange(\"B:B\").setColumnWidth(16.85546875);\n        worksheet.getRange(\"C:C\").setColumnWidth(20.5703125);\n        worksheet.getRange(\"D:D\").setColumnWidth(27.7109375);\n        worksheet.getRange(\"E:E\").setColumnWidth(17.7109375);\n        worksheet.getRange(\"F:F\").setColumnWidth(18.140625);\n        worksheet.getRange(\"G:G\").setColumnWidth(2.28515625);\n\n        //Values\n        worksheet.getRange(\"B1\").setValue(\"DATA INPUT\");\n\n        //Table\n        worksheet.getRange(\"B2:F87\").setValue(new Object[][]{\n            {\"DATE\", \"PRODUCT\", \"CUSTOMER\", \"AMOUNT\", \"QUARTER\"},\n            {new GregorianCalendar(2012, 0, 1), \"Product 14\", \"Fabrikam, Inc.\", 1886, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 0, 3), \"Product 23\", \"Alpine Ski House\", 4022, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 0, 4), \"Product 18\", \"Coho Winery\", 8144, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 0, 7), \"Product 10\", \"Southridge Video\", 8002, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 0, 11), \"Product 7\", \"Coho Winery\", 6392, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 0, 25), \"Product 1\", \"Contoso, Ltd\", 6444, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 0, 30), \"Product 27\", \"Southridge Video\", 2772, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 4), \"Product 30\", \"City Power & Light\", 8674, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 5), \"Product 16\", \"A. Datum Corporation\", 2332, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 8), \"Product 21\", \"Alpine Ski House\", 5370, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 10), \"Product 6\", \"City Power & Light\", 1768, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 17), \"Product 24\", \"Coho Winery\", 5474, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 22), \"Product 28\", \"Fabrikam, Inc.\", 3494, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 24), \"Product 22\", \"City Power & Light\", 1484, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 1, 29), \"Product 26\", \"Humongous Insurance\", 5454, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 2, 1), \"Product 15\", \"City Power & Light\", 2306, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 2, 8), \"Product 9\", \"A. Datum Corporation\", 8652, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 2, 14), \"Product 16\", \"Alpine Ski House\", 3594, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 2, 31), \"Product 28\", \"City Power & Light\", 9130, \"QUARTER 1\"},\n            {new GregorianCalendar(2012, 3, 3), \"Product 28\", \"Southridge Video\", 9986, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 3, 9), \"Product 2\", \"Fabrikam, Inc.\", 8270, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 3, 10), \"Product 30\", \"A. Datum Corporation\", 5184, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 3, 11), \"Product 25\", \"Contoso, Ltd\", 9426, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 3, 11), \"Product 15\", \"Humongous Insurance\", 4012, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 3, 15), \"Product 28\", \"Coho Winery\", 7724, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 3), \"Product 21\", \"Northwind Traders\", 2264, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 4), \"Product 30\", \"Coho Winery\", 9374, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 5), \"Product 17\", \"Humongous Insurance\", 3692, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 5), \"Product 28\", \"Humongous Insurance\", 9124, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 19), \"Product 22\", \"Humongous Insurance\", 4962, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 22), \"Product 8\", \"A. Datum Corporation\", 9166, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 4, 31), \"Product 16\", \"Coho Winery\", 5610, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 5, 2), \"Product 8\", \"City Power & Light\", 3322, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 5, 2), \"Product 3\", \"Humongous Insurance\", 2592, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 5, 4), \"Product 13\", \"Contoso, Ltd\", 4444, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 5, 9), \"Product 10\", \"Southridge Video\", 7166, \"QUARTER 2\"},\n            {new GregorianCalendar(2012, 5, 12), \"Product 13\", \"Fabrikam, Inc.\", 5008, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 5, 26), \"Product 2\", \"Contoso, Ltd\", 3578, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 5, 29), \"Product 22\", \"Southridge Video\", 1144, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 2), \"Product 14\", \"Alpine Ski House\", 3696, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 6), \"Product 14\", \"Coho Winery\", 7084, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 6), \"Product 2\", \"City Power & Light\", 4642, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 8), \"Product 5\", \"Fabrikam, Inc.\", 6078, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 10), \"Product 9\", \"Alpine Ski House\", 2394, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 15), \"Product 13\", \"Southridge Video\", 5516, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 16), \"Product 8\", \"Fabrikam, Inc.\", 1948, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 19), \"Product 28\", \"Contoso, Ltd\", 7280, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 6, 29), \"Product 26\", \"A. Datum Corporation\", 9292, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 19), \"Product 26\", \"Fabrikam, Inc.\", 5868, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 19), \"Product 6\", \"Northwind Traders\", 4098, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 20), \"Product 13\", \"A. Datum Corporation\", 1270, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 20), \"Product 23\", \"A. Datum Corporation\", 7744, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 24), \"Product 2\", \"Humongous Insurance\", 5488, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 24), \"Product 5\", \"Southridge Video\", 6944, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 25), \"Product 20\", \"Fabrikam, Inc.\", 4454, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 27), \"Product 13\", \"City Power & Light\", 7100, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 7, 30), \"Product 8\", \"Humongous Insurance\", 4346, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 8, 1), \"Product 25\", \"Alpine Ski House\", 2032, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 8, 17), \"Product 20\", \"Contoso, Ltd\", 2328, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 8, 22), \"Product 18\", \"Humongous Insurance\", 6090, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 8, 25), \"Product 19\", \"Coho Winery\", 8344, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 8, 29), \"Product 11\", \"Alpine Ski House\", 5872, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 8, 30), \"Product 25\", \"Humongous Insurance\", 1578, \"QUARTER 3\"},\n            {new GregorianCalendar(2012, 9, 2), \"Product 29\", \"City Power & Light\", 1714, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 9, 5), \"Product 11\", \"Fabrikam, Inc.\", 5716, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 9, 6), \"Product 21\", \"Coho Winery\", 8244, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 9, 14), \"Product 11\", \"A. Datum Corporation\", 8888, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 9, 14), \"Product 23\", \"City Power & Light\", 9438, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 9), \"Product 14\", \"Southridge Video\", 6230, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 13), \"Product 17\", \"A. Datum Corporation\", 4278, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 17), \"Product 6\", \"Alpine Ski House\", 5438, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 22), \"Product 1\", \"Coho Winery\", 6728, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 25), \"Product 30\", \"Fabrikam, Inc.\", 9992, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 25), \"Product 26\", \"Northwind Traders\", 8462, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 27), \"Product 11\", \"Contoso, Ltd\", 7930, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 10, 30), \"Product 30\", \"Northwind Traders\", 8136, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 2), \"Product 13\", \"Humongous Insurance\", 6212, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 5), \"Product 3\", \"Contoso, Ltd\", 4946, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 5), \"Product 3\", \"Southridge Video\", 8554, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 10), \"Product 24\", \"Northwind Traders\", 4508, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 21), \"Product 7\", \"Humongous Insurance\", 7300, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 24), \"Product 17\", \"Fabrikam, Inc.\", 8292, \"QUARTER 4\"},\n            {new GregorianCalendar(2012, 11, 26), \"Product 26\", \"Alpine Ski House\", 9782, \"QUARTER 4\"},\n            {new GregorianCalendar(2013, 0, 3), \"Product 19\", \"Fabrikam, Inc.\", 8024, \"QUARTER 1\"},\n            {new GregorianCalendar(2013, 0, 4), \"Product 22\", \"A. Datum Corporation\", 3758, \"QUARTER 1\"},\n        });\n\n        ITable table_Data = worksheet.getTables().add(worksheet.getRange(\"B2:F87\"), true);\n\n        //set built-in table style for table.\n        table_Data.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium2\"));\n\n        //customize table header range's style.\n        table_Data.getHeaderRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Data.getHeaderRange().setIndentLevel(1);\n        table_Data.getHeaderRange().setVerticalAlignment(VerticalAlignment.Center);\n        table_Data.getHeaderRange().getFont().setSize(11);\n\n        //customize table each column's data body range's style.\n        table_Data.getColumns().get(0).getDataBodyRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Data.getColumns().get(0).getDataBodyRange().setIndentLevel(1);\n        table_Data.getColumns().get(0).getDataBodyRange().setVerticalAlignment(VerticalAlignment.Center);\n        table_Data.getColumns().get(1).getDataBodyRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Data.getColumns().get(1).getDataBodyRange().setIndentLevel(1);\n        table_Data.getColumns().get(1).getDataBodyRange().setVerticalAlignment(VerticalAlignment.Center);\n        table_Data.getColumns().get(2).getDataBodyRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Data.getColumns().get(2).getDataBodyRange().setIndentLevel(1);\n        table_Data.getColumns().get(2).getDataBodyRange().setVerticalAlignment(VerticalAlignment.Center);\n        table_Data.getColumns().get(3).getDataBodyRange().setHorizontalAlignment(HorizontalAlignment.Right);\n        table_Data.getColumns().get(3).getDataBodyRange().setIndentLevel(1);\n        table_Data.getColumns().get(3).getDataBodyRange().setVerticalAlignment(VerticalAlignment.Bottom);\n        table_Data.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n        table_Data.getColumns().get(4).getDataBodyRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Data.getColumns().get(4).getDataBodyRange().setIndentLevel(1);\n        table_Data.getColumns().get(4).getDataBodyRange().setVerticalAlignment(VerticalAlignment.Bottom);\n\n\n        //Slicers\n        //create slicer caches.\n        ISlicerCache cache_customer = workbook.getSlicerCaches().add(table_Data, \"CUSTOMER\", \"CUSTOMER\");\n        ISlicerCache cache_product = workbook.getSlicerCaches().add(table_Data, \"PRODUCT\", \"PRODUCT\");\n\n        //create slicers.\n        ISlicer slicer_customer = cache_customer.getSlicers().add(worksheet, \"CUSTOMER\", \"CUSTOMER\", 51.914015748031495, 551, 144, 190);\n        ISlicer slicer_product = cache_product.getSlicers().add(worksheet, \"PRODUCT\", \"PRODUCT\", 51.914015748031495, 691, 144, 190);\n\n        //assign built-in slicer style for slicers.\n        slicer_customer.setStyle(workbook.getTableStyles().get(\"SlicerStyleDark1\"));\n        slicer_product.setStyle(workbook.getTableStyles().get(\"SlicerStyleDark1\"));\n\n\n        //Style\n        worksheet.getRange(\"1:1\").setStyle(workbook.getStyles().get(\"Title\"));\n        worksheet.getRange(\"1:1\").getInterior().setThemeColor(ThemeColor.Accent1);\n        worksheet.getRange(\"1:1\").setHorizontalAlignment(HorizontalAlignment.Left);\n        worksheet.getRange(\"1:1\").setIndentLevel(1);\n        worksheet.getRange(\"1:1\").setVerticalAlignment(VerticalAlignment.Center);\n        worksheet.getRange(\"A1\").setStyle(workbook.getStyles().get(\"Normal\"));\n\n\n        //Worksheet_CustomizableReport\n        IWorksheet worksheet2 = workbook.getWorksheets().add();\n        worksheet2.setName(\"Customizable Report\");\n        worksheet2.getSheetView().setDisplayGridlines(false);\n\n        //RowHeightColumnWidth\n        worksheet2.setStandardHeight(16.5);\n        worksheet2.setStandardWidth(8.43);\n        worksheet2.getRange(\"1:1\").setRowHeight(51.75);\n        worksheet2.getRange(\"2:116\").setRowHeight(14.25);\n        worksheet2.getRange(\"A:A\").setColumnWidth(2.28515625);\n        worksheet2.getRange(\"B:B\").setColumnWidth(23.140625);\n        worksheet2.getRange(\"C:C\").setColumnWidth(15.5703125);\n        worksheet2.getRange(\"D:F\").setColumnWidth(11.42578125);\n        worksheet2.getRange(\"G:H\").setColumnWidth(13.42578125);\n\n        //Values\n        worksheet2.getRange(\"B1\").setValue(\"SALES REPORT\");\n\n\n        //Style\n        worksheet2.getRange(\"1:1\").setStyle(workbook.getStyles().get(\"Title\"));\n        worksheet2.getRange(\"1:1\").getInterior().setThemeColor(ThemeColor.Accent1);\n        worksheet2.getRange(\"1:1\").setHorizontalAlignment(HorizontalAlignment.Left);\n        worksheet2.getRange(\"1:1\").setIndentLevel(1);\n        worksheet2.getRange(\"1:1\").setVerticalAlignment(VerticalAlignment.Center);\n        worksheet2.getRange(\"A1\").setStyle(workbook.getStyles().get(\"Normal\"));\n\n        //Shape\n        //create a shape.\n        IShape shape = worksheet2.getShapes().addShape(AutoShapeType.RectangularCallout, 472, 65, 300, 70);\n        //config shape's line and fill.\n        shape.getLine().setDashStyle(LineDashStyle.Solid);\n        shape.getLine().setWeight(4);\n        shape.getLine().getColor().setRGB(Color.FromArgb(89, 89, 89));\n        shape.getFill().solid();\n        shape.getFill().getColor().setColorType(SolidColorType.None);\n\n        //config shape's rich text.\n        ITextRange shape_p1 = shape.getTextFrame().getTextRange().getParagraphs().get(0);\n        shape_p1.setText(\"TIP:\");\n        ITextRange shape_p2 = shape.getTextFrame().getTextRange().getParagraphs().add();\n        shape_p2.setText(\"Customize this PivotTable to fit your needs! Select a cell in the PivotTable to activate the PivotTable Field List pane. Then in the task pane, drag to add, remove, or reorder the fields.\" +\n            \" For example, drag the Product field above the Customer field for a different view. To update PivotTable data, right-click in the PivotTable and then click Refresh.\");\n\n        //set first paragraph's font style.\n        shape_p1.getFont().setThemeFont(ThemeFont.Major);\n        shape_p1.getFont().setBold(true);\n        shape_p1.getFont().setSize(12);\n        shape_p1.getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape_p1.getFont().getColor().setBrightness(0.25);\n\n        //set second paragraph's font style.\n        shape_p2.getFont().setThemeFont(ThemeFont.Minor);\n        shape_p2.getFont().setSize(8);\n        shape_p2.getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape_p2.getFont().getColor().setBrightness(0.25);\n\n\n        //Worksheet_DataLists\n        IWorksheet worksheet3 = workbook.getWorksheets().add();\n        worksheet3.setName(\"Data Lists\");\n        worksheet3.getSheetView().setDisplayGridlines(false);\n\n        //RowHeightColumnWidth\n        worksheet3.setStandardHeight(18.75);\n        worksheet3.setStandardWidth(8.43);\n        worksheet3.getRange(\"1:1\").setRowHeight(51.75);\n        worksheet3.getRange(\"2:32\").setRowHeight(19);\n        worksheet3.getRange(\"A:A, D:D\").setColumnWidth(2.28515625);\n        worksheet3.getRange(\"B:C\").setColumnWidth(34.42578125);\n\n        //Values\n        worksheet3.getRange(\"B1\").setValue(\"DATA LISTS\");\n\n        //Table\n        worksheet3.getRange(\"B2:B32\").setValue(new Object[][]{\n            {\"PRODUCTS\"},\n            {\"Product 1\"},\n            {\"Product 2\"},\n            {\"Product 3\"},\n            {\"Product 4\"},\n            {\"Product 5\"},\n            {\"Product 6\"},\n            {\"Product 7\"},\n            {\"Product 8\"},\n            {\"Product 9\"},\n            {\"Product 10\"},\n            {\"Product 11\"},\n            {\"Product 12\"},\n            {\"Product 13\"},\n            {\"Product 14\"},\n            {\"Product 15\"},\n            {\"Product 16\"},\n            {\"Product 17\"},\n            {\"Product 18\"},\n            {\"Product 19\"},\n            {\"Product 20\"},\n            {\"Product 21\"},\n            {\"Product 22\"},\n            {\"Product 23\"},\n            {\"Product 24\"},\n            {\"Product 25\"},\n            {\"Product 26\"},\n            {\"Product 27\"},\n            {\"Product 28\"},\n            {\"Product 29\"},\n            {\"Product 30\"},\n        });\n        ITable table_Products = worksheet3.getTables().add(worksheet.getRange(\"B2:B32\"), true);\n        worksheet3.getRange(\"C2:C30\").setValue(new Object[][]{\n            {\"CUSTOMERS\"},\n            {\"A. Datum Corporation\"},\n            {\"Adventure Works\"},\n            {\"Alpine Ski House\"},\n            {\"Blue Yonder Airlines\"},\n            {\"City Power & Light\"},\n            {\"Coho Vineyard\"},\n            {\"Coho Winery\"},\n            {\"Coho Vineyard & Winery\"},\n            {\"Contoso, Ltd\"},\n            {\"Contoso Pharmaceuticals\"},\n            {\"Consolidated Messenger\"},\n            {\"Fabrikam, Inc.\"},\n            {\"Fourth Coffee\"},\n            {\"Graphic Design Institute\"},\n            {\"Humongous Insurance\"},\n            {\"Litware, Inc.\"},\n            {\"Lucerne Publishing\"},\n            {\"Margie's Travel\"},\n            {\"Northwind Traders\"},\n            {\"Proseware, Inc.\"},\n            {\"School of Fine Art\"},\n            {\"Southridge Video\"},\n            {\"Tailspin Toys\"},\n            {\"Trey Research\"},\n            {\"The Phone Company\"},\n            {\"Wide World Importers\"},\n            {\"Wingtip Toys\"},\n            {\"Woodgrove Bank\"},\n        });\n        ITable table_Customers = worksheet3.getTables().add(worksheet.getRange(\"C2:C30\"), true);\n\n        table_Products.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium2\"));\n        table_Products.getColumns().get(0).getRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Products.getColumns().get(0).getRange().setIndentLevel(1);\n        table_Products.getColumns().get(0).getRange().setVerticalAlignment(VerticalAlignment.Center);\n        table_Products.getHeaderRange().getFont().setSize(11);\n\n        table_Customers.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium2\"));\n        table_Customers.getColumns().get(0).getRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table_Customers.getColumns().get(0).getRange().setIndentLevel(1);\n        table_Customers.getColumns().get(0).getRange().setVerticalAlignment(VerticalAlignment.Center);\n        table_Customers.setShowTableStyleFirstColumn(true);\n        table_Customers.getHeaderRange().getFont().setSize(11);\n\n        //Style\n        worksheet3.getRange(\"1:1\").setStyle(workbook.getStyles().get(\"Title\"));\n        worksheet3.getRange(\"1:1\").getInterior().setThemeColor(ThemeColor.Accent1);\n        worksheet3.getRange(\"1:1\").setHorizontalAlignment(HorizontalAlignment.Left);\n        worksheet3.getRange(\"1:1\").setIndentLevel(1);\n        worksheet3.getRange(\"1:1\").setVerticalAlignment(VerticalAlignment.Center);\n        worksheet3.getRange(\"A1\").setStyle(workbook.getStyles().get(\"Normal\"));\n\n        //Shape\n        IShape shape2 = worksheet3.getShapes().addShape(AutoShapeType.RectangularCallout, 380, 65, 280, 50);\n        shape2.getLine().setDashStyle(LineDashStyle.Solid);\n        shape2.getLine().setWeight(4);\n        shape2.getLine().getColor().setRGB(Color.FromArgb(89, 89, 89));\n        shape2.getFill().solid();\n        shape2.getFill().getColor().setColorType(SolidColorType.None);\n\n        ITextRange shape2_p1 = shape2.getTextFrame().getTextRange().getParagraphs().get(0);\n        shape2_p1.setText(\"TIP:\");\n        ITextRange shape2_p2 = shape2.getTextFrame().getTextRange().getParagraphs().add();\n        shape2_p2.setText(\"To add a new product or customer, start typing below the table and it will automatically expand when you press the Enter or Tab key.\");\n        shape2_p1.getFont().setThemeFont(ThemeFont.Major);\n        shape2_p1.getFont().setBold(true);\n        shape2_p1.getFont().setSize(12);\n        shape2_p1.getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape2_p1.getFont().getColor().setBrightness(0.25);\n\n        shape2_p2.getFont().setThemeFont(ThemeFont.Minor);\n        shape2_p2.getFont().setSize(8);\n        shape2_p2.getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape2_p2.getFont().getColor().setBrightness(0.25);\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.BloodSugarTracker": "\n\n        //Load template file Blood sugar tracker.xlsx from resource\n        workbook.open(this.getResourceStream(\"xlsx/Blood sugar tracker.xlsx\"));\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        //insert 19 rows  \n        worksheet.getRange(\"1:19\").insert();\n\n        //Change the rows(2~5) RowHeight\n        worksheet.getRows().get(1).setRowHeight(34.5);\n        worksheet.getRows().get(2).setRowHeight(15.75);\n        worksheet.getRows().get(3).setRowHeight(19.5);\n        worksheet.getRows().get(4).setRowHeight(15.75);\n\n        //Set values\n        worksheet.getRange(\"B2\").setValue(\"BLOOD SUGAR TRACKING\");\n        worksheet.getRange(\"B4\").setValue(\"CHARTED PROGRESS\");\n\n        //Set Styles\n        worksheet.getRange(\"B2\").getFont().setThemeFont(ThemeFont.Major);\n        worksheet.getRange(\"B2\").getFont().setSize(26);\n        worksheet.getRange(\"B2\").getFont().setThemeColor(ThemeColor.Dark1);\n        worksheet.getRange(\"B2\").getFont().setTintAndShade(0.34998626667073579);\n        worksheet.getRange(\"B2:D2\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        worksheet.getRange(\"B2:D2\").getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent1);\n\n        worksheet.getRange(\"B4\").getFont().setThemeFont(ThemeFont.Major);\n        worksheet.getRange(\"B4\").getFont().setBold(true);\n        worksheet.getRange(\"B4\").getFont().setSize(14);\n        worksheet.getRange(\"B4\").getFont().setThemeColor(ThemeColor.Dark1);\n        worksheet.getRange(\"B4\").getFont().setTintAndShade(0.34998626667073579);\n        worksheet.getRange(\"B4:D4\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        worksheet.getRange(\"B4:D4\").getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent2);\n\n        //Add chart\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 9.75, 100.5, 365, 203.25);\n        shape.setName(\"BloodSugarProgress\");\n\n        //Add Series.\n        ISeries series1 = shape.getChart().getSeriesCollection().newSeries();\n        series1.setFormula(\"=SERIES('BLOOD SUGAR DATA'!$C$23,'BLOOD SUGAR DATA'!$B$24:$B$45,'BLOOD SUGAR DATA'!$C$24:$C$45,1)\");\n        series1.getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Accent1);\n        series1.getFormat().getLine().setWeight(2.5);\n\n        ISeries series2 = shape.getChart().getSeriesCollection().newSeries();\n        series2.setFormula(\"=SERIES('BLOOD SUGAR DATA'!$D$23,'BLOOD SUGAR DATA'!$B$24:$B$45,'BLOOD SUGAR DATA'!$D$24:$D$45,2)\");\n        series2.getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Accent2);\n        series2.getFormat().getLine().setWeight(2.5);\n\n        //Hidden the chart title\n        shape.getChart().setHasTitle(false);\n\n        //Hidden the category axis\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n        category_axis.setVisible(false);\n\n        //Set value axis units\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        value_axis.setMaximumScale(140);\n        value_axis.setMinimumScale(50);\n        value_axis.setMajorUnit(10);\n        value_axis.setMinorUnit(2);\n\n        //Add a rectange shape\n        IShape shape1 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 385, 84.75, 102, 218.25);\n        shape1.getFill().solid();\n        shape1.getFill().getColor().setObjectThemeColor(ThemeColor.Accent1);\n        shape1.getFill().getColor().setBrightness(0.6);\n\n        //set shape's border to no line\n        shape1.getLine().getColor().setColorType(SolidColorType.None);\n\n        //set shape rich text\n        ITextRange shape1_p1 = shape1.getTextFrame().getTextRange().getParagraphs().get(0);\n        shape1_p1.setText(\"INFO:\");\n        shape1_p1.getRuns().add(\" Blood sugar levels will vary from person-to-person.  There are many factors to keeping it within your normal range and isn't based on sugar alone.  Consult a physician for additional information or follow-up.\");\n\n        ITextRange shape1_p2 = shape1.getTextFrame().getTextRange().getParagraphs().add(\"\");\n        ITextRange shape1_p3 = shape1.getTextFrame().getTextRange().getParagraphs().add(\"More info can be found here:\");\n        ITextRange shape1_p4 = shape1.getTextFrame().getTextRange().getParagraphs().add(\"http://diabetes.webmd.com/blood-glucose\");\n\n        shape1.getTextFrame().getTextRange().getFont().setSize(10);\n        shape1.getTextFrame().getTextRange().getFont().setThemeFont(ThemeFont.Minor);\n        shape1.getTextFrame().getTextRange().getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape1.getTextFrame().getTextRange().getFont().getColor().setBrightness(0.25);\n        shape1_p1.getRuns().get(0).getFont().setBold(true);\n        shape1_p3.getRuns().get(0).getFont().setBold(true);\n\n        //Do table filter\n        ITable table = worksheet.getTables().get(0);\n        table.getRange().autoFilter(1, \">=102\");\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.CostAnalysisWithParetoChart": "\n\n        Object data = new Object[][]{\n                {\"Cost Center\", \"Annual Cost\", \"Percent of Total\", \"Cumulative Percent\"},\n                {\"Parts and materials\", 1325000, null, null},\n                {\"Manufacturing equipment\", 900500, null, null},\n                {\"Salaries\", 575000, null, null},\n                {\"Maintenance\", 395000, null, null},\n                {\"Office lease\", 295000, null, null},\n                {\"Warehouse lease\", 250000, null, null},\n                {\"Insurance\", 180000, null, null},\n                {\"Benefits and pensions\", 130000, null, null},\n                {\"Vehicles\", 125000, null, null},\n                {\"Research\", 75000, null, null},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.setName(\"COST DATA and CHART\");\n        worksheet.setTabColor(Color.FromArgb(63, 94, 101));\n        worksheet.getSheetView().setDisplayGridlines(false);\n\n        //Set Value.\n        worksheet.getRange(\"B2\").setValue(\"COST ANALYSIS - PARETO\");\n        worksheet.getRange(\"B39\").setValue(\"COST ANALYSIS\");\n        worksheet.getRange(\"B41:E51\").setValue(data);\n\n        //Set NumberFormat.\n        worksheet.getRange(\"C42:C52\").setNumberFormat(\"\\\"$\\\"#,##0.00_);[Red](\\\"$\\\"#,##0.00)\");\n        worksheet.getRange(\"D42:E52\").setNumberFormat(\"0.00%\");\n\n        //Change the range's RowHeight and ColumnWidth.\n        worksheet.setStandardHeight(15.75);\n        worksheet.setStandardWidth(8.43);\n        worksheet.getRange(\"1:1\").setRowHeight(12.75);\n        worksheet.getRange(\"2:2\").setRowHeight(20.25);\n        worksheet.getRange(\"3:3\").setRowHeight(16.5);\n        worksheet.getRange(\"39:39\").setRowHeight(20.25);\n        worksheet.getRange(\"40:40\").setRowHeight(16.5);\n        worksheet.getRange(\"41:41\").setRowHeight(29.25);\n        worksheet.getRange(\"42:51\").setRowHeight(20.1);\n        worksheet.getRange(\"A:A\").setColumnWidth(1.44140625);\n        worksheet.getRange(\"B:B\").setColumnWidth(25.88671875);\n        worksheet.getRange(\"C:C\").setColumnWidth(18.5546875);\n        worksheet.getRange(\"D:D\").setColumnWidth(17.77734375);\n        worksheet.getRange(\"E:E\").setColumnWidth(20.77734375);\n\n        //Apply one build in name style on the ranges.\n        worksheet.getRange(\"B2:J2\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n        worksheet.getRange(\"B39:E39\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n\n        //Create a table and apply one build in table style.\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B41:E51\"), true);\n        table.setName(\"tblData\");\n        table.setTableStyle(workbook.getTableStyles().get(\"TableStyleLight9\"));\n        table.setShowTotals(true);\n        table.setShowTableStyleRowStripes(true);\n\n        //Use table formula in table range.\n        worksheet.getRange(\"D42:D51\").setFormula(\"=[@[Annual Cost]]/SUM([[Annual Cost]])\");\n        worksheet.getRange(\"E42:E51\").setFormula(\"=SUM(INDEX([Percent of Total],1):[@[Percent of Total]])\");\n        table.getColumns().get(1).setTotalsCalculation(TotalsCalculation.Sum);\n        table.getColumns().get(2).setTotalsCalculation(TotalsCalculation.Sum);\n        table.getColumns().get(3).setTotalsCalculation(TotalsCalculation.None);\n\n        //Add chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 9.75, 48, 597, 472.5);\n        shape.setName(\"Pareto Chart\");\n\n        //Add Series.\n        ISeries series_ColumnClustered = shape.getChart().getSeriesCollection().newSeries();\n        series_ColumnClustered.setFormula(\"=SERIES('COST DATA and CHART'!$C$41,'COST DATA and CHART'!$B$42:$B$51,'COST DATA and CHART'!$C$42:$C$51,1)\");\n        series_ColumnClustered.getFormat().getFill().twoColorGradient(GradientStyle.Horizontal, 1);\n        series_ColumnClustered.getFormat().getFill().setGradientAngle(90);\n        series_ColumnClustered.getFormat().getFill().getGradientStops().get(0).getColor().setObjectThemeColor(ThemeColor.Accent1);\n        series_ColumnClustered.getFormat().getFill().getGradientStops().get(0).getColor().setBrightness(0);\n        series_ColumnClustered.getFormat().getFill().getGradientStops().get(0).setPosition(0);\n        series_ColumnClustered.getFormat().getFill().getGradientStops().get(1).getColor().setObjectThemeColor(ThemeColor.Accent1);\n        series_ColumnClustered.getFormat().getFill().getGradientStops().get(1).getColor().setBrightness(-0.16);\n        series_ColumnClustered.getFormat().getFill().getGradientStops().get(1).setPosition(1);\n        series_ColumnClustered.getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Light1);\n\n        ISeries series_Line = shape.getChart().getSeriesCollection().newSeries();\n        series_Line.setChartType(ChartType.Line);\n        series_Line.setFormula(\"=SERIES('COST DATA and CHART'!$E$41,,'COST DATA and CHART'!$E$42:$E$51,2)\");\n        series_Line.getFormat().getLine().setWeight(2.25);\n        series_Line.setAxisGroup(AxisGroup.Secondary);\n\n        //Change the secondary's maxinumscale.\n        IAxis secondary_axis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Secondary);\n        secondary_axis.setMaximumScale(1.0);\n\n        //Set the chart's title format.\n        shape.getChart().getChartTitle().setText(\"Cost Center\");\n        shape.getChart().getChartTitle().getFont().setThemeFont(ThemeFont.Minor);\n        shape.getChart().getChartTitle().getFont().getColor().setRGB(Color.FromArgb(89, 89, 89));\n        shape.getChart().getChartTitle().getFont().setSize(18);\n\n        //Set the chart has no legend.\n        shape.getChart().setHasLegend(false);\n\n        //Set the char group's Overlap and GapWidth.\n        shape.getChart().getColumnGroups().get(0).setOverlap(0);\n        shape.getChart().getColumnGroups().get(0).setGapWidth(0);\n\n        //Set chart area's format.\n        shape.getChart().getChartArea().getFormat().getFill().presetGradient(GradientStyle.Horizontal, 1, PresetGradientType.EarlySunset);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().delete(3);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().delete(3);\n        shape.getChart().getChartArea().getFormat().getFill().setGradientAngle(90);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(0).getColor().setObjectThemeColor(ThemeColor.Light1);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(0).getColor().setBrightness(0);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(0).setPosition(0);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(1).getColor().setObjectThemeColor(ThemeColor.Light1);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(1).getColor().setBrightness(-0.15);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(1).setPosition(0.68);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(2).getColor().setObjectThemeColor(ThemeColor.Light1);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(2).getColor().setBrightness(0);\n        shape.getChart().getChartArea().getFormat().getFill().getGradientStops().get(2).setPosition(1);\n\n        //Create customize theme.\n        ITheme theme = new Theme(\"test\");\n        theme.getThemeColorScheme().get(ThemeColor.Dark1).setRGB(Color.FromArgb(0, 0, 0));\n        theme.getThemeColorScheme().get(ThemeColor.Light1).setRGB(Color.FromArgb(255, 255, 255));\n        theme.getThemeColorScheme().get(ThemeColor.Dark2).setRGB(Color.FromArgb(96, 89, 88));\n        theme.getThemeColorScheme().get(ThemeColor.Light2).setRGB(Color.FromArgb(241, 246, 246));\n        theme.getThemeColorScheme().get(ThemeColor.Accent1).setRGB(Color.FromArgb(63, 94, 101));\n        theme.getThemeColorScheme().get(ThemeColor.Accent2).setRGB(Color.FromArgb(224, 170, 83));\n        theme.getThemeColorScheme().get(ThemeColor.Accent3).setRGB(Color.FromArgb(179, 29, 66));\n        theme.getThemeColorScheme().get(ThemeColor.Accent4).setRGB(Color.FromArgb(162, 67, 162));\n        theme.getThemeColorScheme().get(ThemeColor.Accent5).setRGB(Color.FromArgb(120, 59, 101));\n        theme.getThemeColorScheme().get(ThemeColor.Accent6).setRGB(Color.FromArgb(55, 120, 169));\n        theme.getThemeColorScheme().get(ThemeColor.Hyperlink).setRGB(Color.FromArgb(71, 166, 181));\n        theme.getThemeColorScheme().get(ThemeColor.FollowedHyperlink).setRGB(Color.FromArgb(120, 59, 101));\n        theme.getThemeFontScheme().getMajor().get(FontLanguageIndex.Latin).setName(\"Constantia\");\n        theme.getThemeFontScheme().getMinor().get(FontLanguageIndex.Latin).setName(\"Helvetica\");\n\n        //Apply the above custom theme.\n        workbook.setTheme(theme);\n\n        //Set active cell.\n        worksheet.getRange(\"B43\").activate();\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.BloodPressureTracker": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //theme\n        //create a custom theme.\n        ITheme theme = new Theme(\"testTheme\");\n        theme.getThemeColorScheme().get(ThemeColor.Light1).setRGB(Color.FromArgb(255, 255, 255));\n        theme.getThemeColorScheme().get(ThemeColor.Dark1).setRGB(Color.FromArgb(0, 0, 0));\n        theme.getThemeColorScheme().get(ThemeColor.Light2).setRGB(Color.FromArgb(222, 222, 212));\n        theme.getThemeColorScheme().get(ThemeColor.Dark2).setRGB(Color.FromArgb(30, 46, 47));\n        theme.getThemeColorScheme().get(ThemeColor.Accent1).setRGB(Color.FromArgb(233, 117, 90));\n        theme.getThemeColorScheme().get(ThemeColor.Accent2).setRGB(Color.FromArgb(122, 182, 186));\n        theme.getThemeColorScheme().get(ThemeColor.Accent3).setRGB(Color.FromArgb(125, 181, 135));\n        theme.getThemeColorScheme().get(ThemeColor.Accent4).setRGB(Color.FromArgb(230, 191, 94));\n        theme.getThemeColorScheme().get(ThemeColor.Accent5).setRGB(Color.FromArgb(230, 143, 77));\n        theme.getThemeColorScheme().get(ThemeColor.Accent6).setRGB(Color.FromArgb(194, 107, 112));\n        theme.getThemeColorScheme().get(ThemeColor.Hyperlink).setRGB(Color.FromArgb(122, 182, 186));\n        theme.getThemeColorScheme().get(ThemeColor.FollowedHyperlink).setRGB(Color.FromArgb(166, 140, 177));\n        theme.getThemeFontScheme().getMajor().get(FontLanguageIndex.Latin).setName(\"Gill Sans\");\n        theme.getThemeFontScheme().getMinor().get(FontLanguageIndex.Latin).setName(\"Gill Sans\");\n\n        //assign the custom theme for workbook.\n        workbook.setTheme(theme);\n\n        //does not show sheet gridlines.\n        worksheet.getSheetView().setDisplayGridlines(false);\n\n        //RowHeightColumnWidth\n        //set row height and column width.\n        worksheet.setStandardHeight(12.75);\n        worksheet.setStandardWidth(8.43);\n        worksheet.getRows().get(1).setRowHeight(32.25);\n        worksheet.getRows().get(2).setRowHeight(13.5);\n        worksheet.getRows().get(3).setRowHeight(18.75);\n        worksheet.getRows().get(6).setRowHeight(18.75);\n        worksheet.getRows().get(9).setRowHeight(18.75);\n        worksheet.getRows().get(12).setRowHeight(18.75);\n        worksheet.getRows().get(15).setRowHeight(19.5);\n        worksheet.getRows().get(16).setRowHeight(13.5);\n        worksheet.getRows().get(33).setRowHeight(19.5);\n        worksheet.getRows().get(34).setRowHeight(13.5);\n\n        worksheet.getColumns().get(0).setColumnWidth(1.7109375);\n        worksheet.getColumns().get(1).setColumnWidth(12.140625);\n        worksheet.getColumns().get(2).setColumnWidth(12.140625);\n        worksheet.getColumns().get(3).setColumnWidth(12.140625);\n        worksheet.getColumns().get(4).setColumnWidth(11.85546875);\n        worksheet.getColumns().get(5).setColumnWidth(12.7109375);\n        worksheet.getColumns().get(6).setColumnWidth(13.85546875);\n        worksheet.getColumns().get(7).setColumnWidth(44.7109375);\n\n        //Values\n        //initialize worksheet's values.\n        worksheet.setName(\"BLOOD PRESSURE DATA\");\n        worksheet.getRange(\"B2\").setValue(\"BLOOD PRESSURE TRACKER\");\n        worksheet.getRange(\"B4:F13\").setValue(new Object[][]{\n            {\"NAME\", null, null, null, null},\n            {null, null, null, null, null},\n            {null, null, null, \"Systolic\", \"Diastolic\"},\n            {\"TARGET BLOOD PRESSURE\", null, null, 120, 80},\n            {null, null, null, null, null},\n            {null, null, null, \"Systolic\", \"Diastolic\"},\n            {\"CALL PHYSICIAN IF ABOVE\", null, null, 140, 90},\n            {null, null, null, null, null},\n            {null, null, null, null, null},\n            {\"PHYSICIAN PHONE NUMBER\", null, null, \"[Phone Number]\", null}\n        });\n        worksheet.getRange(\"B16\").setValue(\"CHARTED PROGRESS\");\n        worksheet.getRange(\"B34\").setValue(\"DATA ENTRY\");\n\n        //Table\n        //initialize table data.\n        worksheet.getRange(\"B36:H44\").setValue(new Object[][]{\n            {\"TIME\", \"DATE\", \"AM/PM\", \"SYSTOLIC\", \"DIASTOLIC\", \"HEART RATE\", \"NOTES\"},\n            {new GregorianCalendar(1899, 11, 30, 10, 00, 00), new GregorianCalendar(2013, 6, 1), \"AM\", 129, 99, 72, null},\n            {new GregorianCalendar(1899, 11, 30, 18, 00, 00), new GregorianCalendar(2013, 6, 1), \"PM\", 133, 80, 75, null},\n            {new GregorianCalendar(1899, 11, 30, 10, 30, 00), new GregorianCalendar(2013, 6, 2), \"AM\", 142, 86, 70, null},\n            {new GregorianCalendar(1899, 11, 30, 19, 00, 00), new GregorianCalendar(2013, 6, 2), \"PM\", 141, 84, 68, null},\n            {new GregorianCalendar(1899, 11, 30, 9,  00, 00), new GregorianCalendar(2013, 6, 2), \"AM\", 137, 84, 70, null},\n            {new GregorianCalendar(1899, 11, 30, 18, 30, 00), new GregorianCalendar(2013, 6, 3), \"PM\", 139, 83, 72, null},\n            {new GregorianCalendar(1899, 11, 30, 10, 00, 00), new GregorianCalendar(2013, 6, 4), \"AM\", 140, 85, 78, null},\n            {new GregorianCalendar(1899, 11, 30, 18, 00, 00), new GregorianCalendar(2013, 6, 4), \"PM\", 138, 85, 69, null},\n        });\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B36:H44\"), true);\n        table.setShowTotals(true);\n\n        //set total row formulas.\n        table.getColumns().get(0).getTotal().setValue(\"Average\");\n        table.getColumns().get(3).setTotalsCalculation(TotalsCalculation.Average);\n        table.getColumns().get(4).setTotalsCalculation(TotalsCalculation.Average);\n        table.getColumns().get(5).setTotalsCalculation(TotalsCalculation.Average);\n        table.getColumns().get(6).setTotalsCalculation(TotalsCalculation.None);\n\n        //config data body range and total range's number format.\n        table.getColumns().get(0).getDataBodyRange().setNumberFormat(\"h:mm;@\");\n        table.getColumns().get(1).getDataBodyRange().setNumberFormat(\"m/d/yyyy\");\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"0\");\n        table.getColumns().get(4).getDataBodyRange().setNumberFormat(\"0\");\n        table.getColumns().get(5).getDataBodyRange().setNumberFormat(\"0\");\n        table.getColumns().get(3).getTotal().setNumberFormat(\"0\");\n        table.getColumns().get(4).getTotal().setNumberFormat(\"0\");\n        table.getColumns().get(5).getTotal().setNumberFormat(\"0\");\n\n        //config table range's alignment.\n        table.getRange().setHorizontalAlignment(HorizontalAlignment.Left);\n        table.getRange().setIndentLevel(0);\n        table.getRange().setVerticalAlignment(VerticalAlignment.Center);\n\n        //TableStyle\n        //create a custom table style.\n        ITableStyle tablestyle = workbook.getTableStyles().add(\"testStyle\");\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setThemeColor(ThemeColor.Dark1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setTintAndShade(0.25);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thin);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeTop).setThemeColor(ThemeColor.Accent1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeTop).setTintAndShade(0.4);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Thin);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setThemeColor(ThemeColor.Accent1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.InsideHorizontal).setTintAndShade(0.4);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeBottom).setTintAndShade(0.4);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setThemeColor(ThemeColor.Accent1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeLeft).setTintAndShade(0.4);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thin);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setThemeColor(ThemeColor.Accent1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().get(BordersIndex.EdgeRight).setTintAndShade(0.4);\n\n        tablestyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe).getInterior().setThemeColor(ThemeColor.Accent1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe).getInterior().setTintAndShade(0.8);\n\n        tablestyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getFont().setBold(true);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getFont().setThemeColor(ThemeColor.Dark1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getFont().setTintAndShade(0.25);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setThemeColor(ThemeColor.Accent1);\n\n        tablestyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getFont().setBold(true);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getFont().setThemeColor(ThemeColor.Dark1);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getFont().setTintAndShade(0.25);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Double);\n        tablestyle.getTableStyleElements().get(TableStyleElementType.TotalRow).getBorders().get(BordersIndex.EdgeTop).setThemeColor(ThemeColor.Accent1);\n\n        //assign custom table style for table.\n        table.setTableStyle(workbook.getTableStyles().get(\"testStyle\"));\n\n        //Style\n        //assign built-in styles for ranges.\n        worksheet.getRange(\"B2:H2\").setStyle(workbook.getStyles().get(\"Heading 1\"));\n        worksheet.getRange(\"B4:F4, B7:D7, B10:D10, B13:D13\").setStyle(workbook.getStyles().get(\"Heading 2\"));\n        worksheet.getRange(\"B16:H16, B34:H34\").setStyle(workbook.getStyles().get(\"Heading 3\"));\n\n        //modify built-in styles.\n        IStyle style_Heading1 = workbook.getStyles().get(\"Heading 1\");\n        style_Heading1.setHorizontalAlignment(HorizontalAlignment.General);\n        style_Heading1.setVerticalAlignment(VerticalAlignment.Center);\n        style_Heading1.getFont().setThemeFont(ThemeFont.Major);\n        style_Heading1.getFont().setSize(24);\n        style_Heading1.getFont().setBold(true);\n        style_Heading1.getFont().setThemeColor(ThemeColor.Accent1);\n        style_Heading1.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        style_Heading1.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent1);\n\n        style_Heading1.setIncludeAlignment(true);\n        style_Heading1.setIncludeFont(true);\n        style_Heading1.setIncludeBorder(true);\n        style_Heading1.setIncludeNumber(false);\n        style_Heading1.setIncludePatterns(false);\n        style_Heading1.setIncludeProtection(false);\n\n        IStyle style_Heading2 = workbook.getStyles().get(\"Heading 2\");\n        style_Heading2.setHorizontalAlignment(HorizontalAlignment.General);\n        style_Heading2.setVerticalAlignment(VerticalAlignment.Bottom);\n        style_Heading2.getFont().setThemeFont(ThemeFont.Minor);\n        style_Heading2.getFont().setSize(14);\n        style_Heading2.getFont().setThemeColor(ThemeColor.Dark1);\n        style_Heading2.getFont().setTintAndShade(0.25);\n        style_Heading2.getFont().setBold(false);\n        style_Heading2.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Dotted);\n        style_Heading2.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Light1);\n        style_Heading2.getBorders().get(BordersIndex.EdgeBottom).setTintAndShade(-0.5);\n\n        style_Heading2.setIncludeAlignment(true);\n        style_Heading2.setIncludeFont(true);\n        style_Heading2.setIncludeBorder(true);\n        style_Heading2.setIncludeNumber(false);\n        style_Heading2.setIncludePatterns(false);\n        style_Heading2.setIncludeProtection(false);\n\n        IStyle style_Heading3 = workbook.getStyles().get(\"Heading 3\");\n        style_Heading3.setHorizontalAlignment(HorizontalAlignment.General);\n        style_Heading3.setVerticalAlignment(VerticalAlignment.Center);\n        style_Heading3.getFont().setThemeFont(ThemeFont.Minor);\n        style_Heading3.getFont().setSize(14);\n        style_Heading3.getFont().setBold(true);\n        style_Heading3.getFont().setThemeColor(ThemeColor.Dark1);\n        style_Heading3.getFont().setTintAndShade(0.25);\n        style_Heading3.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        style_Heading3.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent2);\n\n        style_Heading3.setIncludeAlignment(true);\n        style_Heading3.setIncludeFont(true);\n        style_Heading3.setIncludeBorder(true);\n        style_Heading3.setIncludeNumber(false);\n        style_Heading3.setIncludePatterns(false);\n        style_Heading3.setIncludeProtection(false);\n\n        IStyle style_Normal = workbook.getStyles().get(\"Normal\");\n        style_Normal.setNumberFormat(\"General\");\n        style_Normal.setHorizontalAlignment(HorizontalAlignment.General);\n        style_Normal.setVerticalAlignment(VerticalAlignment.Center);\n        style_Normal.getFont().setThemeFont(ThemeFont.Minor);\n        style_Normal.getFont().setSize(10);\n        style_Normal.getFont().setThemeColor(ThemeColor.Dark1);\n        style_Normal.getFont().setTintAndShade(0.25);\n\n        style_Normal.setIncludeAlignment(true);\n        style_Normal.setIncludeFont(true);\n        style_Normal.setIncludeBorder(true);\n        style_Normal.setIncludeNumber(true);\n        style_Normal.setIncludePatterns(true);\n        style_Normal.setIncludeProtection(true);\n\n        //modify cell styles.\n        worksheet.getRange(\"B4\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        worksheet.getRange(\"C4:F4\").getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thin);\n        IRange range1 = worksheet.getRange(\"E7:F7, E10:F10\");\n        range1.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Dotted);\n        range1.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Light1);\n        range1.getBorders().get(BordersIndex.EdgeBottom).setTintAndShade(-0.5);\n        range1.getFont().setBold(true);\n        IRange range2 = worksheet.getRange(\"E7, E10\");\n        range2.getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thin);\n        range2.getBorders().get(BordersIndex.EdgeRight).setThemeColor(ThemeColor.Light1);\n        range2.getBorders().get(BordersIndex.EdgeRight).setTintAndShade(-0.5);\n\n        //Chart\n        //create a new chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 8.99984251968504, 268.5, 627.750157480315, 184.5);\n\n        //create series for chart.\n        ISeries series_systolic = shape.getChart().getSeriesCollection().newSeries();\n        ISeries series_diatolic = shape.getChart().getSeriesCollection().newSeries();\n        ISeries series_HeartRate = shape.getChart().getSeriesCollection().newSeries();\n\n        //set series formulas.\n        series_systolic.setFormula(\"=SERIES('BLOOD PRESSURE DATA'!$E$36,'BLOOD PRESSURE DATA'!$C$37:$D$44,'BLOOD PRESSURE DATA'!$E$37:$E$44,1)\");\n        series_diatolic.setFormula(\"=SERIES('BLOOD PRESSURE DATA'!$F$36,'BLOOD PRESSURE DATA'!$C$37:$D$44,'BLOOD PRESSURE DATA'!$F$37:$F$44,2)\");\n\n        //set series plot on secondary axis, and change its chart type.\n        series_HeartRate.setAxisGroup(AxisGroup.Secondary);\n        series_HeartRate.setChartType(ChartType.Line);\n        series_HeartRate.setFormula(\"=SERIES('BLOOD PRESSURE DATA'!$G$36,,'BLOOD PRESSURE DATA'!$G$37:$G$44,3)\");\n\n        //set series fill to gradient fill.\n        series_systolic.getFormat().getFill().twoColorGradient(GradientStyle.Horizontal, 1);\n        series_systolic.getFormat().getFill().setGradientAngle(270);\n        series_systolic.getFormat().getFill().getGradientStops().get(0).getColor().setRGB(Color.FromArgb(255, 172, 175));\n        series_systolic.getFormat().getFill().getGradientStops().get(1).getColor().setRGB(Color.FromArgb(255, 227, 228));\n        series_systolic.getFormat().getFill().getGradientStops().insert(0xFEC6C8, 0.35);\n        series_systolic.getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Accent6);\n\n        series_diatolic.getFormat().getFill().twoColorGradient(GradientStyle.Horizontal, 1);\n        series_diatolic.getFormat().getFill().setGradientAngle(270);\n        series_diatolic.getFormat().getFill().getGradientStops().get(0).getColor().setRGB(Color.FromArgb(255, 192, 147));\n        series_diatolic.getFormat().getFill().getGradientStops().get(1).getColor().setRGB(Color.FromArgb(255, 227, 212));\n        series_diatolic.getFormat().getFill().getGradientStops().insert(0xFFCBA9, 0.35);\n        series_diatolic.getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Accent5);\n\n        //set series gap width and overlap.\n        shape.getChart().getColumnGroups().get(0).setGapWidth(150);\n        shape.getChart().getColumnGroups().get(0).setOverlap(0);\n\n        //set series line style.\n        series_HeartRate.getFormat().getLine().setBeginArrowheadLength(ArrowheadLength.Medium);\n        series_HeartRate.getFormat().getLine().setBeginArrowheadStyle(ArrowheadStyle.None);\n        series_HeartRate.getFormat().getLine().setBeginArrowheadWidth(ArrowheadWidth.Medium);\n        series_HeartRate.getFormat().getLine().getColor().setObjectThemeColor(ThemeColor.Accent4);\n        series_HeartRate.getFormat().getLine().getColor().setTintAndShade(0);\n        series_HeartRate.getFormat().getLine().setDashStyle(LineDashStyle.Solid);\n        series_HeartRate.getFormat().getLine().setEndArrowheadLength(ArrowheadLength.Medium);\n        series_HeartRate.getFormat().getLine().setEndArrowheadStyle(ArrowheadStyle.None);\n        series_HeartRate.getFormat().getLine().setEndArrowheadWidth(ArrowheadWidth.Medium);\n        series_HeartRate.getFormat().getLine().setStyle(LineStyle.Single);\n        series_HeartRate.getFormat().getLine().setWeight(1.25);\n\n        IAxis primary_axis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Primary);\n        primary_axis.setHasTitle(true);\n        primary_axis.getAxisTitle().setText(\"BLOOD PRESSURE\");\n        primary_axis.getAxisTitle().setIncludeInLayout(true);\n\n        IAxis secondary_axis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Secondary);\n        secondary_axis.setHasTitle(true);\n        secondary_axis.getAxisTitle().setText(\"HEART RATE\");\n        secondary_axis.getAxisTitle().setIncludeInLayout(true);\n\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category, AxisGroup.Primary);\n        category_axis.setHasTitle(true);\n        category_axis.setCategoryType(CategoryType.CategoryScale);\n        category_axis.getFormat().getLine().getColor().setColorType(SolidColorType.None);\n\n        shape.getChart().setHasTitle(false);\n        //set chart font style.\n        shape.getChart().getChartArea().getFont().setSize(9);\n        shape.getChart().getChartArea().getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape.getChart().getChartArea().getFont().getColor().setBrightness(0.5);\n\n\n        //Shape\n        IShape shape1 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 402, 77.25, 234, 100);\n        shape1.getFill().solid();\n        shape1.getFill().getColor().setObjectThemeColor(ThemeColor.Accent1);\n        shape1.getFill().getColor().setBrightness(0.6);\n        //set shape's border to no line.\n        shape1.getLine().getColor().setColorType(SolidColorType.None);\n\n        //set shape rich text.\n        ITextRange shape1_p1 = shape1.getTextFrame().getTextRange().getParagraphs().get(0);\n        shape1_p1.setText(\"*\");\n        shape1_p1.getRuns().add(\" Blood pressures may vary dependent on many\");\n        shape1_p1.getRuns().add(\" factors.  Always consult with a physician about what is normal for you.  These numbers may vary slightly.\");\n\n        ITextRange shape1_p2 = shape1.getTextFrame().getTextRange().getParagraphs().add(\"\");\n        ITextRange shape1_p3 = shape1.getTextFrame().getTextRange().getParagraphs().add(\"Info from National Institute of Health:\");\n        ITextRange shape1_p4 = shape1.getTextFrame().getTextRange().getParagraphs().add(\"http://www.nhlbi.nih.gov/health/health-topics/topics/hbp/\");\n\n        shape1.getTextFrame().getTextRange().getFont().setSize(10);\n        shape1.getTextFrame().getTextRange().getFont().setThemeFont(ThemeFont.Minor);\n        shape1.getTextFrame().getTextRange().getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape1.getTextFrame().getTextRange().getFont().getColor().setBrightness(0.25);\n        shape1_p3.getRuns().get(0).getFont().setBold(true);\n\n        IShape shape2 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 421.5, 546.75, 198, 50);\n        shape2.getFill().solid();\n        shape2.getFill().getColor().setObjectThemeColor(ThemeColor.Accent3);\n        shape2.getFill().getColor().setBrightness(0.6);\n        //set shape's border to no line.\n        shape2.getLine().getColor().setColorType(SolidColorType.None);\n\n        ITextRange shape2_p1 = shape2.getTextFrame().getTextRange().getParagraphs().get(0);\n        shape2_p1.setText(\"NOTE:\");\n        shape2_p1.getRuns().add(\" Any blood pressure readings over the indicated numbers (\\\"CALL PHYSICIAN IF ABOVE\\\") will be\");\n        shape2_p1.getRuns().add(\" highlighted.\");\n\n        shape2.getTextFrame().getTextRange().getFont().setSize(10);\n        shape2.getTextFrame().getTextRange().getFont().setThemeFont(ThemeFont.Minor);\n        shape2.getTextFrame().getTextRange().getFont().getColor().setObjectThemeColor(ThemeColor.Dark1);\n        shape2.getTextFrame().getTextRange().getFont().getColor().setBrightness(0.25);\n        shape2_p1.getRuns().get(0).getFont().setBold(true);\n\n        //DefinedName\n        //create defined names for workbook.\n        workbook.getNames().add(\"MaxDiastolic\", \"='BLOOD PRESSURE DATA'!$F$10\");\n        workbook.getNames().add(\"MaxSystolic\", \"='BLOOD PRESSURE DATA'!$E$10\");\n\n        //ConditionalFormat\n        //create conditional format for ranges.\n        IFormatCondition condition1 = (IFormatCondition) worksheet.getRange(\"E37:E44\").getFormatConditions().add(FormatConditionType.Expression, FormatConditionOperator.Between, \"=E37>MaxSystolic\", null);\n        IFormatCondition condition2 = (IFormatCondition) worksheet.getRange(\"F37:F44\").getFormatConditions().add(FormatConditionType.Expression, FormatConditionOperator.Between, \"=F37>MaxDiastolic\", null);\n        condition1.getInterior().setColor(Color.GetRed());\n        condition2.getInterior().setColor(Color.GetRed());\n\n    ",
  "com.grapecity.documents.excel.examples.showcase.MovieList": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //------------------Set RowHeight & ColumnWidth----------------\n        worksheet.setStandardHeight(43.5);\n        worksheet.setStandardWidth(8.43);\n\n        worksheet.getRange(\"1:1\").setRowHeight(171);\n        worksheet.getRange(\"2:2\").setRowHeight(12.75);\n        worksheet.getRange(\"3:3\").setRowHeight(22.5);\n        worksheet.getRange(\"4:7\").setRowHeight(43.75);\n        worksheet.getRange(\"A:A\").setColumnWidth(2.887);\n        worksheet.getRange(\"B:B\").setColumnWidth(8.441);\n        worksheet.getRange(\"C:C\").setColumnWidth(12.777);\n        worksheet.getRange(\"D:D\").setColumnWidth(25.109);\n        worksheet.getRange(\"E:E\").setColumnWidth(12.109);\n        worksheet.getRange(\"F:F\").setColumnWidth(41.664);\n        worksheet.getRange(\"G:G\").setColumnWidth(18.555);\n        worksheet.getRange(\"H:H\").setColumnWidth(11);\n        worksheet.getRange(\"I:I\").setColumnWidth(13.664);\n        worksheet.getRange(\"J:J\").setColumnWidth(15.109);\n        worksheet.getRange(\"K:K\").setColumnWidth(38.887);\n        worksheet.getRange(\"L:L\").setColumnWidth(2.887);\n\n\n        //------------------------Set Table Values-------------------\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B3:K7\"), true);\n        worksheet.getRange(\"B3:K7\").setValue(new Object[][]{\n                {\"NO.\", \"YEAR\", \"TITLE\", \"REVIEW\", \"STARRING ACTORS\", \"DIRECTOR\", \"GENRE\", \"RATING\", \"FORMAT\", \"COMMENTS\"},\n                {1, 1994, \"Forrest Gump\", \"5 Stars\", \"Tom Hanks, Robin Wright, Gary Sinise\", \"Robert Zemeckis\", \"Drama\", \"PG-13\", \"DVD\", \"Based on the 1986 novel of the same name by Winston Groom\"},\n                {2, 1946, \"It’s a Wonderful Life\", \"2 Stars\", \"James Stewart, Donna Reed, Lionel Barrymore \", \"Frank Capra\", \"Drama\", \"G\", \"VHS\", \"Colorized version\"},\n                {3, 1988, \"Big\", \"4 Stars\", \"Tom Hanks, Elizabeth Perkins, Robert Loggia \", \"Penny Marshall\", \"Comedy\", \"PG\", \"DVD\", \"\"},\n                {4, 1954, \"Rear Window\", \"3 Stars\", \"James Stewart, Grace Kelly, Wendell Corey \", \"Alfred Hitchcock\", \"Suspense\", \"PG\", \"Blu-ray\", \"\"},\n        });\n\n\n        //-----------------------Set Table style--------------------\n        ITableStyle tableStyle = workbook.getTableStyles().add(\"Movie List\");\n        workbook.setDefaultTableStyle(\"Movie List\");\n\n        tableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getInterior().setColor(Color.GetWhite());\n\n        tableStyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe).getInterior().setColor(Color.FromArgb(38, 38, 38));\n\n        tableStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).getInterior().setColor(Color.GetBlack());\n\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getFont().setColor(Color.GetBlack());\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().setColor(Color.FromArgb(38, 38, 38));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setColor(Color.FromArgb(68, 217, 255));\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thick);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.None);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.None);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.None);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.None);\n        tableStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.None);\n\n\n        //--------------------------------Set Named Styles---------------------\n        IStyle movieListBorderStyle = workbook.getStyles().add(\"Movie list border\");\n        movieListBorderStyle.setIncludeNumber(true);\n        movieListBorderStyle.setIncludeAlignment(true);\n        movieListBorderStyle.setVerticalAlignment(VerticalAlignment.Center);\n        movieListBorderStyle.setWrapText(true);\n        movieListBorderStyle.setIncludeFont(true);\n        movieListBorderStyle.getFont().setName(\"Helvetica\");\n        movieListBorderStyle.getFont().setSize(11);\n        movieListBorderStyle.getFont().setColor(Color.GetWhite());\n        movieListBorderStyle.setIncludeBorder(true);\n        movieListBorderStyle.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        movieListBorderStyle.getBorders().get(BordersIndex.EdgeBottom).setColor(Color.FromArgb(38, 38, 38));\n        movieListBorderStyle.setIncludePatterns(true);\n        movieListBorderStyle.getInterior().setColor(Color.FromArgb(238, 219, 78));\n\n        IStyle nOStyle = workbook.getStyles().add(\"NO.\");\n        nOStyle.setIncludeNumber(true);\n        nOStyle.setIncludeAlignment(true);\n        nOStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        nOStyle.setVerticalAlignment(VerticalAlignment.Center);\n        nOStyle.setIncludeFont(true);\n        nOStyle.getFont().setName(\"Helvetica\");\n        nOStyle.getFont().setSize(11);\n        nOStyle.getFont().setColor(Color.GetWhite());\n        nOStyle.setIncludeBorder(true);\n        nOStyle.setIncludePatterns(true);\n        nOStyle.getInterior().setColor(Color.FromArgb(38, 38, 38));\n\n        IStyle reviewStyle = workbook.getStyles().add(\"Review\");\n        reviewStyle.setIncludeNumber(true);\n        reviewStyle.setIncludeAlignment(true);\n        reviewStyle.setVerticalAlignment(VerticalAlignment.Center);\n        reviewStyle.setIncludeFont(true);\n        reviewStyle.getFont().setName(\"Helvetica\");\n        reviewStyle.getFont().setSize(11);\n        reviewStyle.getFont().setColor(Color.GetWhite());\n        reviewStyle.setIncludeBorder(true);\n        reviewStyle.setIncludePatterns(true);\n        reviewStyle.getInterior().setColor(Color.FromArgb(38, 38, 38));\n\n        IStyle yearStyle = workbook.getStyles().add(\"Year\");\n        yearStyle.setIncludeNumber(true);\n        yearStyle.setIncludeAlignment(true);\n        yearStyle.setHorizontalAlignment(HorizontalAlignment.Left);\n        yearStyle.setVerticalAlignment(VerticalAlignment.Center);\n        yearStyle.setIncludeFont(true);\n        yearStyle.getFont().setName(\"Helvetica\");\n        yearStyle.getFont().setSize(11);\n        yearStyle.getFont().setColor(Color.GetWhite());\n        yearStyle.setIncludeBorder(true);\n        yearStyle.setIncludePatterns(true);\n        yearStyle.getInterior().setColor(Color.FromArgb(38, 38, 38));\n\n        IStyle heading1Style = workbook.getStyles().get(\"Heading 1\");\n        heading1Style.setIncludeAlignment(true);\n        heading1Style.setVerticalAlignment(VerticalAlignment.Bottom);\n        heading1Style.setIncludeBorder(true);\n        heading1Style.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\n        heading1Style.getBorders().get(BordersIndex.EdgeBottom).setColor(Color.FromArgb(68, 217, 255));\n        heading1Style.setIncludeFont(true);\n        heading1Style.getFont().setName(\"Helvetica\");\n        heading1Style.getFont().setBold(false);\n        heading1Style.getFont().setSize(12);\n        heading1Style.getFont().setColor(Color.GetBlack());\n\n        IStyle normalStyle = workbook.getStyles().get(\"Normal\");\n        normalStyle.setIncludeNumber(true);\n        normalStyle.setIncludeAlignment(true);\n        normalStyle.setVerticalAlignment(VerticalAlignment.Center);\n        normalStyle.setWrapText(true);\n        normalStyle.setIncludeFont(true);\n        normalStyle.getFont().setName(\"Helvetica\");\n        normalStyle.getFont().setSize(11);\n        normalStyle.getFont().setColor(Color.GetWhite());\n        normalStyle.setIncludePatterns(true);\n        normalStyle.getInterior().setColor(Color.FromArgb(38, 38, 38));\n\n\n        //-----------------------------Use NamedStyle--------------------------\n        worksheet.getSheetView().setDisplayGridlines(false);\n        worksheet.setTabColor(Color.FromArgb(38, 38, 38));\n        table.setTableStyle(tableStyle);\n\n        worksheet.getRange(\"A2:L2\").setStyle(movieListBorderStyle);\n        worksheet.getRange(\"B3:K3\").setStyle(heading1Style);\n        worksheet.getRange(\"B4:B7\").setStyle(nOStyle);\n        worksheet.getRange(\"C4:C7\").setStyle(yearStyle);\n        worksheet.getRange(\"E4:E7\").setStyle(reviewStyle);\n        worksheet.getRange(\"F4:F7\").setIndentLevel(1);\n        worksheet.getRange(\"F4:F7\").setHorizontalAlignment(HorizontalAlignment.Left);\n\n\n        //-----------------------------Add Shapes------------------------------\n        //Movie picture\n        InputStream stream = this.getResourceStream(\"movie.png\");\n\n        //Movie list picture\n        InputStream stream2 = this.getResourceStream(\"list.png\");\n        try {\n            IShape pictureShape = worksheet.getShapes().addPicture(stream, ImageType.PNG, 0, 1, worksheet.getRange(\"A:L\").getWidth(), worksheet.getRange(\"1:1\").getHeight() - 1.5);\n            pictureShape.setPlacement(Placement.Move);\n\n            IShape pictureShape2 = worksheet.getShapes().addPicture(stream2, ImageType.PNG, 1, 0.8, 325.572, 85.51);\n            pictureShape2.setPlacement(Placement.Move);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        //Rounded Rectangular Callout 7\n        IShape roundedRectangular = worksheet.getShapes().addShape(AutoShapeType.RoundedRectangularCallout, 437.5, 22.75, 342, 143);\n        roundedRectangular.setName(\"Rounded Rectangular Callout 7\");\n        roundedRectangular.setPlacement(Placement.Move);\n        roundedRectangular.getTextFrame().getTextRange().getFont().setName(\"Helvetica\");\n        roundedRectangular.getTextFrame().getTextRange().getFont().getColor().setRGB(Color.FromArgb(38, 38, 38));\n\n        roundedRectangular.getFill().solid();\n        roundedRectangular.getFill().getColor().setRGB(Color.FromArgb(68, 217, 255));\n        roundedRectangular.getFill().setTransparency(0);\n        roundedRectangular.getLine().solid();\n        roundedRectangular.getLine().getColor().setRGB(Color.FromArgb(0, 129, 162));\n        roundedRectangular.getLine().setWeight(2);\n        roundedRectangular.getLine().setTransparency(0);\n\n        ITextRange roundedRectangular_p0 = roundedRectangular.getTextFrame().getTextRange().getParagraphs().get(0);\n        roundedRectangular_p0.getRuns().getFont().setBold(true);\n        roundedRectangular_p0.getRuns().add(\"TABLE\");\n        roundedRectangular_p0.getRuns().add(\" TIP\");\n\n        roundedRectangular.getTextFrame().getTextRange().getParagraphs().add(\"\");\n\n        ITextRange roundedRectangular_p2 = roundedRectangular.getTextFrame().getTextRange().getParagraphs().add();\n        roundedRectangular_p2.getRuns().add(\"Use the drop down arrows in the table headings to quickly filter your movie list. \" +\n                \"For multiple entry fields, such as Starring Actors,  select the drop down arrow next to the field and enter text in the Search box. \" +\n                \"For example, type Tom Hanks or James Stewart, and then select OK.\");\n\n        roundedRectangular.getTextFrame().getTextRange().getParagraphs().add(\"\");\n\n        ITextRange roundedRectangular_p4 = roundedRectangular.getTextFrame().getTextRange().getParagraphs().add();\n        roundedRectangular_p4.getRuns().add(\"To delete this note, click the edge to select it and then press \");\n        roundedRectangular_p4.getRuns().add(\"Delete\");\n        roundedRectangular_p4.getRuns().add(\".\");\n        roundedRectangular_p4.getRuns().get(2).getFont().setBold(true);\n\n        roundedRectangular.getTextFrame().getTextRange().getParagraphs().add(\"\");\n\n        //Add Stright Line Shape\n        IShape lineShape = worksheet.getShapes().addConnector(ConnectorType.Straight, 455.228f, 57.35f, 756.228f, 57.35f);\n        lineShape.getLine().solid();\n        lineShape.getLine().setWeight(3);\n        lineShape.getLine().getColor().setRGB(Color.FromArgb(38, 38, 38));\n        lineShape.getLine().setDashStyle(LineDashStyle.SysDot);\n\n    ",
  "com.grapecity.documents.excel.examples.templates.templatesamples.DepartmentBudget": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_DepartmentBudget.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t//#region Define custom classes\n\t\t//class Departments\n\t\t//{\n\t\t//    public List<Department> dpt;\n\t\t//}\n\n\t\t//class Department\n\t\t//{\n\t\t//    public string name;\n\t\t//    public string mgr;\n\t\t//    public double bud;\n\t\t//    public List<Employee> emp;\n\t\t//}\n\n\t\t//class Employee\n\t\t//{\n\t\t//    public string name;\n\t\t//    public double salary;\n\t\t//}\n\t\t//#endregion\n\n\t\t//#region Init Data\n\t\tDepartments departments = new Departments();\n\t\tdepartments.dpt = new ArrayList<Department>();\n\n\t\t//Department 1\n\t\tDepartment department1 = new Department();\n\t\tdepartment1.name = \"Marketing\";\n\t\tdepartment1.mgr = \"Carl Sommerset\";\n\t\tdepartment1.bud = 354586;\n\n\t\tdepartment1.emp = new ArrayList<Employee>();\n\n\t\tEmployee d1_e1 = new Employee();\n\t\td1_e1.name = \"JoeKline\";\n\t\td1_e1.salary = 49402;\n\t\tdepartment1.emp.add(d1_e1);\n\n\t\tEmployee d1_e2 = new Employee();\n\t\td1_e2.name = \"Lisa Crane\";\n\t\td1_e2.salary = 81337;\n\t\tdepartment1.emp.add(d1_e2);\n\n\t\tEmployee d1_e3 = new Employee();\n\t\td1_e3.name = \"John Ryes\";\n\t\td1_e3.salary = 43503;\n\t\tdepartment1.emp.add(d1_e3);\n\n\t\tEmployee d1_e4 = new Employee();\n\t\td1_e4.name = \"Elli Davidson\";\n\t\td1_e4.salary = 67334;\n\t\tdepartment1.emp.add(d1_e4);\n\n\t\tEmployee d1_e5 = new Employee();\n\t\td1_e5.name = \"Jack Reaze\";\n\t\td1_e5.salary = 68314;\n\t\tdepartment1.emp.add(d1_e5);\n\n\t\tEmployee d1_e6 = new Employee();\n\t\td1_e6.name = \"Ben Lam\";\n\t\td1_e6.salary = 44696;\n\t\tdepartment1.emp.add(d1_e6);\n\n\t\tdepartments.dpt.add(department1);\n\n\t\t//Department 2\n\t\tDepartment department2 = new Department();\n\t\tdepartment2.name = \"Sales\";\n\t\tdepartment2.mgr = \"Kelly Johnson\";\n\t\tdepartment2.bud = 237721;\n\n\t\tdepartment2.emp = new ArrayList<Employee>();\n\t\tEmployee d2_e1 = new Employee();\n\t\td2_e1.name = \"Liam Elmerson\";\n\t\td2_e1.salary = 61892;\n\t\tdepartment2.emp.add(d2_e1);\n\n\t\tEmployee d2_e2 = new Employee();\n\t\td2_e2.name = \"Angela Sanderson\";\n\t\td2_e2.salary = 38020;\n\t\tdepartment2.emp.add(d2_e2);\n\n\t\tEmployee d2_e3 = new Employee();\n\t\td2_e3.name = \"Blake Schwarz\";\n\t\td2_e3.salary = 55701;\n\t\tdepartment2.emp.add(d2_e3);\n\n\t\tEmployee d2_e4 = new Employee();\n\t\td2_e4.name = \"Linda Barataz\";\n\t\td2_e4.salary = 82108;\n\t\tdepartment2.emp.add(d2_e4);\n\n\t\tdepartments.dpt.add(department2);\n\n\t\t//Department 3\n\t\tDepartment department3 = new Department();\n\t\tdepartment3.name = \"Engineering\";\n\t\tdepartment3.mgr = \"Gina Davis\";\n\t\tdepartment3.bud = 624789;\n\n\t\tdepartment3.emp = new ArrayList<Employee>();\n\n\t\tEmployee d3_e1 = new Employee();\n\t\td3_e1.name = \"Christopher Dean\";\n\t\td3_e1.salary = 58329;\n\t\tdepartment3.emp.add(d3_e1);\n\n\t\tEmployee d3_e2 = new Employee();\n\t\td3_e2.name = \"Jack Linner\";\n\t\td3_e2.salary = 63684;\n\t\tdepartment3.emp.add(d3_e2);\n\n\t\tEmployee d3_e3 = new Employee();\n\t\td3_e3.name = \"Cathy Raines\";\n\t\td3_e3.salary = 73147;\n\t\tdepartment3.emp.add(d3_e3);\n\n\t\tEmployee d3_e4 = new Employee();\n\t\td3_e4.name = \"Scott Ashton\";\n\t\td3_e4.salary = 77213;\n\t\tdepartment3.emp.add(d3_e4);\n\n\t\tEmployee d3_e5 = new Employee();\n\t\td3_e5.name = \"Larry Wisell\";\n\t\td3_e5.salary = 72796;\n\t\tdepartment3.emp.add(d3_e5);\n\n\t\tEmployee d3_e6 = new Employee();\n\t\td3_e6.name = \"Bart Ingram\";\n\t\td3_e6.salary = 50009;\n\t\tdepartment3.emp.add(d3_e6);\n\n\t\tEmployee d3_e7 = new Employee();\n\t\td3_e7.name = \"Wesley Page\";\n\t\td3_e7.salary = 82378;\n\t\tdepartment3.emp.add(d3_e7);\n\n\t\tEmployee d3_e8 = new Employee();\n\t\td3_e8.name = \"Alan Keyes\";\n\t\td3_e8.salary = 67105;\n\t\tdepartment3.emp.add(d3_e8);\n\n\t\tEmployee d3_e9 = new Employee();\n\t\td3_e9.name = \"Wilson Musk\";\n\t\td3_e9.salary = 80128;\n\t\tdepartment3.emp.add(d3_e9);\n\n\t\tdepartments.dpt.add(department3);\n\n\t\t//Department 4\n\t\tDepartment department4 = new Department();\n\t\tdepartment4.name = \"Customer Service\";\n\t\tdepartment4.mgr = \"Kenneth Smith\";\n\t\tdepartment4.bud = 127596;\n\n\t\tdepartment4.emp = new ArrayList<Employee>();\n\n\t\tEmployee d4_e1 = new Employee();\n\t\td4_e1.name = \"Sherry Meeks\";\n\t\td4_e1.salary = 38919;\n\t\tdepartment4.emp.add(d4_e1);\n\n\t\tEmployee d4_e2 = new Employee();\n\t\td4_e2.name = \"Sharon Reeves\";\n\t\td4_e2.salary = 40963;\n\t\tdepartment4.emp.add(d4_e2);\n\n\t\tEmployee d4_e3 = new Employee();\n\t\td4_e3.name = \"Max Devillo\";\n\t\td4_e3.salary = 47714;\n\t\tdepartment4.emp.add(d4_e3);\n\n\t\tdepartments.dpt.add(department4);\n\t\t//         #endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", departments);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatesamples.PurchaseOrder": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_PurchaseOrder.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\n\t\t//\t\tpublic class PurchaseOrderInfo {\n\t\t//\t\t\tpublic int s_no;\n\t\t//\t\t\tpublic String itemnumber;\n\t\t//\t\t\tpublic String itemdescription;\n\t\t//\t\t\tpublic int quantity;\n\t\t//\t\t\tpublic String um;\n\t\t//\t\t\tpublic int price;\n\t\t//\t\t}\n\n\t\t//\t\tpublic class PurchaseOrderBasicInfo {\n\t\t//\t\t\tpublic String iD;\n\t\t//\t\t\tpublic Date orderDate = new Date(0);\n\t\t//\t\t\tpublic String creditTerms;\n\t\t//\t\t\tpublic String pONumber;\n\t\t//\t\t\tpublic String ref;\n\t\t//\t\t\tpublic String deliverToCompany;\n\t\t//\t\t\tpublic String deliverToAddress;\n\t\t//\t\t\tpublic String postalCode;\n\t\t//\t\t\tpublic String country;\n\t\t//\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<PurchaseOrderInfo> purchaseOrderInfoList = new ArrayList<PurchaseOrderInfo>();\n\n\t\tPurchaseOrderInfo purchaseOrderInfo1 = new PurchaseOrderInfo();\n\t\tpurchaseOrderInfo1.s_no = 1;\n\t\tpurchaseOrderInfo1.itemnumber = \"P1001\";\n\t\tpurchaseOrderInfo1.itemdescription = \"Pencils HB\";\n\t\tpurchaseOrderInfo1.quantity = 5;\n\t\tpurchaseOrderInfo1.um = \"dozen\";\n\t\tpurchaseOrderInfo1.price = 10;\n\t\tpurchaseOrderInfoList.add(purchaseOrderInfo1);\n\n\t\tPurchaseOrderInfo purchaseOrderInfo2 = new PurchaseOrderInfo();\n\t\tpurchaseOrderInfo2.s_no = 2;\n\t\tpurchaseOrderInfo2.itemnumber = \"P1003\";\n\t\tpurchaseOrderInfo2.itemdescription = \"Pencils 2B\";\n\t\tpurchaseOrderInfo2.quantity = 4;\n\t\tpurchaseOrderInfo2.um = \"dozen\";\n\t\tpurchaseOrderInfo2.price = 10;\n\t\tpurchaseOrderInfoList.add(purchaseOrderInfo2);\n\n\t\tPurchaseOrderInfo purchaseOrderInfo3 = new PurchaseOrderInfo();\n\t\tpurchaseOrderInfo3.s_no = 3;\n\t\tpurchaseOrderInfo3.itemnumber = \"P1003\";\n\t\tpurchaseOrderInfo3.itemdescription = \"Paper A4 - Photo Copier\";\n\t\tpurchaseOrderInfo3.quantity = 10;\n\t\tpurchaseOrderInfo3.um = \"ream\";\n\t\tpurchaseOrderInfo3.price = 3;\n\t\tpurchaseOrderInfoList.add(purchaseOrderInfo3);\n\n\t\tPurchaseOrderInfo purchaseOrderInfo4 = new PurchaseOrderInfo();\n\t\tpurchaseOrderInfo4.s_no = 4;\n\t\tpurchaseOrderInfo4.itemnumber = \"P1234\";\n\t\tpurchaseOrderInfo4.itemdescription = \"Pens - Ball point\";\n\t\tpurchaseOrderInfo4.quantity = 15;\n\t\tpurchaseOrderInfo4.um = \"boxes\";\n\t\tpurchaseOrderInfo4.price = 2;\n\t\tpurchaseOrderInfoList.add(purchaseOrderInfo4);\n\n\t\tPurchaseOrderInfo purchaseOrderInfo5 = new PurchaseOrderInfo();\n\t\tpurchaseOrderInfo5.s_no = 5;\n\t\tpurchaseOrderInfo5.itemnumber = \"P3221\";\n\t\tpurchaseOrderInfo5.itemdescription = \"Highligter\";\n\t\tpurchaseOrderInfo5.quantity = 8;\n\t\tpurchaseOrderInfo5.um = \"sets\";\n\t\tpurchaseOrderInfo5.price = 10;\n\t\tpurchaseOrderInfoList.add(purchaseOrderInfo5);\n\n\t\tPurchaseOrderBasicInfo orderbasicInfo = new PurchaseOrderBasicInfo();\n\t\torderbasicInfo.iD = \"US120499\";\n\t\torderbasicInfo.orderDate = new GregorianCalendar(2019, 7, 7).getTime();\n\t\torderbasicInfo.creditTerms = \"30\";\n\t\torderbasicInfo.pONumber = \"PO1011\";\n\t\torderbasicInfo.ref = \"QT1231\";\n\t\torderbasicInfo.deliverToCompany = \"Sanfort Pvt. Ltd.\";\n\t\torderbasicInfo.deliverToAddress = \"1322, High Street, Geln Waverlay\";\n\t\torderbasicInfo.postalCode = \"Victoria 3456\";\n\t\torderbasicInfo.country = \"Australia\";\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"po\", purchaseOrderInfoList);\n\t\tworkbook.addDataSource(\"tax\", 5);\n\t\tworkbook.addDataSource(\"ds\", orderbasicInfo);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatesamples.FinancialDashboard": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_FinancialDashboard.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t///#region Define custom classes\n\t\t//\t\tpublic class FinancialRecord {\n\t\t//\t\t\tpublic String season;\n\t\t//\t\t\tpublic String country;\n\t\t//\t\t\tpublic double expect;\n\t\t//\t\t\tpublic double actual;\n\t\t//\t\t}\n\t\t///#endregion\n\n\t\t///#region Init Data\n\t\tList<FinancialRecord> financialRecords = new ArrayList<FinancialRecord>();\n\n\t\tFinancialRecord financialRecord1 = new FinancialRecord();\n\t\tfinancialRecord1.season = \"2016 Q1\";\n\t\tfinancialRecord1.country = \"USA\";\n\t\tfinancialRecord1.expect = 236047;\n\t\tfinancialRecord1.actual = 328554;\n\t\tfinancialRecords.add(financialRecord1);\n\n\t\tFinancialRecord financialRecord2 = new FinancialRecord();\n\t\tfinancialRecord2.season = \"2016 Q2\";\n\t\tfinancialRecord2.country = \"USA\";\n\t\tfinancialRecord2.expect = 373060;\n\t\tfinancialRecord2.actual = 238136;\n\t\tfinancialRecords.add(financialRecord2);\n\n\t\tFinancialRecord financialRecord3 = new FinancialRecord();\n\t\tfinancialRecord3.season = \"2016 Q3\";\n\t\tfinancialRecord3.country = \"USA\";\n\t\tfinancialRecord3.expect = 224132;\n\t\tfinancialRecord3.actual = 300822;\n\t\tfinancialRecords.add(financialRecord3);\n\n\t\tFinancialRecord financialRecord4 = new FinancialRecord();\n\t\tfinancialRecord4.season = \"2016 Q4\";\n\t\tfinancialRecord4.country = \"USA\";\n\t\tfinancialRecord4.expect = 269305;\n\t\tfinancialRecord4.actual = 315337;\n\t\tfinancialRecords.add(financialRecord4);\n\n\t\tFinancialRecord financialRecord5 = new FinancialRecord();\n\t\tfinancialRecord5.season = \"2017 Q1\";\n\t\tfinancialRecord5.country = \"USA\";\n\t\tfinancialRecord5.expect = 265397;\n\t\tfinancialRecord5.actual = 279008;\n\t\tfinancialRecords.add(financialRecord5);\n\n\t\tFinancialRecord financialRecord6 = new FinancialRecord();\n\t\tfinancialRecord6.season = \"2017 Q2\";\n\t\tfinancialRecord6.country = \"USA\";\n\t\tfinancialRecord6.expect = 214079;\n\t\tfinancialRecord6.actual = 206019;\n\t\tfinancialRecords.add(financialRecord6);\n\n\t\tFinancialRecord financialRecord7 = new FinancialRecord();\n\t\tfinancialRecord7.season = \"2017 Q3\";\n\t\tfinancialRecord7.country = \"USA\";\n\t\tfinancialRecord7.expect = 370191;\n\t\tfinancialRecord7.actual = 238294;\n\t\tfinancialRecords.add(financialRecord7);\n\n\t\tFinancialRecord financialRecord8 = new FinancialRecord();\n\t\tfinancialRecord8.season = \"2017 Q4\";\n\t\tfinancialRecord8.country = \"USA\";\n\t\tfinancialRecord8.expect = 266843;\n\t\tfinancialRecord8.actual = 242323;\n\t\tfinancialRecords.add(financialRecord8);\n\n\t\tFinancialRecord financialRecord9 = new FinancialRecord();\n\t\tfinancialRecord9.season = \"2016 Q1\";\n\t\tfinancialRecord9.country = \"Japan\";\n\t\tfinancialRecord9.expect = 350156;\n\t\tfinancialRecord9.actual = 370834;\n\t\tfinancialRecords.add(financialRecord9);\n\n\t\tFinancialRecord financialRecord10 = new FinancialRecord();\n\t\tfinancialRecord10.season = \"2016 Q2\";\n\t\tfinancialRecord10.country = \"Japan\";\n\t\tfinancialRecord10.expect = 369399;\n\t\tfinancialRecord10.actual = 247324;\n\t\tfinancialRecords.add(financialRecord10);\n\n\t\tFinancialRecord financialRecord11 = new FinancialRecord();\n\t\tfinancialRecord11.season = \"2016 Q3\";\n\t\tfinancialRecord11.country = \"Japan\";\n\t\tfinancialRecord11.expect = 278834;\n\t\tfinancialRecord11.actual = 237385;\n\t\tfinancialRecords.add(financialRecord11);\n\n\t\tFinancialRecord financialRecord12 = new FinancialRecord();\n\t\tfinancialRecord12.season = \"2016 Q4\";\n\t\tfinancialRecord12.country = \"Japan\";\n\t\tfinancialRecord12.expect = 264277;\n\t\tfinancialRecord12.actual = 245048;\n\t\tfinancialRecords.add(financialRecord12);\n\n\t\tFinancialRecord financialRecord13 = new FinancialRecord();\n\t\tfinancialRecord13.season = \"2017 Q1\";\n\t\tfinancialRecord13.country = \"Japan\";\n\t\tfinancialRecord13.expect = 203006;\n\t\tfinancialRecord13.actual = 295389;\n\t\tfinancialRecords.add(financialRecord13);\n\n\t\tFinancialRecord financialRecord14 = new FinancialRecord();\n\t\tfinancialRecord14.season = \"2017 Q2\";\n\t\tfinancialRecord14.country = \"Japan\";\n\t\tfinancialRecord14.expect = 276987;\n\t\tfinancialRecord14.actual = 215804;\n\t\tfinancialRecords.add(financialRecord14);\n\n\t\tFinancialRecord financialRecord15 = new FinancialRecord();\n\t\tfinancialRecord15.season = \"2017 Q3\";\n\t\tfinancialRecord15.country = \"Japan\";\n\t\tfinancialRecord15.expect = 330315;\n\t\tfinancialRecord15.actual = 330443;\n\t\tfinancialRecords.add(financialRecord15);\n\n\t\tFinancialRecord financialRecord16 = new FinancialRecord();\n\t\tfinancialRecord16.season = \"2017 Q4\";\n\t\tfinancialRecord16.country = \"Japan\";\n\t\tfinancialRecord16.expect = 307477;\n\t\tfinancialRecord16.actual = 262512;\n\t\tfinancialRecords.add(financialRecord16);\n\n\t\tFinancialRecord financialRecord17 = new FinancialRecord();\n\t\tfinancialRecord17.season = \"2016 Q1\";\n\t\tfinancialRecord17.country = \"Korea\";\n\t\tfinancialRecord17.expect = 229432;\n\t\tfinancialRecord17.actual = 330368;\n\t\tfinancialRecords.add(financialRecord17);\n\n\t\tFinancialRecord financialRecord18 = new FinancialRecord();\n\t\tfinancialRecord18.season = \"2016 Q2\";\n\t\tfinancialRecord18.country = \"Korea\";\n\t\tfinancialRecord18.expect = 321904;\n\t\tfinancialRecord18.actual = 279114;\n\t\tfinancialRecords.add(financialRecord18);\n\n\t\tFinancialRecord financialRecord19 = new FinancialRecord();\n\t\tfinancialRecord19.season = \"2016 Q3\";\n\t\tfinancialRecord19.country = \"Korea\";\n\t\tfinancialRecord19.expect = 230496;\n\t\tfinancialRecord19.actual = 219257;\n\t\tfinancialRecords.add(financialRecord19);\n\n\t\tFinancialRecord financialRecord20 = new FinancialRecord();\n\t\tfinancialRecord20.season = \"2016 Q4\";\n\t\tfinancialRecord20.country = \"Korea\";\n\t\tfinancialRecord20.expect = 254328;\n\t\tfinancialRecord20.actual = 361880;\n\t\tfinancialRecords.add(financialRecord20);\n\n\t\tFinancialRecord financialRecord21 = new FinancialRecord();\n\t\tfinancialRecord21.season = \"2017 Q1\";\n\t\tfinancialRecord21.country = \"Korea\";\n\t\tfinancialRecord21.expect = 272263;\n\t\tfinancialRecord21.actual = 355419;\n\t\tfinancialRecords.add(financialRecord21);\n\n\t\tFinancialRecord financialRecord22 = new FinancialRecord();\n\t\tfinancialRecord22.season = \"2017 Q2\";\n\t\tfinancialRecord22.country = \"Korea\";\n\t\tfinancialRecord22.expect = 214079;\n\t\tfinancialRecord22.actual = 231510;\n\t\tfinancialRecords.add(financialRecord22);\n\n\t\tFinancialRecord financialRecord23 = new FinancialRecord();\n\t\tfinancialRecord23.season = \"2017 Q3\";\n\t\tfinancialRecord23.country = \"Korea\";\n\t\tfinancialRecord23.expect = 238392;\n\t\tfinancialRecord23.actual = 237430;\n\t\tfinancialRecords.add(financialRecord23);\n\n\t\tFinancialRecord financialRecord24 = new FinancialRecord();\n\t\tfinancialRecord24.season = \"2017 Q4\";\n\t\tfinancialRecord24.country = \"Korea\";\n\t\tfinancialRecord24.expect = 294097;\n\t\tfinancialRecord24.actual = 257680;\n\t\tfinancialRecords.add(financialRecord24);\n\n\t\tFinancialRecord financialRecord25 = new FinancialRecord();\n\t\tfinancialRecord25.season = \"2016 Q1\";\n\t\tfinancialRecord25.country = \"China\";\n\t\tfinancialRecord25.expect = 238175;\n\t\tfinancialRecord25.actual = 266070;\n\t\tfinancialRecords.add(financialRecord25);\n\n\t\tFinancialRecord financialRecord26 = new FinancialRecord();\n\t\tfinancialRecord26.season = \"2016 Q2\";\n\t\tfinancialRecord26.country = \"China\";\n\t\tfinancialRecord26.expect = 202721;\n\t\tfinancialRecord26.actual = 353563;\n\t\tfinancialRecords.add(financialRecord26);\n\n\t\tFinancialRecord financialRecord27 = new FinancialRecord();\n\t\tfinancialRecord27.season = \"2016 Q3\";\n\t\tfinancialRecord27.country = \"China\";\n\t\tfinancialRecord27.expect = 253279;\n\t\tfinancialRecord27.actual = 312586;\n\t\tfinancialRecords.add(financialRecord27);\n\n\t\tFinancialRecord financialRecord28 = new FinancialRecord();\n\t\tfinancialRecord28.season = \"2016 Q4\";\n\t\tfinancialRecord28.country = \"China\";\n\t\tfinancialRecord28.expect = 211847;\n\t\tfinancialRecord28.actual = 306970;\n\t\tfinancialRecords.add(financialRecord28);\n\n\t\tFinancialRecord financialRecord29 = new FinancialRecord();\n\t\tfinancialRecord29.season = \"2017 Q1\";\n\t\tfinancialRecord29.country = \"China\";\n\t\tfinancialRecord29.expect = 369314;\n\t\tfinancialRecord29.actual = 315718;\n\t\tfinancialRecords.add(financialRecord2);\n\n\t\tFinancialRecord financialRecord30 = new FinancialRecord();\n\t\tfinancialRecord30.season = \"2017 Q2\";\n\t\tfinancialRecord30.country = \"China\";\n\t\tfinancialRecord30.expect = 201224;\n\t\tfinancialRecord30.actual = 368630;\n\t\tfinancialRecords.add(financialRecord30);\n\n\t\tFinancialRecord financialRecord31 = new FinancialRecord();\n\t\tfinancialRecord31.season = \"2017 Q3\";\n\t\tfinancialRecord31.country = \"China\";\n\t\tfinancialRecord31.expect = 239792;\n\t\tfinancialRecord31.actual = 255108;\n\t\tfinancialRecords.add(financialRecord31);\n\n\t\tFinancialRecord financialRecord32 = new FinancialRecord();\n\t\tfinancialRecord32.season = \"2017 Q4\";\n\t\tfinancialRecord32.country = \"China\";\n\t\tfinancialRecord32.expect = 271096;\n\t\tfinancialRecord32.actual = 297354;\n\t\tfinancialRecords.add(financialRecord32);\n\n\t\tFinancialRecord financialRecord33 = new FinancialRecord();\n\t\tfinancialRecord33.season = \"2016 Q1\";\n\t\tfinancialRecord33.country = \"India\";\n\t\tfinancialRecord33.expect = 236047;\n\t\tfinancialRecord33.actual = 328554;\n\t\tfinancialRecords.add(financialRecord33);\n\n\t\tFinancialRecord financialRecord34 = new FinancialRecord();\n\t\tfinancialRecord34.season = \"2016 Q2\";\n\t\tfinancialRecord34.country = \"India\";\n\t\tfinancialRecord34.expect = 373060;\n\t\tfinancialRecord34.actual = 238136;\n\t\tfinancialRecords.add(financialRecord34);\n\n\t\tFinancialRecord financialRecord35 = new FinancialRecord();\n\t\tfinancialRecord35.season = \"2016 Q3\";\n\t\tfinancialRecord35.country = \"India\";\n\t\tfinancialRecord35.expect = 224132;\n\t\tfinancialRecord35.actual = 300822;\n\t\tfinancialRecords.add(financialRecord35);\n\n\t\tFinancialRecord financialRecord36 = new FinancialRecord();\n\t\tfinancialRecord36.season = \"2016 Q4\";\n\t\tfinancialRecord36.country = \"India\";\n\t\tfinancialRecord36.expect = 269305;\n\t\tfinancialRecord36.actual = 315337;\n\t\tfinancialRecords.add(financialRecord36);\n\n\t\tFinancialRecord financialRecord37 = new FinancialRecord();\n\t\tfinancialRecord37.season = \"2017 Q1\";\n\t\tfinancialRecord37.country = \"India\";\n\t\tfinancialRecord37.expect = 265397;\n\t\tfinancialRecord37.actual = 279008;\n\t\tfinancialRecords.add(financialRecord37);\n\n\t\tFinancialRecord financialRecord38 = new FinancialRecord();\n\t\tfinancialRecord38.season = \"2017 Q2\";\n\t\tfinancialRecord38.country = \"India\";\n\t\tfinancialRecord38.expect = 214079;\n\t\tfinancialRecord38.actual = 206019;\n\t\tfinancialRecords.add(financialRecord38);\n\n\t\tFinancialRecord financialRecord39 = new FinancialRecord();\n\t\tfinancialRecord39.season = \"2017 Q3\";\n\t\tfinancialRecord39.country = \"India\";\n\t\tfinancialRecord39.expect = 370191;\n\t\tfinancialRecord39.actual = 238294;\n\t\tfinancialRecords.add(financialRecord39);\n\n\t\tFinancialRecord financialRecord40 = new FinancialRecord();\n\t\tfinancialRecord40.season = \"2017 Q4\";\n\t\tfinancialRecord40.country = \"India\";\n\t\tfinancialRecord40.expect = 266843;\n\t\tfinancialRecord40.actual = 242323;\n\t\tfinancialRecords.add(financialRecord40);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", financialRecords);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatesamples.ShippingAndDeliveryOrder": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_ShippingAndDeliveryOrder.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t///#region Define custom classes\n\t\t//\t\tpublic class PackingList {\n\t\t//\t\t\tpublic String exporter;\n\t\t//\t\t\tpublic String address_exporter;\n\t\t//\t\t\tpublic String country_exporter;\n\t\t//\t\t\tpublic String phonenumber_shipper;\n\t\t//\t\t\tpublic String shipper;\n\t\t//\n\t\t//\t\t\tpublic String imports;\n\t\t//\t\t\tpublic String address_consignee;\n\t\t//\t\t\tpublic String country_consignee;\n\t\t//\t\t\tpublic String phonenumber_consignee;\n\t\t//\t\t\tpublic String consignee;\n\t\t//\n\t\t//\t\t\tpublic int invoice_No;\n\t\t//\t\t\tpublic Date date = new Date(0);\n\t\t//\t\t\tpublic int reference;\n\t\t//\n\t\t//\t\t\tpublic String dispatchMethod;\n\t\t//\t\t\tpublic String shipmentType;\n\t\t//\t\t\tpublic String vA;\n\t\t//\t\t\tpublic String voyageNo;\n\t\t//\t\t\tpublic String portofLanding;\n\t\t//\t\t\tpublic Date departureDate = new Date(0);\n\t\t//\t\t\tpublic String dischargePort;\n\t\t//\t\t\tpublic String finalDestination;\n\t\t//\n\t\t//\t\t\tpublic String goodsOriginCountry;\n\t\t//\t\t\tpublic String destinationCountry;\n\t\t//\n\t\t//\t\t\tpublic ArrayList<Product> item;\n\t\t//\n\t\t//\t\t\tpublic String issuePlace;\n\t\t//\t\t\tpublic Date issueDate = new Date(0);\n\t\t//\t\t\tpublic String signatoryCompany;\n\t\t//\t\t\tpublic String signatoryName;\n\t\t//\n\t\t//\t\t}\n\n\t\t//\t\tpublic class Product {\n\t\t//\t\t\tpublic String productcode;\n\t\t//\t\t\tpublic String goods;\n\t\t//\t\t\tpublic double quantity;\n\t\t//\t\t\tpublic double netweight;\n\t\t//\t\t\tpublic String kindAndPackagesCount;\n\t\t//\t\t\tpublic double grossweight;\n\t\t//\t\t\tpublic double measurements;\n\t\t//\t\t}\n\t\t///#endregion\n\n\t\t///#region Init Data\n\t\tPackingList packinginfo = new PackingList();\n\t\tpackinginfo.exporter = \"DEL Exports\";\n\t\tpackinginfo.address_exporter = \"4243 Longline Vlvd Longline, CA - 98020\";\n\t\tpackinginfo.country_exporter = \"United States\";\n\t\tpackinginfo.phonenumber_shipper = \"010-510-22424\";\n\t\tpackinginfo.shipper = \"Diana Thompson\";\n\n\t\tpackinginfo.imports = \"Deanna Imports\";\n\t\tpackinginfo.address_consignee = \"113/23, Lombard Street Halford Townsville, Melbourne, 4323\";\n\t\tpackinginfo.country_consignee = \"Australia\";\n\t\tpackinginfo.phonenumber_consignee = \"010-510-33232\";\n\t\tpackinginfo.consignee = \"James Williams\";\n\n\t\tpackinginfo.invoice_No = 1934;\n\t\tpackinginfo.date = new GregorianCalendar(2019, 1, 30).getTime();\n\t\tpackinginfo.reference = 1934;\n\n\t\tpackinginfo.dispatchMethod = \"Sea\";\n\t\tpackinginfo.shipmentType = \"FCL\";\n\t\tpackinginfo.goodsOriginCountry = \"United States\";\n\t\tpackinginfo.destinationCountry = \"Australia\";\n\t\tpackinginfo.vA = \"MAKERS DYER\";\n\t\tpackinginfo.voyageNo = \"6E\";\n\t\tpackinginfo.portofLanding = \"Longline - California\";\n\t\tpackinginfo.departureDate = new GregorianCalendar(2019, 2, 1).getTime();\n\t\tpackinginfo.dischargePort = \"Melbourne - Australia\";\n\t\tpackinginfo.finalDestination = \"Australia\";\n\n\t\tProduct product1 = new Product();\n\t\tproduct1.productcode = \"P1001\";\n\t\tproduct1.goods = \"Pencils - HB\";\n\t\tproduct1.quantity = 5;\n\t\tproduct1.netweight = 0.1;\n\t\tproduct1.kindAndPackagesCount = \"PALLET X 1\";\n\t\tproduct1.grossweight = 750;\n\t\tproduct1.measurements = 1.7;\n\n\t\tProduct product2 = new Product();\n\t\tproduct2.productcode = \"P1002\";\n\t\tproduct2.goods = \"Paper - A4\";\n\t\tproduct2.quantity = 3;\n\t\tproduct2.netweight = 2;\n\t\tproduct2.kindAndPackagesCount = \"PALLET X 2\";\n\t\tproduct2.grossweight = 250;\n\t\tproduct2.measurements = 1.4;\n\n\t\tpackinginfo.item = new ArrayList<Product>(Arrays.asList(product1, product2));\n\n\t\tpackinginfo.issuePlace = \"Longline\";\n\t\tpackinginfo.issueDate = new GregorianCalendar(2019, 1, 30).getTime();\n\t\tpackinginfo.signatoryCompany = \"DEL Exports\";\n\t\tpackinginfo.signatoryName = \"Rayna Johnson\";\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", packinginfo);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatesamples.Sales": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_Sales.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class SalesInfo {\n\t\t//\t\t\tpublic String area;\n\t\t//\t\t\tpublic String salesman;\n\t\t//\t\t\tpublic String product;\n\t\t//\t\t\tpublic String productType;\n\t\t//\t\t\tpublic int sales;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<SalesInfo> salesInfos = new ArrayList<SalesInfo>();\n\n\t\tSalesInfo salesInfo1 = new SalesInfo();\n\t\tsalesInfo1.area = \"NorthChina\";\n\t\tsalesInfo1.salesman = \"Hellen\";\n\t\tsalesInfo1.product = \"Apple\";\n\t\tsalesInfo1.productType = \"Fruit\";\n\t\tsalesInfo1.sales = 120;\n\t\tsalesInfos.add(salesInfo1);\n\n\t\tSalesInfo salesInfo2 = new SalesInfo();\n\t\tsalesInfo2.area = \"NorthChina\";\n\t\tsalesInfo2.salesman = \"Hellen\";\n\t\tsalesInfo2.product = \"Banana\";\n\t\tsalesInfo2.productType = \"Fruit\";\n\t\tsalesInfo2.sales = 143;\n\t\tsalesInfos.add(salesInfo2);\n\n\t\tSalesInfo salesInfo3 = new SalesInfo();\n\t\tsalesInfo3.area = \"NorthChina\";\n\t\tsalesInfo3.salesman = \"Hellen\";\n\t\tsalesInfo3.product = \"Kiwi\";\n\t\tsalesInfo3.productType = \"Fruit\";\n\t\tsalesInfo3.sales = 322;\n\t\tsalesInfos.add(salesInfo3);\n\n\t\tSalesInfo salesInfo4 = new SalesInfo();\n\t\tsalesInfo4.area = \"NorthChina\";\n\t\tsalesInfo4.salesman = \"Hellen\";\n\t\tsalesInfo4.product = \"Carrots\";\n\t\tsalesInfo4.productType = \"Vegetable\";\n\t\tsalesInfo4.sales = 154;\n\t\tsalesInfos.add(salesInfo4);\n\n\t\tSalesInfo salesInfo5 = new SalesInfo();\n\t\tsalesInfo5.area = \"NorthChina\";\n\t\tsalesInfo5.salesman = \"Fancy\";\n\t\tsalesInfo5.product = \"Carrots\";\n\t\tsalesInfo5.productType = \"Vegetable\";\n\t\tsalesInfo5.sales = 131;\n\t\tsalesInfos.add(salesInfo5);\n\n\t\tSalesInfo salesInfo6 = new SalesInfo();\n\t\tsalesInfo6.area = \"NorthChina\";\n\t\tsalesInfo6.salesman = \"Fancy\";\n\t\tsalesInfo6.product = \"Cabbage\";\n\t\tsalesInfo6.productType = \"Vegetable\";\n\t\tsalesInfo6.sales = 98;\n\t\tsalesInfos.add(salesInfo6);\n\n\t\tSalesInfo salesInfo7 = new SalesInfo();\n\t\tsalesInfo7.area = \"NorthChina\";\n\t\tsalesInfo7.salesman = \"Fancy\";\n\t\tsalesInfo7.product = \"Potato\";\n\t\tsalesInfo7.productType = \"Vegetable\";\n\t\tsalesInfo7.sales = 212;\n\t\tsalesInfos.add(salesInfo7);\n\n\t\tSalesInfo salesInfo8 = new SalesInfo();\n\t\tsalesInfo8.area = \"NorthChina\";\n\t\tsalesInfo8.salesman = \"Fancy\";\n\t\tsalesInfo8.product = \"Apple\";\n\t\tsalesInfo8.productType = \"Fruit\";\n\t\tsalesInfo8.sales = 120;\n\t\tsalesInfos.add(salesInfo8);\n\n\t\tSalesInfo salesInfo9 = new SalesInfo();\n\t\tsalesInfo9.area = \"NorthChina\";\n\t\tsalesInfo9.salesman = \"Ivan\";\n\t\tsalesInfo9.product = \"Apple\";\n\t\tsalesInfo9.productType = \"Fruit\";\n\t\tsalesInfo9.sales = 164;\n\t\tsalesInfos.add(salesInfo9);\n\n\t\tSalesInfo salesInfo10 = new SalesInfo();\n\t\tsalesInfo10.area = \"NorthChina\";\n\t\tsalesInfo10.salesman = \"Ivan\";\n\t\tsalesInfo10.product = \"Kiwi\";\n\t\tsalesInfo10.productType = \"Fruit\";\n\t\tsalesInfo10.sales = 213;\n\t\tsalesInfos.add(salesInfo10);\n\n\t\tSalesInfo salesInfo11 = new SalesInfo();\n\t\tsalesInfo11.area = \"NorthChina\";\n\t\tsalesInfo11.salesman = \"Ivan\";\n\t\tsalesInfo11.product = \"Potato\";\n\t\tsalesInfo11.productType = \"Vegetable\";\n\t\tsalesInfo11.sales = 56;\n\t\tsalesInfos.add(salesInfo11);\n\n\t\tSalesInfo salesInfo12 = new SalesInfo();\n\t\tsalesInfo12.area = \"NorthChina\";\n\t\tsalesInfo12.salesman = \"Ivan\";\n\t\tsalesInfo12.product = \"Cabbage\";\n\t\tsalesInfo12.productType = \"Vegetable\";\n\t\tsalesInfo12.sales = 265;\n\t\tsalesInfos.add(salesInfo12);\n\n\t\tSalesInfo salesInfo13 = new SalesInfo();\n\t\tsalesInfo13.area = \"SouthChina\";\n\t\tsalesInfo13.salesman = \"Adam\";\n\t\tsalesInfo13.product = \"Cabbage\";\n\t\tsalesInfo13.productType = \"Vegetable\";\n\t\tsalesInfo13.sales = 112;\n\t\tsalesInfos.add(salesInfo13);\n\n\t\tSalesInfo salesInfo14 = new SalesInfo();\n\t\tsalesInfo14.area = \"SouthChina\";\n\t\tsalesInfo14.salesman = \"Adam\";\n\t\tsalesInfo14.product = \"Carrots\";\n\t\tsalesInfo14.productType = \"Vegetable\";\n\t\tsalesInfo14.sales = 354;\n\t\tsalesInfos.add(salesInfo14);\n\n\t\tSalesInfo salesInfo15 = new SalesInfo();\n\t\tsalesInfo15.area = \"SouthChina\";\n\t\tsalesInfo15.salesman = \"Adam\";\n\t\tsalesInfo15.product = \"Banana\";\n\t\tsalesInfo15.productType = \"Fruit\";\n\t\tsalesInfo15.sales = 277;\n\t\tsalesInfos.add(salesInfo15);\n\n\t\tSalesInfo salesInfo16 = new SalesInfo();\n\t\tsalesInfo16.area = \"SouthChina\";\n\t\tsalesInfo16.salesman = \"Adam\";\n\t\tsalesInfo16.product = \"Apple\";\n\t\tsalesInfo16.productType = \"Fruit\";\n\t\tsalesInfo16.sales = 105;\n\t\tsalesInfos.add(salesInfo16);\n\n\t\tSalesInfo salesInfo17 = new SalesInfo();\n\t\tsalesInfo17.area = \"SouthChina\";\n\t\tsalesInfo17.salesman = \"Bob\";\n\t\tsalesInfo17.product = \"Kiwi\";\n\t\tsalesInfo17.productType = \"Fruit\";\n\t\tsalesInfo17.sales = 402;\n\t\tsalesInfos.add(salesInfo17);\n\n\t\tSalesInfo salesInfo18 = new SalesInfo();\n\t\tsalesInfo18.area = \"SouthChina\";\n\t\tsalesInfo18.salesman = \"Bob\";\n\t\tsalesInfo18.product = \"Banana\";\n\t\tsalesInfo18.productType = \"Fruit\";\n\t\tsalesInfo18.sales = 133;\n\t\tsalesInfos.add(salesInfo1);\n\n\t\tSalesInfo salesInfo19 = new SalesInfo();\n\t\tsalesInfo19.area = \"SouthChina\";\n\t\tsalesInfo19.salesman = \"Bob\";\n\t\tsalesInfo19.product = \"Cabbage\";\n\t\tsalesInfo19.productType = \"Vegetable\";\n\t\tsalesInfo19.sales = 252;\n\t\tsalesInfos.add(salesInfo19);\n\n\t\tSalesInfo salesInfo20 = new SalesInfo();\n\t\tsalesInfo20.area = \"SouthChina\";\n\t\tsalesInfo20.salesman = \"Bob\";\n\t\tsalesInfo20.product = \"Potato\";\n\t\tsalesInfo20.productType = \"Vegetable\";\n\t\tsalesInfo20.sales = 265;\n\t\tsalesInfos.add(salesInfo20);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", salesInfos);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatesamples.TablixReport": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_TablixReport.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class TablixInfo {\n\t\t//\t\t\tpublic int orderID;\n\t\t//\t\t\tpublic String product;\n\t\t//\t\t\tpublic double sales;\n\t\t//\t\t\tpublic String productType;\n\t\t//\t\t\tpublic String year;\n\t\t//\t\t\tpublic String season;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<TablixInfo> tablixInfos = new ArrayList<TablixInfo>();\n\n\t\tTablixInfo tablixInfo1 = new TablixInfo();\n\t\ttablixInfo1.orderID = 1;\n\t\ttablixInfo1.product = \"Röd Kaviar\";\n\t\ttablixInfo1.sales = 300;\n\t\ttablixInfo1.productType = \"Seafood\";\n\t\ttablixInfo1.year = \"2017\";\n\t\ttablixInfo1.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo1);\n\n\t\tTablixInfo tablixInfo2 = new TablixInfo();\n\t\ttablixInfo2.orderID = 2;\n\t\ttablixInfo2.product = \"Spegesild\";\n\t\ttablixInfo2.sales = 144;\n\t\ttablixInfo2.productType = \"Seafood\";\n\t\ttablixInfo2.year = \"2017\";\n\t\ttablixInfo2.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo2);\n\n\t\tTablixInfo tablixInfo3 = new TablixInfo();\n\t\ttablixInfo3.orderID = 3;\n\t\ttablixInfo3.product = \"Carnarvon Tigers\";\n\t\ttablixInfo3.sales = 600;\n\t\ttablixInfo3.productType = \"Seafood\";\n\t\ttablixInfo3.year = \"2017\";\n\t\ttablixInfo3.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo3);\n\n\t\tTablixInfo tablixInfo4 = new TablixInfo();\n\t\ttablixInfo4.orderID = 4;\n\t\ttablixInfo4.product = \"Spegesild\";\n\t\ttablixInfo4.sales = 288;\n\t\ttablixInfo4.productType = \"Seafood\";\n\t\ttablixInfo4.year = \"2017\";\n\t\ttablixInfo4.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo4);\n\n\t\tTablixInfo tablixInfo5 = new TablixInfo();\n\t\ttablixInfo5.orderID = 5;\n\t\ttablixInfo5.product = \"Carnarvon Tigers\";\n\t\ttablixInfo5.sales = 4250;\n\t\ttablixInfo5.productType = \"Seafood\";\n\t\ttablixInfo5.year = \"2017\";\n\t\ttablixInfo5.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo5);\n\n\t\tTablixInfo tablixInfo6 = new TablixInfo();\n\t\ttablixInfo6.orderID = 6;\n\t\ttablixInfo6.product = \"Escargots de Bourgogne\";\n\t\ttablixInfo6.sales = 636;\n\t\ttablixInfo6.productType = \"Seafood\";\n\t\ttablixInfo6.year = \"2017\";\n\t\ttablixInfo6.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo6);\n\n\t\tTablixInfo tablixInfo7 = new TablixInfo();\n\t\ttablixInfo7.orderID = 7;\n\t\ttablixInfo7.product = \"Röd Kaviar\";\n\t\ttablixInfo7.sales = 240;\n\t\ttablixInfo7.productType = \"Seafood\";\n\t\ttablixInfo7.year = \"2018\";\n\t\ttablixInfo7.season = \"Q1\";\n\t\ttablixInfos.add(tablixInfo7);\n\n\t\tTablixInfo tablixInfo8 = new TablixInfo();\n\t\ttablixInfo8.orderID = 8;\n\t\ttablixInfo8.product = \"Carnarvon Tigers\";\n\t\ttablixInfo8.sales = 450;\n\t\ttablixInfo8.productType = \"Seafood\";\n\t\ttablixInfo8.year = \"2018\";\n\t\ttablixInfo8.season = \"Q1\";\n\t\ttablixInfos.add(tablixInfo8);\n\n\t\tTablixInfo tablixInfo9 = new TablixInfo();\n\t\ttablixInfo9.orderID = 9;\n\t\ttablixInfo9.product = \"Röd Kaviar\";\n\t\ttablixInfo9.sales = 735;\n\t\ttablixInfo9.productType = \"Seafood\";\n\t\ttablixInfo9.year = \"2018\";\n\t\ttablixInfo9.season = \"Q2\";\n\t\ttablixInfos.add(tablixInfo9);\n\n\t\tTablixInfo tablixInfo10 = new TablixInfo();\n\t\ttablixInfo10.orderID = 10;\n\t\ttablixInfo10.product = \"Røgede sild\";\n\t\ttablixInfo10.sales = 1377;\n\t\ttablixInfo10.productType = \"Seafood\";\n\t\ttablixInfo10.year = \"2018\";\n\t\ttablixInfo10.season = \"Q2\";\n\t\ttablixInfos.add(tablixInfo10);\n\n\t\tTablixInfo tablixInfo11 = new TablixInfo();\n\t\ttablixInfo11.orderID = 11;\n\t\ttablixInfo11.product = \"Röd Kaviar\";\n\t\ttablixInfo11.sales = 1020;\n\t\ttablixInfo11.productType = \"Seafood\";\n\t\ttablixInfo11.year = \"2018\";\n\t\ttablixInfo11.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo11);\n\n\t\tTablixInfo tablixInfo12 = new TablixInfo();\n\t\ttablixInfo12.orderID = 12;\n\t\ttablixInfo12.product = \"Røgede sild\";\n\t\ttablixInfo12.sales = 190;\n\t\ttablixInfo12.productType = \"Seafood\";\n\t\ttablixInfo12.year = \"2018\";\n\t\ttablixInfo12.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo12);\n\n\t\tTablixInfo tablixInfo13 = new TablixInfo();\n\t\ttablixInfo13.orderID = 13;\n\t\ttablixInfo13.product = \"Röd Kaviar\";\n\t\ttablixInfo13.sales = 1725;\n\t\ttablixInfo13.productType = \"Seafood\";\n\t\ttablixInfo13.year = \"2018\";\n\t\ttablixInfo13.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo13);\n\n\t\tTablixInfo tablixInfo14 = new TablixInfo();\n\t\ttablixInfo14.orderID = 14;\n\t\ttablixInfo14.product = \"Carnarvon Tigers\";\n\t\ttablixInfo14.sales = 3562;\n\t\ttablixInfo14.productType = \"Seafood\";\n\t\ttablixInfo14.year = \"2018\";\n\t\ttablixInfo14.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo14);\n\n\t\tTablixInfo tablixInfo15 = new TablixInfo();\n\t\ttablixInfo15.orderID = 15;\n\t\ttablixInfo15.product = \"Sir Rodney's Marmalade\";\n\t\ttablixInfo15.sales = 4276;\n\t\ttablixInfo15.productType = \"Confections\";\n\t\ttablixInfo15.year = \"2017\";\n\t\ttablixInfo15.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo15);\n\n\t\tTablixInfo tablixInfo16 = new TablixInfo();\n\t\ttablixInfo16.orderID = 16;\n\t\ttablixInfo16.product = \"Maxilaku\";\n\t\ttablixInfo16.sales = 880;\n\t\ttablixInfo16.productType = \"Confections\";\n\t\ttablixInfo16.year = \"2017\";\n\t\ttablixInfo16.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo16);\n\n\t\tTablixInfo tablixInfo17 = new TablixInfo();\n\t\ttablixInfo17.orderID = 17;\n\t\ttablixInfo17.product = \"Maxilaku\";\n\t\ttablixInfo17.sales = 1040;\n\t\ttablixInfo17.productType = \"Confections\";\n\t\ttablixInfo17.year = \"2017\";\n\t\ttablixInfo17.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo17);\n\n\t\tTablixInfo tablixInfo18 = new TablixInfo();\n\t\ttablixInfo18.orderID = 18;\n\t\ttablixInfo18.product = \"NuNuCa Nuß-Nougat-Creme\";\n\t\ttablixInfo18.sales = 716.8;\n\t\ttablixInfo18.productType = \"Confections\";\n\t\ttablixInfo18.year = \"2017\";\n\t\ttablixInfo18.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo18);\n\n\t\tTablixInfo tablixInfo19 = new TablixInfo();\n\t\ttablixInfo19.orderID = 1;\n\t\ttablixInfo19.product = \"Sir Rodney's Marmalade\";\n\t\ttablixInfo19.sales = 2592;\n\t\ttablixInfo19.productType = \"Confections\";\n\t\ttablixInfo19.year = \"2018\";\n\t\ttablixInfo19.season = \"Q1\";\n\t\ttablixInfos.add(tablixInfo19);\n\n\t\tTablixInfo tablixInfo20 = new TablixInfo();\n\t\ttablixInfo20.orderID = 20;\n\t\ttablixInfo20.product = \"Maxilaku\";\n\t\ttablixInfo20.sales = 1296;\n\t\ttablixInfo20.productType = \"Confections\";\n\t\ttablixInfo20.year = \"2018\";\n\t\ttablixInfo20.season = \"Q1\";\n\t\ttablixInfos.add(tablixInfo20);\n\n\t\tTablixInfo tablixInfo21 = new TablixInfo();\n\t\ttablixInfo21.orderID = 21;\n\t\ttablixInfo21.product = \"Pavlova\";\n\t\ttablixInfo21.sales = 1473.4;\n\t\ttablixInfo21.productType = \"Confections\";\n\t\ttablixInfo21.year = \"2018\";\n\t\ttablixInfo21.season = \"Q1\";\n\t\ttablixInfos.add(tablixInfo21);\n\n\t\tTablixInfo tablixInfo22 = new TablixInfo();\n\t\ttablixInfo22.orderID = 22;\n\t\ttablixInfo22.product = \"Sir Rodney's Marmalade\";\n\t\ttablixInfo22.sales = 4374;\n\t\ttablixInfo22.productType = \"Confections\";\n\t\ttablixInfo22.year = \"2018\";\n\t\ttablixInfo22.season = \"Q2\";\n\t\ttablixInfos.add(tablixInfo22);\n\n\t\tTablixInfo tablixInfo23 = new TablixInfo();\n\t\ttablixInfo23.orderID = 23;\n\t\ttablixInfo23.product = \"Maxilaku\";\n\t\ttablixInfo23.sales = 1004;\n\t\ttablixInfo23.productType = \"Confections\";\n\t\ttablixInfo23.year = \"2018\";\n\t\ttablixInfo23.season = \"Q2\";\n\t\ttablixInfos.add(tablixInfo1);\n\n\t\tTablixInfo tablixInfo24 = new TablixInfo();\n\t\ttablixInfo24.orderID = 24;\n\t\ttablixInfo24.product = \"Pavlova\";\n\t\ttablixInfo24.sales = 3075;\n\t\ttablixInfo24.productType = \"Confections\";\n\t\ttablixInfo24.year = \"2018\";\n\t\ttablixInfo24.season = \"Q2\";\n\t\ttablixInfos.add(tablixInfo24);\n\n\t\tTablixInfo tablixInfo25 = new TablixInfo();\n\t\ttablixInfo25.orderID = 25;\n\t\ttablixInfo25.product = \"Sir Rodney's Marmalade\";\n\t\ttablixInfo25.sales = 1071;\n\t\ttablixInfo25.productType = \"Confections\";\n\t\ttablixInfo25.year = \"2018\";\n\t\ttablixInfo25.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo25);\n\n\t\tTablixInfo tablixInfo26 = new TablixInfo();\n\t\ttablixInfo26.orderID = 1;\n\t\ttablixInfo26.product = \"Maxilaku\";\n\t\ttablixInfo26.sales = 860;\n\t\ttablixInfo26.productType = \"Confections\";\n\t\ttablixInfo26.year = \"2018\";\n\t\ttablixInfo26.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo26);\n\n\t\tTablixInfo tablixInfo27 = new TablixInfo();\n\t\ttablixInfo27.orderID = 27;\n\t\ttablixInfo27.product = \"Pavlova\";\n\t\ttablixInfo27.sales = 732;\n\t\ttablixInfo27.productType = \"Confections\";\n\t\ttablixInfo27.year = \"2018\";\n\t\ttablixInfo27.season = \"Q3\";\n\t\ttablixInfos.add(tablixInfo27);\n\n\t\tTablixInfo tablixInfo28 = new TablixInfo();\n\t\ttablixInfo28.orderID = 28;\n\t\ttablixInfo28.product = \"Sir Rodney's Marmalade\";\n\t\ttablixInfo28.sales = 1071;\n\t\ttablixInfo28.productType = \"Confections\";\n\t\ttablixInfo28.year = \"2018\";\n\t\ttablixInfo28.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo28);\n\n\t\tTablixInfo tablixInfo29 = new TablixInfo();\n\t\ttablixInfo29.orderID = 29;\n\t\ttablixInfo29.product = \"Pavlova\";\n\t\ttablixInfo29.sales = 2634;\n\t\ttablixInfo29.productType = \"Confections\";\n\t\ttablixInfo29.year = \"2018\";\n\t\ttablixInfo29.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo29);\n\n\t\tTablixInfo tablixInfo30 = new TablixInfo();\n\t\ttablixInfo30.orderID = 30;\n\t\ttablixInfo30.product = \"Sir Rodney's Scones\";\n\t\ttablixInfo30.sales = 1790;\n\t\ttablixInfo30.productType = \"Confections\";\n\t\ttablixInfo30.year = \"2018\";\n\t\ttablixInfo30.season = \"Q4\";\n\t\ttablixInfos.add(tablixInfo30);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", tablixInfos);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatesamples.Travel": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_Travel.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class FlightInfo {\n\t\t//\t\t\tpublic String carrier;\n\t\t//\t\t\tpublic int flightNo;\n\t\t//\t\t\tpublic Date date = new Date(0);\n\t\t//\t\t\tpublic String from;\n\t\t//\t\t\tpublic Calendar departureTime;\n\t\t//\t\t\tpublic String to;\n\t\t//\t\t\tpublic Calendar arrivalTime;\n\t\t//\t\t\tpublic String reservationNo;\n\t\t//\t\t}\n\n\t\t//\t\tpublic class LoadingInfo {\n\t\t//\t\t\tpublic String accommodations;\n\t\t//\t\t\tpublic Date date = new Date(0);\n\t\t//\t\t\tpublic String concierge;\n\t\t//\t\t\tpublic String phone;\n\t\t//\t\t\tpublic String email;\n\t\t//\t\t\tpublic String addressPart1;\n\t\t//\t\t\tpublic String addressPart2;\n\t\t//\t\t\tpublic String confirmNo;\n\t\t//\t\t\tpublic int days;\n\t\t//\t\t\tpublic double totalCost;\n\t\t//\t\t}\n\n\t\t//\t\tpublic class ContactInfo {\n\t\t//\t\t\tpublic String contact;\n\t\t//\t\t\tpublic String phone;\n\t\t//\t\t\tpublic String notes;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<FlightInfo> flightInfos = new ArrayList<FlightInfo>();\n\n\t\tFlightInfo flightInfo1 = new FlightInfo();\n\t\tflightInfo1.carrier = \"Trenz Airlines\";\n\t\tflightInfo1.flightNo = 1623;\n\t\tflightInfo1.date = new GregorianCalendar(2018, 10, 25).getTime();\n\t\tflightInfo1.from = \"Lorem International\";\n\n\t\tGregorianCalendar departureTime1 = new GregorianCalendar();\n\t\tdepartureTime1.clear();\n\t\tdepartureTime1.set(0, 0, 0, 7, 56, 0);\n\t\tflightInfo1.departureTime = departureTime1;\n\n\t\tflightInfo1.to = \"Dolor Airport\";\n\n\t\tGregorianCalendar arrivalTime1 = new GregorianCalendar();\n\t\tarrivalTime1.clear();\n\t\tarrivalTime1.set(0, 0, 0, 9, 15, 0);\n\t\tflightInfo1.arrivalTime = arrivalTime1;\n\n\t\tflightInfo1.reservationNo = \"AG4567997\";\n\t\tflightInfos.add(flightInfo1);\n\n\t\tFlightInfo flightInfo2 = new FlightInfo();\n\t\tflightInfo2.carrier = \"Trenz Airlines\";\n\t\tflightInfo2.flightNo = 1323;\n\t\tflightInfo2.date = new GregorianCalendar(2018, 10, 30).getTime();\n\t\tflightInfo2.from = \"Lorem International\";\n\n\t\tGregorianCalendar departureTime2 = new GregorianCalendar();\n\t\tdepartureTime2.clear();\n\t\tdepartureTime2.set(0, 0, 0, 20, 25, 0);\n\t\tflightInfo2.departureTime = departureTime2;\n\n\t\tflightInfo2.to = \"Dolor Airport\";\n\n\t\tGregorianCalendar arrivalTime2 = new GregorianCalendar();\n\t\tarrivalTime2.clear();\n\t\tarrivalTime2.set(0, 0, 0, 21, 45, 0);\n\t\tflightInfo2.arrivalTime = arrivalTime2;\n\n\t\tflightInfo2.reservationNo = \"AG4567998\";\n\t\tflightInfos.add(flightInfo2);\n\n\t\tList<LoadingInfo> loadingInfos = new ArrayList<LoadingInfo>();\n\n\t\tLoadingInfo loadingInfo1 = new LoadingInfo();\n\t\tloadingInfo1.accommodations = \"Lorem Hotel\";\n\t\tloadingInfo1.date = new GregorianCalendar(2018, 10, 25).getTime();\n\t\tloadingInfo1.concierge = \"Charles\";\n\t\tloadingInfo1.phone = \"01234 567 890\";\n\t\tloadingInfo1.email = \"charles@lorem.com\";\n\t\tloadingInfo1.addressPart1 = \"123 High Street, \";\n\t\tloadingInfo1.addressPart2 = \"Anytown, County, Postcode\";\n\t\tloadingInfo1.confirmNo = \"A4567\";\n\t\tloadingInfo1.days = 2;\n\t\tloadingInfo1.totalCost = 800;\n\t\tloadingInfos.add(loadingInfo1);\n\n\t\tLoadingInfo loadingInfo2 = new LoadingInfo();\n\t\tloadingInfo2.accommodations = \"Deloz Hotel\";\n\t\tloadingInfo2.date = new GregorianCalendar(2018, 10, 27).getTime();\n\t\tloadingInfo2.concierge = \"James\";\n\t\tloadingInfo2.phone = \"01234 567 890\";\n\t\tloadingInfo2.email = \"no_reply@example.com\";\n\t\tloadingInfo2.addressPart1 = \"202 Halford Street, \";\n\t\tloadingInfo2.addressPart2 = \"Anytown, County, Postcode\";\n\t\tloadingInfo2.confirmNo = \"A4568\";\n\t\tloadingInfo2.days = 3;\n\t\tloadingInfo2.totalCost = 900;\n\t\tloadingInfos.add(loadingInfo2);\n\n\t\tList<ContactInfo> emergencyContactInfos = new ArrayList<ContactInfo>();\n\n\t\tContactInfo emergencyContactInfo1 = new ContactInfo();\n\t\temergencyContactInfo1.contact = \"Airline Reservations\";\n\t\temergencyContactInfo1.phone = \"01234 567 890\";\n\t\temergencyContactInfos.add(emergencyContactInfo1);\n\n\t\tContactInfo emergencyContactInfo2 = new ContactInfo();\n\t\temergencyContactInfo2.contact = \"Hotel Reservations\";\n\t\temergencyContactInfo2.phone = \"12342322232\";\n\t\temergencyContactInfos.add(emergencyContactInfo2);\n\n\t\tList<ContactInfo> contactInfos = new ArrayList<ContactInfo>();\n\n\t\tContactInfo contactInfo1 = new ContactInfo();\n\t\tcontactInfo1.contact = \"Tom Jenkins\";\n\t\tcontactInfo1.phone = \"01234 567 890\";\n\t\tcontactInfo1.notes = \"tom.jerkins@trenz.com\";\n\t\tcontactInfos.add(contactInfo1);\n\n\t\tContactInfo contactInfo2 = new ContactInfo();\n\t\tcontactInfo2.contact = \"Rayna James\";\n\t\tcontactInfo2.phone = \"19234222456\";\n\t\tcontactInfo1.notes = \"ratna.james@deloz.com\";\n\t\tcontactInfos.add(contactInfo2);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds1\", flightInfos);\n\t\tworkbook.addDataSource(\"ds2\", loadingInfos);\n\t\tworkbook.addDataSource(\"ds3\", emergencyContactInfos);\n\t\tworkbook.addDataSource(\"ds4\", contactInfos);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.properties.SetContext": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SetContext.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class DataInfo {\n\t\t//\t\tpublic int id;\n\t\t//\t\tpublic String name;\n\t\t//\t\tpublic int score;\n\t\t//\t\tpublic String team;\n\t\t//\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.properties.SetSortType": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SetSortType.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class DataInfo {\n\t\t//\t\tpublic int id;\n\t\t//\t\tpublic String name;\n\t\t//\t\tpublic int score;\n\t\t//\t\tpublic String team;\n\t\t//\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.properties.SetPagebreak": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SetPagebreak.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class DataInfo {\n\t\t//\t\tpublic int id;\n\t\t//\t\tpublic String name;\n\t\t//\t\tpublic int score;\n\t\t//\t\tpublic String team;\n\t\t//\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.properties.SetRange": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SetRange.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class DataInfo {\n\t\t//\t\tpublic int id;\n\t\t//\t\tpublic String name;\n\t\t//\t\tpublic int score;\n\t\t//\t\tpublic String team;\n\t\t//\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.properties.SetExpansionType": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SetExpansionType.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class DataInfo {\n\t\t//\t\tpublic int id;\n\t\t//\t\tpublic String name;\n\t\t//\t\tpublic int score;\n\t\t//\t\tpublic String team;\n\t\t//\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.properties.SetGroupType": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SetGroupType.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class DataInfo {\n\t\t//\t\tpublic int id;\n\t\t//\t\tpublic String name;\n\t\t//\t\tpublic int score;\n\t\t//\t\tpublic String team;\n\t\t//\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.style.MergeCell": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_MergeCell.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.style.CellStyle": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_CellStyle.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.datasource.Variable": "\n\t\t//Load template file Template_StudentInfo.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_StudentInfo.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t///#region Define custom classes\n\t\t//\t\tpublic class StudentInfo\n\t\t//\t\t{\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic String address;\n\t\t//\t\t\tpublic ArrayList<Family> family;\n\t\t//\t\t}\n\n\t\t///#region Init Data\n\t\tArrayList<StudentInfo> studentInfos = new ArrayList<StudentInfo>();\n\n\t\tStudentInfo student1 = new StudentInfo();\n\t\tstudent1.name = \"Jane\";\n\t\tstudent1.address = \"101, Halford Avenue, Fremont, CA\";\n\t\tstudentInfos.add(student1);\n\n\t\tStudentInfo student2 = new StudentInfo();\n\t\tstudent2.name = \"Mark\";\n\t\tstudent2.address = \"2005 Klamath Ave APT, Santa Clara, CA\";\n\t\tstudentInfos.add(student2);\n\n\t\tStudentInfo student3 = new StudentInfo();\n\t\tstudent3.name = \"Carol\";\n\t\tstudent3.address = \"1063 E EI Camino Real, Sunnyvale, CA 94087, USA\";\n\t\tstudentInfos.add(student3);\n\n\t\tStudentInfo student4 = new StudentInfo();\n\t\tstudent4.name = \"Liano\";\n\t\tstudent4.address = \"1977 St Lawrence Dr, Santa Clara, CA 95051, USA\";\n\t\tstudentInfos.add(student4);\n\n\t\tStudentInfo student5 = new StudentInfo();\n\t\tstudent5.name = \"Hellen\";\n\t\tstudent5.address = \"3661 Peacock Ct, Santa Clara, CA 95051, USA\";\n\t\tstudentInfos.add(student5);\n\n\t\tString className = \"Class 3\";\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"className\", className);\n\t\tworkbook.addDataSource(\"s\", studentInfos);\n\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.datasource.CustomObject": "\n\t\t//Load template file Template_SalesDataGroup.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SalesDataGroup.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//  public class SalesData\n\t\t//  {\n\t\t// \t\tpublic ArrayList<SalesRecord> records;\n\t\t//  }\n\n\t\t//  public class SalesRecord\n\t\t//  {\n\t\t// \t\tpublic String area;\n\t\t// \t\tpublic String salesman;\n\t\t// \t\tpublic String product;\n\t\t// \t\tpublic String productType;\n\t\t// \t\tpublic int sales;\n\t\t//  }\n\t\t/// #endregion\n\n\t\tSalesData datasource = new SalesData();\n\t\tdatasource.records = new ArrayList<SalesRecord>();\n\n\t\t///#region Init Data\n\t\tSalesRecord record1 = new SalesRecord();\n\t\trecord1.area = \"NorthChina\";\n\t\trecord1.salesman = \"Hellen\";\n\t\trecord1.product = \"Apple\";\n\t\trecord1.productType = \"Fruit\";\n\t\trecord1.sales = 120;\n\t\tdatasource.records.add(record1);\n\n\t\tSalesRecord record2 = new SalesRecord();\n\t\trecord2.area = \"NorthChina\";\n\t\trecord2.salesman = \"Hellen\";\n\t\trecord2.product = \"Banana\";\n\t\trecord2.productType = \"Fruit\";\n\t\trecord2.sales = 143;\n\t\tdatasource.records.add(record2);\n\n\t\tSalesRecord record3 = new SalesRecord();\n\t\trecord3.area = \"NorthChina\";\n\t\trecord3.salesman = \"Hellen\";\n\t\trecord3.product = \"Kiwi\";\n\t\trecord3.productType = \"Fruit\";\n\t\trecord3.sales = 322;\n\t\tdatasource.records.add(record3);\n\n\t\tSalesRecord record4 = new SalesRecord();\n\t\trecord4.area = \"NorthChina\";\n\t\trecord4.salesman = \"Hellen\";\n\t\trecord4.product = \"Carrots\";\n\t\trecord4.productType = \"Vegetable\";\n\t\trecord4.sales = 154;\n\t\tdatasource.records.add(record4);\n\n\t\tSalesRecord record5 = new SalesRecord();\n\t\trecord5.area = \"NorthChina\";\n\t\trecord5.salesman = \"Fancy\";\n\t\trecord5.product = \"Carrots\";\n\t\trecord5.productType = \"Vegetable\";\n\t\trecord5.sales = 131;\n\t\tdatasource.records.add(record5);\n\n\t\tSalesRecord record6 = new SalesRecord();\n\t\trecord6.area = \"NorthChina\";\n\t\trecord6.salesman = \"Fancy\";\n\t\trecord6.product = \"Cabbage\";\n\t\trecord6.productType = \"Vegetable\";\n\t\trecord6.sales = 98;\n\t\tdatasource.records.add(record6);\n\n\t\tSalesRecord record7 = new SalesRecord();\n\t\trecord7.area = \"NorthChina\";\n\t\trecord7.salesman = \"Fancy\";\n\t\trecord7.product = \"Potato\";\n\t\trecord7.productType = \"Vegetable\";\n\t\trecord7.sales = 212;\n\t\tdatasource.records.add(record7);\n\n\t\tSalesRecord record8 = new SalesRecord();\n\t\trecord8.area = \"NorthChina\";\n\t\trecord8.salesman = \"Fancy\";\n\t\trecord8.product = \"Apple\";\n\t\trecord8.productType = \"Fruit\";\n\t\trecord8.sales = 102;\n\t\tdatasource.records.add(record8);\n\n\t\tSalesRecord record9 = new SalesRecord();\n\t\trecord9.area = \"NorthChina\";\n\t\trecord9.salesman = \"Ivan\";\n\t\trecord9.product = \"Apple\";\n\t\trecord9.productType = \"Fruit\";\n\t\trecord9.sales = 164;\n\t\tdatasource.records.add(record9);\n\n\t\tSalesRecord record10 = new SalesRecord();\n\t\trecord10.area = \"NorthChina\";\n\t\trecord10.salesman = \"Ivan\";\n\t\trecord10.product = \"Kiwi\";\n\t\trecord10.productType = \"Fruit\";\n\t\trecord10.sales = 213;\n\t\tdatasource.records.add(record10);\n\n\t\tSalesRecord record11 = new SalesRecord();\n\t\trecord11.area = \"NorthChina\";\n\t\trecord11.salesman = \"Ivan\";\n\t\trecord11.product = \"Potato\";\n\t\trecord11.productType = \"Vegetable\";\n\t\trecord11.sales = 56;\n\t\tdatasource.records.add(record11);\n\n\t\tSalesRecord record12 = new SalesRecord();\n\t\trecord12.area = \"NorthChina\";\n\t\trecord12.salesman = \"Ivan\";\n\t\trecord12.product = \"Cabbage\";\n\t\trecord12.productType = \"Vegetable\";\n\t\trecord12.sales = 265;\n\t\tdatasource.records.add(record12);\n\n\t\tSalesRecord record13 = new SalesRecord();\n\t\trecord13.area = \"SouthChina\";\n\t\trecord13.salesman = \"Adam\";\n\t\trecord13.product = \"Cabbage\";\n\t\trecord13.productType = \"Vegetable\";\n\t\trecord13.sales = 112;\n\t\tdatasource.records.add(record13);\n\n\t\tSalesRecord record14 = new SalesRecord();\n\t\trecord14.area = \"SouthChina\";\n\t\trecord14.salesman = \"Adam\";\n\t\trecord14.product = \"Carrots\";\n\t\trecord14.productType = \"Vegetable\";\n\t\trecord14.sales = 354;\n\t\tdatasource.records.add(record14);\n\n\t\tSalesRecord record15 = new SalesRecord();\n\t\trecord15.area = \"SouthChina\";\n\t\trecord15.salesman = \"Adam\";\n\t\trecord15.product = \"Banana\";\n\t\trecord15.productType = \"Fruit\";\n\t\trecord15.sales = 277;\n\t\tdatasource.records.add(record15);\n\n\t\tSalesRecord record16 = new SalesRecord();\n\t\trecord16.area = \"SouthChina\";\n\t\trecord16.salesman = \"Adam\";\n\t\trecord16.product = \"Apple\";\n\t\trecord16.productType = \"Fruit\";\n\t\trecord16.sales = 105;\n\t\tdatasource.records.add(record16);\n\n\t\tSalesRecord record17 = new SalesRecord();\n\t\trecord17.area = \"SouthChina\";\n\t\trecord17.salesman = \"Bob\";\n\t\trecord17.product = \"Banana\";\n\t\trecord17.productType = \"Fruit\";\n\t\trecord17.sales = 133;\n\t\tdatasource.records.add(record17);\n\n\t\tSalesRecord record18 = new SalesRecord();\n\t\trecord18.area = \"SouthChina\";\n\t\trecord18.salesman = \"Bob\";\n\t\trecord18.product = \"Cabbage\";\n\t\trecord18.productType = \"Vegetable\";\n\t\trecord18.sales = 252;\n\t\tdatasource.records.add(record18);\n\n\t\tSalesRecord record19 = new SalesRecord();\n\t\trecord19.area = \"SouthChina\";\n\t\trecord19.salesman = \"Bob\";\n\t\trecord19.product = \"Potato\";\n\t\trecord19.productType = \"Vegetable\";\n\t\trecord19.sales = 265;\n\t\tdatasource.records.add(record19);\n\n\t\tSalesRecord record20 = new SalesRecord();\n\t\trecord20.area = \"SouthChina\";\n\t\trecord20.salesman = \"Bob\";\n\t\trecord20.product = \"Kiwi\";\n\t\trecord20.productType = \"Fruit\";\n\t\trecord20.sales = 402;\n\t\tdatasource.records.add(record20);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.datasource.JsonFile": "\n\t\t//Load template file Template_FamilyInfo.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_FamilyInfo.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t///#region Define custom classes\n\t\t//\t\tpublic class StudentInfos\n\t\t//\t\t{\n\t\t//\t\t\tpublic ArrayList<StudentInfo> student;\n\t\t//\t\t}\n\n\t\t//\t\tpublic class StudentInfo\n\t\t//\t\t{\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic String address;\n\t\t//\t\t\tpublic ArrayList<Family> family;\n\t\t//\t\t}\n\n\t\t//\t\tpublic class Family\n\t\t//\t\t{\n\t\t//\t\t\tpublic Guardian father;\n\t\t//\t\t\tpublic Guardian mother;\n\t\t//\t\t}\n\n\t\t//\t\tpublic class Guardian\n\t\t//\t\t{\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic String occupation;\n\t\t//\t\t}\n\t\t///#endregion\n\n\t\t//Get data from json file\n\t\tInputStreamReader reader = new InputStreamReader(this.getResourceStream(\"Template_FamilyInfo.json\"));\n\t\tGson gson = new Gson();\n\t\tStudentInfos datasource = gson.fromJson(reader, StudentInfos.class);\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.datasource.ResultSet": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_Score.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t//Here in the demo, we use a mock class to generate instance of java.sql.ResultSet.\n\t\t//User who use template in product, must get instance of java.sql.ResultSet from the \n\t\t//related database connection.\n\t\tjava.sql.ResultSet datasource = new GcMockResultSet(this.getResourceStream(\"score.csv\"));\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatecell.InlineTemplate": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_InlineTemplate.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatecell.FunctionTemplate": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_FunctionTemplate.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t/// #region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t/// #endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatecell.ExpressionTemplate": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_ExpressionTemplate.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t/// #region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t/// #endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatecell.SheetTemplate": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_SheetTemplate.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.templates.templatecell.DataTemplate": "\n\t\t//Load template file Template_Score.xlsx from resource\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_DataTemplate.xlsx\");\n\t\tworkbook.open(templateFile);\n\n\t\t/// #region Define custom classes\n\t\t//\t\tpublic class DataInfo {\n\t\t//\t\t\tpublic int id;\n\t\t//\t\t\tpublic String name;\n\t\t//\t\t\tpublic int score;\n\t\t//\t\t\tpublic String team;\n\t\t//\t\t}\n\t\t/// #endregion\n\n\t\t///#region Init Data\n\t\tList<DataInfo> datasource = new ArrayList<DataInfo>();\n\n\t\tDataInfo r1 = new DataInfo();\n\t\tr1.id = 10;\n\t\tr1.name = \"Bob\";\n\t\tr1.score = 12;\n\t\tr1.team = \"Xi'An\";\n\t\tdatasource.add(r1);\n\n\t\tDataInfo r2 = new DataInfo();\n\t\tr2.id = 11;\n\t\tr2.name = \"Tommy\";\n\t\tr2.score = 6;\n\t\tr2.team = \"Xi'An\";\n\t\tdatasource.add(r2);\n\n\t\tDataInfo r3 = new DataInfo();\n\t\tr3.id = 12;\n\t\tr3.name = \"Jaguar\";\n\t\tr3.score = 15;\n\t\tr3.team = \"Xi'An\";\n\t\tdatasource.add(r3);\n\n\t\tDataInfo r4 = new DataInfo();\n\t\tr4.id = 2;\n\t\tr4.name = \"Phillip\";\n\t\tr4.score = 9;\n\t\tr4.team = \"BeiJing\";\n\t\tdatasource.add(r4);\n\n\t\tDataInfo r5 = new DataInfo();\n\t\tr5.id = 3;\n\t\tr5.name = \"Hunter\";\n\t\tr5.score = 10;\n\t\tr5.team = \"BeiJing\";\n\t\tdatasource.add(r5);\n\n\t\tDataInfo r6 = new DataInfo();\n\t\tr6.id = 4;\n\t\tr6.name = \"Hellen\";\n\t\tr6.score = 8;\n\t\tr6.team = \"BeiJing\";\n\t\tdatasource.add(r6);\n\n\t\tDataInfo r7 = new DataInfo();\n\t\tr7.id = 5;\n\t\tr7.name = \"Jim\";\n\t\tr7.score = 9;\n\t\tr7.team = \"BeiJing\";\n\t\tdatasource.add(r7);\n\t\t///#endregion\n\n\t\t//Add data source\n\t\tworkbook.addDataSource(\"ds\", datasource);\n\t\t//Invoke to process the template\n\t\tworkbook.processTemplate();\n\t",
  "com.grapecity.documents.excel.examples.features.formulas.ConfigWorkbookReferenceStyle": "\n        //set workbook's reference style to R1C1. exported xlsx file will be R1C1 style.\n        workbook.setReferenceStyle(ReferenceStyle.R1C1);\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.DirtyAndCalculation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(1);\n        worksheet.getRange(\"A2\").setFormula(\"=A1\");\n        worksheet.getRange(\"A3\").setFormula(\"=SUM(A1, A2)\");\n\n        //when get value, calc engine will first calculate and cache the result, then returns the cached result.\n        Object value_A2 = worksheet.getRange(\"A2\").getValue();\n        Object value_A3 = worksheet.getRange(\"A3\").getValue();\n\n        //disable calc engine.\n        workbook.setEnableCalculation(false);\n\n        //Dirty() method will clear the cached value of the workbook.\n        workbook.dirty();\n        //Calculate() will not work, because of workbook.EnablCalculation is false.\n        workbook.calculate();\n        //it returns 0 because of no cache value exist.\n        Object value_A2_1 = worksheet.getRange(\"A2\").getValue();\n        Object value_A3_1 = worksheet.getRange(\"A3\").getValue();\n\n        worksheet.getRange(\"A1\").setValue(2);\n        //enable calc engine.\n        workbook.setEnableCalculation(true);\n        //Dirty() method will clear the cached value of Range A2:A3.\n        //    worksheet.get(\"A2:A3\").Dirty();\n        //Calculate() method will calculate and cache the result, it will return the cache value directly when get value later.\n        //   worksheet.get(\"A2:A3\").Calculate();\n\n        //it returns cache value directly, does not calculate again.\n        Object value_A2_2 = worksheet.getRange(\"A2\").getValue();\n        Object value_A3_2 = worksheet.getRange(\"A3\").getValue();\n\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.AddCustomName": "\n\n        IWorksheet worksheet1 = workbook.getWorksheets().get(0);\n        IWorksheet worksheet2 = workbook.getWorksheets().add();\n\n        worksheet1.getRange(\"C8\").setNumberFormat(\"0.0000\");\n\n        worksheet1.getNames().add(\"test1\", \"=Sheet1!$A$1\");\n        worksheet1.getNames().add(\"test2\", \"=Sheet1!test1*2\");\n        workbook.getNames().add(\"test3\", \"=Sheet1!$A$1\");\n\n        worksheet1.getRange(\"A1\").setValue(1);\n\n        // C6's value is 1.\n        worksheet1.getRange(\"C6\").setFormula(\"=test1\");\n        // C7's value is 3.\n        worksheet1.getRange(\"C7\").setFormula(\"=test1 + test2\");\n        // C8's value is 6.283185307\n        worksheet1.getRange(\"C8\").setFormula(\"=test2*PI()\");\n\n        // judge if Range C6:C8 have formula.\n        for (int i = 5; i <= 7; i++) {\n            if (worksheet1.getRange(i, 2).getHasFormula()) {\n                worksheet1.getRange(i, 2).getInterior().setColor(Color.GetLightBlue());\n            }\n        }\n\n        // worksheet1 range A2's value is 1.\n        worksheet2.getRange(\"A2\").setFormula(\"=test3\");\n        // judge if Range A2 has formula.\n        if (worksheet2.getRange(\"A2\").getHasFormula()) {\n            worksheet2.getRange(\"A2\").getInterior().setColor(Color.GetLightBlue());\n        }\n\n        // set r1c1 formula.\n        worksheet2.getRange(\"A3\").setFormulaR1C1(\"=R[-1]C\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.UseTableFormula": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:E\").setColumnWidth(15);\n        worksheet.getRange(\"A1:E3\").setValue(new Object[][]{\n                {\"SalesPerson\", \"Region\", \"SalesAmount\", \"ComPct\", \"ComAmt\"},\n                {\"Joe\", \"North\", 260, 0.10, null},\n                {\"Nia\", \"South\", 660, 0.15, null},\n        });\n\n        worksheet.getTables().add(worksheet.getRange(\"A1:E3\"), true);\n        worksheet.getTables().get(0).setName(\"DeptSales\");\n        worksheet.getTables().get(0).getColumns().get(\"ComPct\").getDataBodyRange().setNumberFormat(\"0%\");\n\n        //Use table formula in table range.\n        worksheet.getTables().get(0).getColumns().get(\"ComAmt\").getDataBodyRange().setFormula(\"=[@ComPct]*[@SalesAmount]\");\n\n        //Use table formula out of table range.\n        worksheet.getRange(\"F2\").setFormula(\"=SUM(DeptSales[@SalesAmount])\");\n        worksheet.getRange(\"G2\").setFormula(\"=SUM(DeptSales[[#Data],[SalesAmount]])\");\n        worksheet.getRange(\"H2\").setFormula(\"=SUM(DeptSales[SalesAmount])\");\n        worksheet.getRange(\"I2\").setFormula(\"=SUM(DeptSales[@ComPct], DeptSales[@ComAmt])\");\n\n        //judge if Range F2:I2 have formula.\n        for (int i = 5; i <= 8; i++) {\n            if (worksheet.getRange(1, i).getHasFormula()) {\n                worksheet.getRange(1, i).getInterior().setColor(Color.GetLightBlue());\n            }\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.UseArrayFormula": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"E4:J5\").setValue(new Object[][]{\n                {1, 2, 3},\n                {4, 5, 6}\n        });\n\n        worksheet.getRange(\"I6:J8\").setValue(new Object[][]{\n\n                {2, 2},\n                {3, 3},\n                {4, 4}\n        });\n\n        //O     P      Q\n        //2     4      #N/A\n        //12    15     #N/A\n        //#N/A  #N/A   #N/A\n        worksheet.getRange(\"O9:Q11\").setFormulaArray(\"=E4:G5*I6:J8\");\n\n        //judge if Range O9 has array formula.\n        if (worksheet.getRange(\"O9\").getHasArray()) {\n            //set O9's entire array's interior color.\n            IRange currentarray = worksheet.getRange(\"O9\").getCurrentArray();\n            currentarray.getInterior().setColor(Color.GetGreen());\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.precedentsanddependents.Dependents": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(100);\n        worksheet.getRange(\"C1\").setFormula(\"=$A$1\");\n        worksheet.getRange(\"E1:E5\").setFormula(\"=$A$1\");\n        for (IRange item : worksheet.getRange(\"A1\").getDependents())\n        {\n            item.getInterior().setColor(Color.GetAzure());\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.precedentsanddependents.GetAllPrecedents": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        \n        worksheet.getRange(\"E2\").setFormula(\"=sum(C1:C2)\");\n        worksheet.getRange(\"C1\").setFormula(\"=B1\");\n        worksheet.getRange(\"B1\").setFormula(\"=sum(A1:A2)\");\n        worksheet.getRange(\"A1\").setValue(1);\n        worksheet.getRange(\"A2\").setValue(2);\n        worksheet.getRange(\"C2\").setValue(3);\n\n        ArrayList<IRange> list = new ArrayList<IRange>();\n        for (IRange item : worksheet.getRange(\"E2\").getPrecedents())\n        {\n        \tlist.add(item);\n        }\n\n        while (list.size() > 0)\n        {\n        \tArrayList<IRange> temp = list;\n            list = new ArrayList<IRange>();\n            for (IRange item : temp)\n            {\n                for (int i = 0; i < item.getRowCount(); i++)\n                {\n                    for (int j = 0; j < item.getColumnCount(); j++)\n                    {\n                    \tList<IRange> dependents = item.getCells().get(i, j).getPrecedents();\n                        if (dependents.size() == 0)\n                        {\n                            item.getCells().get(i, j).getInterior().setColor(Color.GetSkyBlue());\n                        }\n                        else\n                        {\n                        \titem.getCells().get(i, j).getInterior().setColor(Color.GetGray());\n                            list.addAll(dependents);\n                        }\n                    }\n                }\n            }\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.formulas.precedentsanddependents.Precedents": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(100);\n        worksheet.getRange(\"C1\").setFormula(\"=$A$1\");\n        worksheet.getRange(\"E1:E5\").setFormula(\"=$A$1\");\n        \n        worksheet.getRange(\"E2\").setFormula(\"=sum(A1:A2, B4,C1:C3)\");\n        worksheet.getRange(\"A1\").setValue(1);\n        worksheet.getRange(\"A2\").setValue(2);\n        worksheet.getRange(\"B4\").setValue(3);\n        worksheet.getRange(\"C1\").setValue(4);\n        worksheet.getRange(\"C2\").setValue(5);\n        worksheet.getRange(\"C3\").setValue(6);\n        \n        for (IRange item : worksheet.getRange(\"E2\").getPrecedents())\n        {\n            item.getInterior().setColor(Color.GetPink());\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.SaveWorkbookToCsvFile": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Sex\", \"Weight\", \"Height\"},\n                {\"Bob\", \"NewYork\", new GregorianCalendar(1968, 5, 8), \"male\", 80, 180},\n                {\"Betty\", \"NewYork\", new GregorianCalendar(1972, 6, 3), \"female\", 72, 168},\n                {\"Gary\", \"NewYork\", new GregorianCalendar(1964, 2, 2), \"male\", 71, 179},\n                {\"Hunk\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"male\", 80, 171},\n                {\"Cherry\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"female\", 58, 161},\n                {\"Eva\", \"Washington\", new GregorianCalendar(1993, 2, 5), \"female\", 71, 180}\n        };\n\n        // Set data.\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n        sheet.getRange(\"A1:F7\").setValue(data);\n        sheet.getTables().add(sheet.getRange(\"A1:F7\"), true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportExcelFileToWorkbook": "\n\n        //Change the path to the real file path when open.\n        workbook.open(\"source.xlsx\");\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.SaveWorkbookToExcelFile": "\n\n        //change the path to real export path when save.\n        workbook.save(\"dest.xlsx\");\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportExcelFileWithoutCalculation": "\n\n        //When XlsxOpenOptions.DoNotRecalculateAfterOpened means GrapeCity Documents for Excel will just read all the cached values without calculating again after\n        //opening an Excel file.\n        //Change the path to the real file path when open.\n        XlsxOpenOptions options = new XlsxOpenOptions();\n        options.setDoNotRecalculateAfterOpened(true);\n\n        workbook.open(\"source.xlsx\", options);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportExcelFileDataOnly": "\n\n        //Use XlsxOpenOptions.ImportFlags to control what you want to import from excel, ImportFlags.Data means only the data will be imported\n        //Change the path to the real file path when open.\n        XlsxOpenOptions options = new XlsxOpenOptions();\n        options.setImportFlags(EnumSet.of(ImportFlags.Data));\n\n        workbook.open(\"source.xlsx\", options);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.UnprotectWorkbook": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(\"GrapeCity Documents for Excel\");\n\n        //Protects the workbook so that other users cannot view hidden worksheets, add, move, delete, hidie, or rename worksheets.\n        //The protection only happens when you open it with an Excel application.\n        workbook.protect();\n        \n        //Removes the above protection from the workbook.\n        workbook.unprotect();\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.CreateNewWorkbook": "\n\n        //Create empty workbook, contains one worksheet default.\n    \tworkbook = new Workbook();\n\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportExcelFileWithPassword": "\n        //Change the path to the real file path when open.\n        XlsxOpenOptions options = new XlsxOpenOptions();\n        options.setPassword(\"123456\");\n\n        workbook.open(\"source.xlsx\", options);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportCsvFileToWorkbook": "\n        workbook.open(this.getResourceStream(\"xlsx/Information.csv\"), OpenFileFormat.Csv);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.SaveWorkbookWithPassword": "\n\n        //Change the path to real export path when save.\n        XlsxSaveOptions options = new XlsxSaveOptions();\n        options.setPassword(\"123456\");\n\n        workbook.save(\"dest.xlsx\", options);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ToJsonFromJson": "\n\n        // /ToJson&FromJson can be used in combination with spread.sheets product:http://spread.grapecity.com/spreadjs/sheets/\n\n        //GrapeCity Documents for Excel import an excel file.\n        //change the path to real source file path.\n        String source = \"source.xlsx\";\n        workbook.open(source);\n        //GrapeCity Documents for Excel export to a json string.\n        String jsonstr = workbook.toJson();\n        //use the json string to initialize spread.sheets product.\n        //spread.sheets will show the excel file contents.\n\n        //spread.sheets product export a json string.\n        //GrapeCity Documents for Excel use the json string to initialize.\n        workbook.fromJson(jsonstr);\n        //GrapeCity Documents for Excel export workbook to an excel file.\n        //change the path to real export file path.\n        String export = \"export.xlsx\";\n        workbook.save(export);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.LoadAndSaveJsonWithShapes": "\n        Workbook workbookWithShape = new Workbook();\n        IWorksheet worksheet = workbookWithShape.getWorksheets().get(0);\n\n        // Add a shape in worksheet\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.getLine().setDashStyle(LineDashStyle.Dash);\n        shape.getLine().setStyle(LineStyle.Single);\n        shape.getLine().setWeight(2);\n        shape.getLine().getColor().setObjectThemeColor(ThemeColor.Accent6);\n        shape.getLine().setTransparency(0.3);\n\n        // jsongString contains shapes\n        String jsonString = workbookWithShape.toJson();\n\n        // GcExcel can load json strig contains shapes now\n        workbook.fromJson(jsonString);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportCsvFileToWorkbookWithOptions": " //Open csv with more settings.\n\n        CsvOpenOptions options = new CsvOpenOptions();\n        options.setColumnSeparator(\",\");\n        options.setRowSeparator(\"\\r\\n\");\n        options.setCellSeparator('\"');\n        \n        //Change the path to the real file path when open.\n        workbook.open(\"source.csv\", options);\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ProtectWorkbook": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(\"GrapeCity Documents for Excel\");\n\n        //Protects the workbook so that other users cannot view hidden worksheets, add, move, delete, hidie, or rename worksheets.\n        //The protection only happens when you open it with an Excel application.\n        workbook.protect();\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportOleObjectsToWorkbookAndExport": "\n        workbook.open(getResourceStream(\"xlsx/OleTemplates.xlsx\"));\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ConfigureWorkbookView": "\n\n        // Workbook view settings.\n        IWorkbookView bookView = workbook.getBookView();\n        bookView.setDisplayVerticalScrollBar(false);\n        bookView.setDisplayWorkbookTabs(true);\n        bookView.setTabRatio(0.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.ImportXlsmToWorkbook": "\n        // GcExcel supports open xlsm file\n        workbook.open(\"macros.xlsm\");\n\n        // Macros can be preserved after saving\n        workbook.save(\"macros-exported.xlsm\");\n    ",
  "com.grapecity.documents.excel.examples.features.workbook.SaveWorkbookToCsvFileWithOptions": "\n\n        Object data = new Object[][]{\n            {\"Name\", \"City\", \"Birthday\", \"Sex\", \"Weight\", \"Height\"},\n            {\"Bob\", \"NewYork\", new GregorianCalendar(1968, 5, 8), \"male\", 80, 180},\n            {\"Betty\", \"NewYork\", new GregorianCalendar(1972, 6, 3), \"female\", 72, 168},\n            {\"Gary\", \"NewYork\", new GregorianCalendar(1964, 2, 2), \"male\", 71, 179},\n            {\"Hunk\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"male\", 80, 171},\n            {\"Cherry\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"female\", 58, 161},\n            {\"Eva\", \"Washington\", new GregorianCalendar(1993, 2, 5), \"female\", 71, 180}\n        };\n\n        // Set data.\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n        sheet.getRange(\"A1:F7\").setValue(data);\n        sheet.getTables().add(sheet.getRange(\"A1:F7\"), true);\n\n        //Save csv options\n        CsvSaveOptions options = new CsvSaveOptions();\n        options.setColumnSeparator(\"-\");\n        options.setRowSeparator(\"\\r\\n\");\n        options.setCellSeparator('\"');\n\n        //Change the path to real export path when save.\n        workbook.save(\"dest.csv\", options);\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateDecimalValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {1, 3.0, 3.4},\n                {7, 9, 102.7},\n                {102.8, 110, 120}\n        });\n\n        //add decimal validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.Decimal, ValidationAlertStyle.Stop, ValidationOperator.Between, 3.4, 102.8);\n        IValidation validation = worksheet.getRange(\"C2:E4\").getValidation();\n        validation.setIgnoreBlank(true);\n        validation.setInputTitle(\"Tips\");\n        validation.setInputMessage(\"Input a decimal value between 3.4 and 102.8, please.\");\n        validation.setErrorTitle(\"Error\");\n        validation.setErrorMessage(\"input value does not between 3.4 and 102.8.\");\n        validation.setShowInputMessage(true);\n        validation.setShowError(true);\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateDateValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {new GregorianCalendar(2020, 11, 1), new GregorianCalendar(2020, 11, 14), new GregorianCalendar(2020, 11, 15)},\n                {new GregorianCalendar(2020, 11, 18), new GregorianCalendar(2020, 11, 19), new GregorianCalendar(2020, 11, 30)},\n                {new GregorianCalendar(2020, 11, 31), new GregorianCalendar(2019, 11, 13), new GregorianCalendar(2019, 11, 15)},\n        });\n\n        //create date validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.Date, ValidationAlertStyle.Stop, ValidationOperator.Between, new GregorianCalendar(2020, 11, 13), new GregorianCalendar(2020, 11, 18));\n\n        //set column width just for export shown.\n        worksheet.getRange(\"C:E\").getEntireColumn().setColumnWidthInPixel(120);\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateCustomValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A2\").setValue(1);\n        worksheet.getRange(\"A3\").setValue(2);\n\n        worksheet.getRange(\"C2\").setValue(0);\n\n        //create custom validation, if the expression \"=$C$2\" result is true, the cell's validation will be true, otherwise, it is false.\n        //when use custom validation, validationOperator and formula2 parameters will be ignored even if you have given.\n        worksheet.getRange(\"A2:A3\").getValidation().add(ValidationType.Custom, ValidationAlertStyle.Information, ValidationOperator.Between, \"=$C$2\", null);\n\n        //judge if Range[\"A2:A3\"] has validation.\n        for (int i = 1; i <= 2; i++) {\n            if (worksheet.getRange(i, 0).getHasValidation()) {\n                //set the range[i, 0]'s interior color.\n                worksheet.getRange(i, 0).getInterior().setColor(Color.GetLightBlue());\n            }\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateWholeNumberValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {1, 3, 5},\n                {7, 9, 11},\n                {13, 15, 17}\n        });\n\n        //add whole number validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.Whole, ValidationAlertStyle.Stop, ValidationOperator.Between, 1, 8);\n        IValidation validation = worksheet.getRange(\"C2:E4\").getValidation();\n        validation.setIgnoreBlank(true);\n        validation.setInputTitle(\"Tips\");\n        validation.setInputMessage(\"Input a value between 1 and 8, please\");\n        validation.setErrorTitle(\"Error\");\n        validation.setErrorMessage(\"input value does not between 1 and 8\");\n        validation.setShowInputMessage(true);\n        validation.setShowError(true);\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n\n            }\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateTimeValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {new GregorianCalendar(1899, 11, 30, 13, 0, 0), new GregorianCalendar(1899, 11, 30, 13, 29, 59), new GregorianCalendar(1899, 11, 30, 13, 30, 0)},\n                {new GregorianCalendar(1899, 11, 30, 14, 0, 0), new GregorianCalendar(1899, 11, 30, 15, 0, 0), new GregorianCalendar(1899, 11, 30, 16, 30, 0)},\n                {new GregorianCalendar(1899, 11, 30, 19, 0, 0), new GregorianCalendar(1899, 11, 30, 18, 29, 59), new GregorianCalendar(1899, 11, 30, 18, 30, 0)}\n        });\n\n        //create time validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.Time, ValidationAlertStyle.Stop, ValidationOperator.Between, new GregorianCalendar(1899, 11, 30, 13, 30, 0), new GregorianCalendar(1899, 11, 30, 18, 30, 0));\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.DeleteValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {new GregorianCalendar(1899, 11, 30, 13, 0, 0), new GregorianCalendar(1899, 11, 30, 13, 29, 59), new GregorianCalendar(1899, 11, 30, 13, 30, 0)},\n                {new GregorianCalendar(1899, 11, 30, 14, 0, 0), new GregorianCalendar(1899, 11, 30, 15, 0, 0), new GregorianCalendar(1899, 11, 30, 16, 30, 0)},\n                {new GregorianCalendar(1899, 11, 30, 19, 0, 0), new GregorianCalendar(1899, 11, 30, 18, 29, 59), new GregorianCalendar(1899, 11, 30, 18, 30, 0)}\n        });\n\n        //create time validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.Time, ValidationAlertStyle.Stop, ValidationOperator.Between, new GregorianCalendar(1899, 11, 30, 13, 30, 0), new GregorianCalendar(1899, 11, 30, 18, 30, 0));\n\n        //delete validation.\n        worksheet.getRange(\"C2:E4\").getValidation().delete();\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateListValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1\").setValue(\"aaa\");\n        worksheet.getRange(\"A2\").setValue(\"bbb\");\n        worksheet.getRange(\"A3\").setValue(\"ccc\");\n\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {\"aaa\", \"bbb\", \"ccc\"},\n                {\"aaa1\", \"bbb1\", \"ccc1\"},\n                {\"aaa2\", \"bbb2\", \"ccc2\"}\n        });\n\n        //create list validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.List, ValidationAlertStyle.Stop, ValidationOperator.Between, \"=$a$1:$a$3\", null);\n        IValidation validation = worksheet.getRange(\"C2:E4\").getValidation();\n        validation.setInCellDropdown(true);\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.CreateTextLength": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {\"aa\", \"bb\", \"aa1\"},\n                {\"ccc\", \"dddd\", \"dddd1\"},\n                {\"ff\", \"ffff\", \"ffff1\"}\n        });\n\n        //create text length validation, text length between 2 and 3.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.TextLength, ValidationAlertStyle.Stop, ValidationOperator.Between, 2, 3);\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.datavalidation.ModifyValidation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"C2:E4\").setValue(new Object[][]{\n                {new GregorianCalendar(1899, 11, 30, 13, 0, 0), new GregorianCalendar(1899, 11, 30, 13, 29, 59), new GregorianCalendar(1899, 11, 30, 13, 30, 0)},\n                {new GregorianCalendar(1899, 11, 30, 14, 0, 0), new GregorianCalendar(1899, 11, 30, 15, 0, 0), new GregorianCalendar(1899, 11, 30, 16, 30, 0)},\n                {new GregorianCalendar(1899, 11, 30, 19, 0, 0), new GregorianCalendar(1899, 11, 30, 18, 29, 59), new GregorianCalendar(1899, 11, 30, 18, 30, 0)}\n        });\n\n        //create time validation.\n        worksheet.getRange(\"C2:E4\").getValidation().add(ValidationType.Time, ValidationAlertStyle.Stop, ValidationOperator.Between, new GregorianCalendar(1899, 11, 30, 13, 30, 0), new GregorianCalendar(1899, 11, 30, 18, 30, 0));\n\n        //Modify validation.\n        worksheet.getRange(\"C2:E4\").getValidation().setFormula1(new GregorianCalendar(1899, 11, 30, 14, 30, 0));\n        worksheet.getRange(\"C2:E4\").getValidation().setFormula2(new GregorianCalendar(1899, 11, 30, 19, 0, 0));\n\n        //judge if Range[\"C2:E4\"] has validation.\n        for (int i = 1; i <= 3; i++) {\n            for (int j = 2; j <= 4; j++) {\n                if (worksheet.getRange(i, j).getHasValidation()) {\n                    //set the range[i, j]'s interior color.\n                    worksheet.getRange(i, j).getInterior().setColor(Color.GetLightBlue());\n                }\n            }\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.SetShowTableStyles": "\n\n        Object sourceData = new Object[][]{\n            {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n            {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n            {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n            {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n            {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n            {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n            {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n            {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n            {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n            {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n            {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n            {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n            {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n            {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n            {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n            {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n         };\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"K20:P33\").setValue(sourceData);\n        worksheet.getRange(\"K:P\").setColumnWidth(15);\n        // Add pivot table\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"K20:P33\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"A1\"), \"pivottable1\");\n        worksheet.getRange(\"N21:N35\").setNumberFormat(\"$#,##0.00\");\n        \n        // config pivot table's fields\n        IPivotField field_Date = pivottable.getPivotFields().get(\"Date\");\n        field_Date.setOrientation(PivotFieldOrientation.PageField);\n\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n        field_Amount.setNumberFormat(\"$#,##0.00\");\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.RowField);\n\n        // Create pivot style \"test\"\n        ITableStyle pivotStyle = workbook.getTableStyles().add(\"test\");\n\n        // Set table style as pivot table style\n        pivotStyle.setShowAsAvailablePivotStyle(true);\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.PageFieldLabels).getInterior().setColor(Color.GetLightBlue());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.PageFieldValues).getInterior().setColor(Color.GetLightBlue());\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.GrandTotalColumn).getInterior().setColor(Color.GetLightGreen());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.GrandTotalRow).getInterior().setColor(Color.GetLightGreen());\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setColor(Color.GetCyan());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.FirstColumn).getInterior().setColor(Color.GetTomato());\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe).getInterior().setColor(Color.GetYellow());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).getInterior().setColor(Color.GetLightYellow());\n        \n        // Set pivot table style\n        pivottable.setStyle(pivotStyle);\n        \n        // Set if some table style would be showed \n        pivottable.setShowTableStyleRowStripes(true);\n        pivottable.setShowTableStyleColumnHeaders(true);\n        pivottable.setShowTableStyleRowHeaders(false);\n        pivottable.setShowTableStyleLastColumn(false);\n        \n        worksheet.getRange(\"A1:H16\").getColumns().autoFit();\n\t",
  "com.grapecity.documents.excel.examples.features.pivottable.FilterItemsInPivotTable": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"I7\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"J8:J11\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"H:O\").setColumnWidth(12);\n\n        //config pivot table's fields\n        IPivotField field_Product = pivottable.getPivotFields().get(1);\n        field_Product.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(3);\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_Country = pivottable.getPivotFields().get(5);\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n        //row field filter.\n        field_Product.getPivotItems().get(\"Apple\").setVisible(false);\n        field_Product.getPivotItems().get(\"Beans\").setVisible(false);\n        field_Product.getPivotItems().get(\"Orange\").setVisible(false);\n\n        //page filter.\n        field_Country.getPivotItems().get(\"United States\").setVisible(false);\n        field_Country.getPivotItems().get(\"Canada\").setVisible(false);\n\n        worksheet.getRange(\"E:E\").setColumnWidth(12);\n        worksheet.getRange(\"I:I\").setColumnWidth(12);\n        worksheet.getRange(\"J:J\").setColumnWidth(16);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.HideGrandTotalsInPivotTable": "\n\n        Object sourceData = new Object[][] { { \"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\" },\n                { 1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\" },\n                { 2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\" },\n                { 3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\" },\n                { 4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\" },\n                { 5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\" },\n                { 6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\" },\n                { 7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\" },\n                { 8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\" },\n                { 9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\" },\n                { 10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\" },\n                { 11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\" },\n                { 12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\" },\n                { 13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\" },\n                { 14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\" },\n                { 15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\" }, };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"H7\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"I9:O11\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"H:O\").setColumnWidth(12);\n\n        // config pivot table's fields\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n        // Hide all grand totals\n        pivottable.setColumnGrand(false);\n        pivottable.setRowGrand(false);\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.RefreshPivotTable": "\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"I5\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"J6:J12\").setNumberFormat(\"$#,##0.00\");\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(3);\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        //change pivot cache's source data.\n        worksheet.getRange(\"D8\").setValue(3000);\n\n        //sync cache's data to pivot table.\n        worksheet.getPivotTables().get(0).refresh();\n\n        worksheet.getRange(\"E:E\").setColumnWidth(12);\n        worksheet.getRange(\"I:I\").setColumnWidth(12);\n        worksheet.getRange(\"J:J\").setColumnWidth(16);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.ChangeDataFieldSummarizeFunction": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"H7\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"I9:O11\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"H:O\").setColumnWidth(12);\n\n        //config pivot table's fields\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n        //Change data field's summarize function.\n        field_Amount.setFunction(ConsolidationFunction.Average);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.RowAxisLayoutInPivotTable": "\n\n        Object sourceData = new Object[][] { { \"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\" },\n                { 1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\" },\n                { 2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\" },\n                { 3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\" },\n                { 4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\" },\n                { 5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\" },\n                { 6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\" },\n                { 7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\" },\n                { 8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\" },\n                { 9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\" },\n                { 10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\" },\n                { 11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\" },\n                { 12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\" },\n                { 13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\" },\n                { 14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\" },\n                { 15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\" }, };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"H7\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"I9:O11\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"H:O\").setColumnWidth(12);\n\n        // config pivot table's fields\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n        // Set row axis layout to tabular\n        pivottable.setRowAxisLayout(LayoutRowType.TabularRow);\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.SetNumberFormatForField": "\n\n        Object sourceData = new Object[][]{\n            {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n            {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n            {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n            {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n            {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n            {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n            {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n            {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n            {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n            {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n            {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n            {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n            {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n            {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n            {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n            {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n         };\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"H1:M16\").setValue(sourceData);\n        worksheet.getRange(\"H:M\").setColumnWidth(15);\n        // Add pivot table\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"H1:M16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"A1\"), \"pivottable1\");\n        worksheet.getRange(\"K2:K16\").setNumberFormat(\"$#,##0.00\");\n        \n        // config pivot table's fields\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n        field_Amount.setNumberFormat(\"$#,##0.00\");\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n        // Set number format for amount field\n        field_Amount.setNumberFormat(\"$#,##0.00\");\n        \n        worksheet.getRange(\"A:D\").getColumns().autoFit();\n\t",
  "com.grapecity.documents.excel.examples.features.pivottable.CreatePivotTable": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"H7\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"I9:O11\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"H:O\").setColumnWidth(12);\n\n        //config pivot table's fields\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.ModifySubtotalsForPivotField": "\n\n        Object sourceData = new Object[][]{\n            {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n            {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n            {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n            {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n            {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n            {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n            {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n            {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n            {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n            {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n            {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n            {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n            {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n            {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n            {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n            {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"I2\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"J4:J17, J9:J33\").setNumberFormat(\"$#,##0.00\");\n\n        //config pivot table's fields\n        IPivotField field_Product = pivottable.getPivotFields().get(1);\n        field_Product.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Category = pivottable.getPivotFields().get(2);\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(3);\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        //modify subtotals for pivot field.\n        field_Category.setSubtotals(EnumSet.of(SubtotalType.Sum, SubtotalType.Count, SubtotalType.Average, SubtotalType.Max,\n            SubtotalType.Min, SubtotalType.CountNums, SubtotalType.StdDev,\n            SubtotalType.StdDevP, SubtotalType.Var, SubtotalType.VarP));\n\n        worksheet.getRange(\"E:E\").setColumnWidth(12);\n        worksheet.getRange(\"J:J\").setColumnWidth(20);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.SetPivotFieldNameInPivotTable": "\n\n        Object sourceData = new Object[][] { { \"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\" },\n                { 1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\" },\n                { 2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\" },\n                { 3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\" },\n                { 4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\" },\n                { 5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\" },\n                { 6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\" },\n                { 7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\" },\n                { 8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\" },\n                { 9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\" },\n                { 10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\" },\n                { 11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\" },\n                { 12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\" },\n                { 13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\" },\n                { 14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\" },\n                { 15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\" }, };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"H7\"), \"pivottable1\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"I9:O11\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"H:O\").setColumnWidth(12);\n\n        // config pivot table's fields\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.PageField);\n\n        // Rename a pivot field\n        field_Category.setName(\"Type\");\n        \n        // Set row axis layout to view field names\n        pivottable.setRowAxisLayout(LayoutRowType.OutlineRow);\n    ",
  "com.grapecity.documents.excel.examples.features.pivottable.SetCustomPivotStyle": "\n\n        Object sourceData = new Object[][]{\n            {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n            {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n            {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n            {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n            {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n            {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n            {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n            {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n            {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n            {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n            {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n            {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n            {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n            {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n            {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n            {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n         };\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"K20:P33\").setValue(sourceData);\n        worksheet.getRange(\"K:P\").setColumnWidth(15);\n        // Add pivot table\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"K20:P33\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"A1\"), \"pivottable1\");\n        worksheet.getRange(\"N21:N35\").setNumberFormat(\"$#,##0.00\");\n\n        // config pivot table's fields\n        IPivotField field_Date = pivottable.getPivotFields().get(\"Date\");\n        field_Date.setOrientation(PivotFieldOrientation.PageField);\n\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n        field_Amount.setNumberFormat(\"$#,##0.00\");\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.RowField);\n\n        // Create pivot style \"test\"\n        ITableStyle pivotStyle = workbook.getTableStyles().add(\"test\");\n\n        // Set table style as pivot table style\n        pivotStyle.setShowAsAvailablePivotStyle(true);\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.PageFieldLabels).getInterior().setColor(Color.GetLightBlue());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.PageFieldValues).getInterior().setColor(Color.GetLightBlue());\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.GrandTotalColumn).getInterior().setColor(Color.GetLightGreen());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.GrandTotalRow).getInterior().setColor(Color.GetLightGreen());\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.HeaderRow).getInterior().setColor(Color.GetCyan());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.FirstColumn).getInterior().setColor(Color.GetTomato());\n\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe).getInterior().setColor(Color.GetYellow());\n        pivotStyle.getTableStyleElements().get(TableStyleElementType.SecondRowStripe).getInterior().setColor(Color.GetLightYellow());\n\n        // Set ShowTableStyleRowStripes as true\n        pivottable.setShowTableStyleRowStripes(true);\n\n        // Set pivot table style\n        pivottable.setStyle(pivotStyle);\n\n        worksheet.getRange(\"A1:H16\").getColumns().autoFit();\n\t",
  "com.grapecity.documents.excel.examples.features.pivottable.SetBuiltinStyle": "\n\n        Object sourceData = new Object[][]{\n            {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n            {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n            {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n            {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n            {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n            {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n            {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n            {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n            {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n            {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n            {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n            {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n            {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n            {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n            {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n            {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n         };\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"K20:P33\").setValue(sourceData);\n        worksheet.getRange(\"K:P\").setColumnWidth(15);\n        // Add pivot table\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"K20:P33\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"A1\"), \"pivottable1\");\n        worksheet.getRange(\"N21:N35\").setNumberFormat(\"$#,##0.00\");\n\n        // config pivot table's fields\n        IPivotField field_Date = pivottable.getPivotFields().get(\"Date\");\n        field_Date.setOrientation(PivotFieldOrientation.PageField);\n\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n        field_Amount.setNumberFormat(\"$#,##0.00\");\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.RowField);\n\n        // Set pivot style\n        pivottable.setTableStyle(\"PivotStyleMedium28\");\n\n        worksheet.getRange(\"A1:H16\").getColumns().autoFit();\n\t",
  "com.grapecity.documents.excel.examples.features.rangeoperations.SetJava8DateValue": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IRange a1 = worksheet.getRange(\"A1\");\n\n        //Java 8 introduces a new package java.time which contains lots of new date/time types and sub-packages to support JSR310.\n        //GcExcel can handle these new types when working with Java 8 or upper.\n        a1.setValue(java.time.LocalDateTime.now());\n        java.time.LocalDateTime java8Date = (java.time.LocalDateTime)a1.getValue();\n\n        a1.setNumberFormat(\"m/d/yyyy h:mm\");\n        a1.setColumnWidth(20);\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.CellInfo": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // cell's value B2\n        String cell = com.grapecity.documents.excel.CellInfo.CellIndexToName(1, 1);\n        worksheet.getRange(cell).getInterior().setColor(Color.GetLightBlue());\n\n        // rowIndex is 3 and columnIndex is 2\n        int[] index = com.grapecity.documents.excel.CellInfo.CellNameToIndex(\"C4\");\n        int rowIndex = index[0];\n        int columnIndex = index[1];\n        worksheet.getRange(rowIndex, columnIndex).getInterior().setColor(Color.GetLightCoral());\n\n        // column is D\n        String column = com.grapecity.documents.excel.CellInfo.ColumnIndexToName(3);\n        worksheet.getRange(String.format(\"%s:%s\", column, column)).getInterior().setColor(Color.GetLightGreen());\n\n        // columnIndex is 4\n        columnIndex = com.grapecity.documents.excel.CellInfo.ColumnNameToIndex(\"E\");\n        worksheet.getColumns().get(columnIndex).getInterior().setColor(Color.GetLightSalmon());\n\n        // row is 3\n        String row = com.grapecity.documents.excel.CellInfo.RowIndexToName(2);\n        worksheet.getRange(String.format(\"%s:%s\", row, row)).getInterior().setColor(Color.GetLightSteelBlue());\n\n        // rowIndex is 4\n        rowIndex = com.grapecity.documents.excel.CellInfo.RowNameToIndex(\"5\");\n        worksheet.getRows().get(rowIndex).getInterior().setColor(Color.GetLightSkyBlue());\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.SetRangeValue": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        //set two-dimension array value to range A1:F7\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //return a two-dimension array when get range A1:B7's value.\n        Object result = worksheet.getRange(\"A1:B7\").getValue();\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.InsertCellsDeleteCells": "\n\n        IWorksheet worksheet1 = workbook.getWorksheets().get(0);\n        IWorksheet worksheet2 = workbook.getWorksheets().add();\n\n        Object data = new Object[][]\n                {\n                        {1, 2, 3},\n                        {4, 5, 6},\n                        {7, 8, 9}\n                };\n\n        worksheet1.getRange(\"A1:C3\").setValue(data);\n        worksheet2.getRange(\"A1:C3\").setValue(data);\n\n        //Insert cells\n        worksheet1.getRange(\"A2\").insert();//Auto\n        worksheet1.getRange(\"B2\").insert(InsertShiftDirection.Down);\n        worksheet1.getRange(\"C2\").insert(InsertShiftDirection.Right);\n\n        //Delete cells\n        worksheet2.getRange(\"A2\").delete();//Auto\n        worksheet2.getRange(\"B2\").delete(DeleteShiftDirection.Left);\n        worksheet2.getRange(\"C2\").delete(DeleteShiftDirection.Up);\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.AccessEachAreaOfRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // set interior color for area1 A5:B7.\n        IRange area1 = worksheet.getRange(\"A5:B7, C3, H5:N6\").getAreas().getArea(0);\n        area1.getInterior().setColor(Color.GetPink());\n\n        // set interior color for area2 C3.\n        IRange area2 = worksheet.getRange(\"A5:B7, C3, H5:N6\").getAreas().getArea(1);\n        area2.getInterior().setColor(Color.GetLightGreen());\n\n        // set interior color for area3 H5:N6.\n        IRange area3 = worksheet.getRange(\"A5:B7, C3, H5:N6\").getAreas().getArea(2);\n        area3.getInterior().setColor(Color.GetLightBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.GetFeatureRelatedUsedRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1:B2\").setValue(new Object[][]{\n                {1, 2},\n                {\"aaa\", \"bbb\"}\n        });\n        worksheet.getRange(\"A2:C3\").getInterior().setColor(Color.GetGreen());\n\n        //style used range is A2:C3.\n        IRange usedRange_style = worksheet.getUsedRange(EnumSet.of(UsedRangeType.Style));\n        usedRange_style.getInterior().setColor(Color.GetLightBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.SetRowHeightColumnWidth": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //set row height for row 1:2.\n        worksheet.getRange(\"1:2\").setRowHeight(50);\n\n        //set column width for column C:D.\n        worksheet.getRange(\"C:D\").setColumnWidth(20);\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.GetRangeRowCountColumnCount": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange range = worksheet.getRange(\"A5:B7\");\n\n        // cell count is 6.\n        int cellcount = range.getCount();\n        // cell count is 6.\n        int cellcount1 = range.getCells().getCount();\n        // row count is 3.\n        int rowcount = range.getRows().getCount();\n        // column count is 2.\n        int columncount = range.getColumns().getCount();\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.CopyPasteOptions": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set data of PC\n        worksheet.getRange(\"A2\").setValue(\"PC\");\n        worksheet.getRange(\"A4:C4\").setValue(new String[] {\"Device\", \"Quantity\", \"Unit Price\"});\n        worksheet.getRange(\"A5:C10\").setValue(new Object[][]\n        {\n        \t{\"T540p\", 12, 9850},\n        \t{\"T570\", 5, 7460},\n        \t{\"Y460\", 6, 5400},\n        \t{\"Y460F\", 8, 6240}\n        });\n\n        //Set style\n        worksheet.getRange(\"A2\").setRowHeight(30);\n        worksheet.getRange(\"A2\").getFont().setSize(20);\n        worksheet.getRange(\"A2\").getFont().setBold(true);\n        worksheet.getRange(\"A4:C4\").getFont().setBold(true);\n        worksheet.getRange(\"A4:C4\").getFont().setColor(Color.GetWhite());\n        worksheet.getRange(\"A4:C4\").getInterior().setColor(Color.GetLightBlue());\n        worksheet.getRange(\"A5:C10\").getBorders().get(BordersIndex.InsideHorizontal).setColor(Color.GetOrange());\n        worksheet.getRange(\"A5:C10\").getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.DashDot);\n\n        //Copy only style and row height\n        worksheet.getRange(\"H1\").setValue(\"Copy style and row height from previous cells.\");\n        worksheet.getRange(\"H1\").getFont().setColor(Color.GetRed());\n        worksheet.getRange(\"H1\").getFont().setBold(true);\n        worksheet.getRange(\"A2:C10\").copy(worksheet.getRange(\"H2\"), EnumSet.of(PasteType.Formats));\n\n        //Set data of mobile devices\n        worksheet.getRange(\"H2\").setValue(\"Mobile\");\n        worksheet.getRange(\"H4:J4\").setValue(new String[] {\"Device\", \"Quantity\", \"Unit Price\"});\n        worksheet.getRange(\"H5:J10\").setValue(new Object[][]\n        {\n        \t{\"HW-P30\", 20, 4200},\n        \t{\"IPhone-X\", 5, 9888},\n        \t{\"IPhone-6s plus\", 15, 6880}\n        });\n\n        //Add new sheet\n        IWorksheet worksheet2 =workbook.getWorksheets().add();\n\n        //Copy only style to new sheet\n        worksheet.getRange(\"A2:C10\").copy(worksheet2.getRange(\"A2\"), EnumSet.of(PasteType.Formats));\n        worksheet2.getRange(\"A3\").setValue(\"Copy style from sheet1.\");\n        worksheet2.getRange(\"A3\").getFont().setColor(Color.GetRed());\n        worksheet2.getRange(\"A3\").getFont().setBold(true);\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.GetWorksheetUsedRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"H6:M7\").setValue(1);\n        worksheet.getRange(\"J9:J10\").merge();\n\n        // set interior color for worksheet usedRange \"H6:M10\".\n        IRange usedrange = worksheet.getUsedRange();\n        usedrange.getInterior().setColor(Color.GetLightBlue());\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.InsertDeleteRowsColumns": "\n\n        IWorksheet worksheet1 = workbook.getWorksheets().get(0);\n        IWorksheet worksheet2 = workbook.getWorksheets().add();\n\n        Object data = new Object[][]\n                {\n                        {1, 2, 3},\n                        {4, 5, 6},\n                        {7, 8, 9}\n                };\n\n        worksheet1.getRange(\"A1:C3\").setValue(data);\n        worksheet2.getRange(\"A1:C3\").setValue(data);\n\n        //Insert rows\n        worksheet1.getRange(\"A2:B2\").getEntireRow().insert();\n        worksheet1.getRange(\"3:5\").insert();\n\n        //Insert columns\n        worksheet1.getRange(\"B3:B5\").getEntireColumn().insert();\n        worksheet1.getRange(\"A:A\").insert();\n\n        //Delete rows\n        worksheet2.getRange(\"A3:A5\").getEntireRow().delete();\n        worksheet2.getRange(\"2:4\").delete();\n\n        //Delete columns\n        worksheet2.getRange(\"B3:B5\").getEntireColumn().delete();\n        worksheet2.getRange(\"A:A\").delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.MergeCells": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //A1:C4 is a single merged cell.\n        worksheet.getRange(\"A1:C4\").merge();\n        //H5:J5 is a single merged cell.\n        //H6:J6 is a single merged cell.\n        worksheet.getRange(\"H5:J6\").merge(true);\n\n        //select A1:H5's entire merge area A1:J5, entire merge area is a bounding rectangle.\n        IRange entireMergeArea = worksheet.getRange(\"A1:H5\").getEntireMergeArea();\n        entireMergeArea.select();\n\n        //judge if H5 is a merged cell.\n        if (worksheet.getRange(\"J5\").getMergeCells()) {\n            //set value to the top left cell of the merge area.\n            worksheet.getRange(\"J5\").getEntireMergeArea().get(0, 0).setValue(1);\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.CutCopyRangeBetweenWorkbooks": "\n        //Load template file Home inventory.xlsx from resource\n        Workbook source_workbook = new Workbook();\n        InputStream source_fileStream = this.getResourceStream(\"xlsx/Home inventory.xlsx\");\n        source_workbook.open(source_fileStream);\n\n        //Hide gridline\n        workbook.getActiveSheet().getSheetView().setDisplayGridlines(false);\n\n        workbook.getActiveSheet().getRange(\"A1\").setValue(\"Copy content from the first sheet of source workbook\");\n        workbook.getActiveSheet().getRange(\"A1\").getFont().setColor(Color.GetRed());\n        workbook.getActiveSheet().getRange(\"A1\").getFont().setBold(true);\n\n        //Copy content of active sheet from source workbook to the current sheet at A2\n        source_workbook.getActiveSheet().getUsedRange(EnumSet.allOf(UsedRangeType.class)).copy(workbook.getActiveSheet().getRange(\"A2\"),\n        \t\tEnumSet.of(PasteType.Formulas, PasteType.Formats, PasteType.RowHeights, PasteType.ColumnWidths));\n\n        workbook.getActiveSheet().getRange(\"C21\").setValue(\"Cut content from the second sheet of source workbook\");\n        workbook.getActiveSheet().getRange(\"C21\").getFont().setColor(Color.GetRed());\n        workbook.getActiveSheet().getRange(\"C21\").getFont().setBold(true);\n\n        //Cut content of second sheet from source workbook to the current sheet at C22\n        source_workbook.getWorksheets().get(1).getRange(\"2:15\").cut(workbook.getActiveSheet().getRange(\"C22\"));\n        \n        //Make the theme of two workbooks same\n        workbook.setTheme(source_workbook.getTheme());\n\t",
  "com.grapecity.documents.excel.examples.features.rangeoperations.AccessCellsRowsColumns": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange range = worksheet.getRange(\"A5:B7\");\n\n        //set value for cell A7.\n        range.getCells().get(4).setValue(\"A7\");\n\n        //cell is B6\n        range.getCells().get(1, 1).setValue(\"B6\");\n\n        //row count is 3 and range is A6:B6.\n        int rowCount = range.getRows().getCount();\n        String row = range.getRows().get(1).toString();\n\n        //set interior color for row range A6:B6.\n        range.getRows().get(1).getInterior().setColor(Color.GetLightBlue());\n\n        //column count is 2 and range is B5:B7.\n        int columnCount = range.getColumns().getCount();\n        String column = range.getColumns().get(1).toString();\n\n        //set values for column range B5:B7.\n        range.getColumns().get(1).getInterior().setColor(Color.GetLightSkyBlue());\n\n        //entire rows are from row 5 to row 7\n        String entirerow = range.getEntireRow().toString();\n\n        //entire columns are from column A to column B\n        String entireColumn = range.getEntireColumn().toString();\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.HiddenRowColumn": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"E1\").setValue(1);\n\n        //Hidden row 2:6.\n        worksheet.getRange(\"2:6\").setHidden(true);\n\n        //Hidden column A:D.\n        worksheet.getRange(\"A:D\").setHidden(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.CutCopyRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IWorksheet worksheet2 = workbook.getWorksheets().add();\n\n        worksheet.getRange(\"B3:D12\").setValue(5);\n        worksheet.getRange(\"B3:D12\").getInterior().setColor(Color.GetLightGreen());\n\n        //Copy\n        worksheet.getRange(\"B3:D12\").copy(worksheet.getRange(\"E5\"));\n\n        //Cut\n        worksheet.getRange(\"B3:D12\").cut(worksheet.getRange(\"I5:K14\"));\n\n        worksheet.getRange(\"I1:K2\").setValue(2);\n        worksheet.getRange(\"I1:K2\").getInterior().setColor(Color.GetPink());\n\n        //cross sheet cut copy.\n        worksheet.getRange(\"I1:K2\").cut(worksheet2.getRange(\"H5\"));\n        worksheet.getRange(\"G4:H5\").copy(worksheet2.getRange(\"A1\"));\n    ",
  "com.grapecity.documents.excel.examples.features.rangeoperations.AccessRange": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //use index to access cell A1.\n        worksheet.getRange(0, 0).getInterior().setColor(Color.GetLightGreen());\n\n        //use index to access range A1:B2\n        worksheet.getRange(0, 0, 2, 2).setValue(5);\n\n        //use string to access range.\n        worksheet.getRange(\"A2\").getInterior().setColor(Color.GetLightYellow());\n        worksheet.getRange(\"C3:D4\").getInterior().setColor(Color.GetTomato());\n        worksheet.getRange(\"A5:B7, C3, H5:N6\").setValue(2);\n\n        //use index to access rows\n        worksheet.getRows().get(2).getInterior().setColor(Color.GetLightSalmon());\n\n        //use string to access rows\n        worksheet.getRange(\"4:4\").getInterior().setColor(Color.GetLightSkyBlue());\n\n        //use index to access columns\n        worksheet.getColumns().get(2).getInterior().setColor(Color.GetLightSalmon());\n\n        //use string to access columns\n        worksheet.getRange(\"D:D\").getInterior().setColor(Color.GetLightSkyBlue());\n\n        //use Cells to access range.\n        worksheet.getCells().get(5).getInterior().setColor(Color.GetLightBlue());\n        worksheet.getCells().get(5, 5).getInterior().setColor(Color.GetLightYellow());\n\n        //access all rows in worksheet\n        String allRows = worksheet.getRows().toString();\n\n        //access all columns in worksheet\n        String allColumns = worksheet.getColumns().toString();\n\n        //access the entire sheet range\n        String entireSheet = worksheet.getCells().toString();\n\n    ",
  "com.grapecity.documents.excel.examples.features.sorting.SortRangeByValue": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //Sort by column F, ascending.\n        worksheet.getRange(\"A2:F7\").sort(worksheet.getRange(\"F2:F7\"), SortOrder.Ascending, SortOrientation.Columns);\n\n    ",
  "com.grapecity.documents.excel.examples.features.sorting.SortRangeByFontColor": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"F2\").getFont().setColor(Color.GetRed());\n        worksheet.getRange(\"F3\").getFont().setColor(Color.GetGainsboro());\n        worksheet.getRange(\"F4\").getFont().setColor(Color.GetGreen());\n        worksheet.getRange(\"F5\").getFont().setColor(Color.GetGainsboro());\n        worksheet.getRange(\"F6\").getFont().setColor(Color.GetGainsboro());\n        worksheet.getRange(\"F7\").getFont().setColor(Color.GetGainsboro());\n\n        //The font colors which are same to \"F7\" cell's color will in the top.\n        worksheet.getSort().getSortFields().add(new FontColorSortField(worksheet.getRange(\"F2:F7\"), worksheet.getRange(\"F7\").getFont().getColor(), SortOrder.Ascending));\n        worksheet.getSort().setRange(worksheet.getRange(\"A2:F7\"));\n        worksheet.getSort().setOrientation(SortOrientation.Columns);\n        worksheet.getSort().apply();\n\n    ",
  "com.grapecity.documents.excel.examples.features.sorting.CustomSort": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //give a custom sort values string. \"Angela\" and \"Damon\" should be the top1 and top2.\n        ValueSortField sortkey = new ValueSortField(worksheet.getRange(\"A2:A7\"), \"\\\"Angela\\\", \\\"Damon\\\"\");\n        worksheet.getRange(\"A2:F7\").sort(SortOrientation.Columns, false, sortkey);\n\n    ",
  "com.grapecity.documents.excel.examples.features.sorting.SortRangeByIcon": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        IIconSetCondition iconset = worksheet.getRange(\"F2:F7\").getFormatConditions().addIconSetCondition();\n        iconset.setIconSet(workbook.getIconSets().get(IconSetType.Icon3TrafficLights1));\n\n        //green traffic light will in the top.\n        worksheet.getSort().getSortFields().add(new IconSortField(worksheet.getRange(\"F2:F7\"), workbook.getIconSets().get(IconSetType.Icon3TrafficLights1).get(2), SortOrder.Ascending));\n        worksheet.getSort().setRange(worksheet.getRange(\"A2:F7\"));\n        worksheet.getSort().setOrientation(SortOrientation.Columns);\n        worksheet.getSort().apply();\n\n    ",
  "com.grapecity.documents.excel.examples.features.sorting.SortRangeByInterior": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"F2\").getInterior().setColor(Color.GetLightPink());\n        worksheet.getRange(\"F3\").getInterior().setColor(Color.GetLightGreen());\n        worksheet.getRange(\"F4\").getInterior().setColor(Color.GetLightPink());\n        worksheet.getRange(\"F5\").getInterior().setColor(Color.GetLightGreen());\n        worksheet.getRange(\"F6\").getInterior().setColor(Color.GetLightBlue());\n        worksheet.getRange(\"F7\").getInterior().setColor(Color.GetLightPink());\n\n        //\"F4\" will in the top.\n        worksheet.getSort().getSortFields().add(new CellColorSortField(worksheet.getRange(\"F2:F7\"), worksheet.getRange(\"F4\").getDisplayFormat().getInterior(), SortOrder.Ascending));\n        worksheet.getSort().setRange(worksheet.getRange(\"A2:F7\"));\n        worksheet.getSort().setOrientation(SortOrientation.Columns);\n        worksheet.getSort().apply();\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.GetDisplayFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Range A1's displaying color is table style\n        worksheet.getTables().add(worksheet.getRange(\"A1:E5\"), true);\n        Color color_A1 = worksheet.getRange(\"A1\").getDisplayFormat().getInterior().getColor();\n\n        //Range A1's displaying color will be cell style, yellow.\n        worksheet.getRange(\"A1\").getInterior().setColor(Color.GetYellow());\n        Color color_A1_1 = worksheet.getRange(\"A1\").getDisplayFormat().getInterior().getColor();\n\n        //Range A1's displaying color will be conditional format style, green.\n        IFormatCondition condition = (IFormatCondition) worksheet.getRange(\"A1\").getFormatConditions().add(FormatConditionType.NoBlanksCondition);\n        condition.getInterior().setColor(Color.GetGreen());\n        Color color_A1_2 = worksheet.getRange(\"A1\").getDisplayFormat().getInterior().getColor();\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.CreateStyleBaseOn": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setStyle(workbook.getStyles().get(\"Good\"));\n        worksheet.getRange(\"A1\").setValue(\"Good\");\n\n        // Create and modify a style based on current existing style\n        IStyle myGood = workbook.getStyles().add(\"MyGood\", workbook.getStyles().get(\"Good\"));\n        myGood.getFont().setBold(true);\n        myGood.getFont().setItalic(true);\n\n        worksheet.getRange(\"B1\").setStyle(workbook.getStyles().get(\"MyGood\"));\n        worksheet.getRange(\"B1\").setValue(\"MyGood\");\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.ApplyStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Change to build in name style.\n        worksheet.getRange(\"A1\").setValue(\"Bad\");\n        worksheet.getRange(\"A1\").setStyle(workbook.getStyles().get(\"Bad\"));\n\n        // Change to custom name style.\n        // Add custom name style.\n        IStyle style = workbook.getStyles().add(\"testStyle\");\n\n        // Config custom name style settings begin.\n        // Border\n        style.getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        style.getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thick);\n        style.getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Double);\n        style.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Double);\n        style.getBorders().setColor(Color.FromArgb(0, 255, 0));\n\n        // Font\n        style.getFont().setThemeColor(ThemeColor.Accent1);\n        style.getFont().setTintAndShade(0.8);\n        style.getFont().setItalic(true);\n        style.getFont().setBold(true);\n        style.getFont().setName(\"LiSu\");\n        style.getFont().setSize(28);\n        style.getFont().setStrikethrough(true);\n        style.getFont().setSubscript(true);\n        style.getFont().setSuperscript(false);\n        style.getFont().setUnderline(UnderlineType.Double);\n\n        // Protection\n        style.setFormulaHidden(true);\n        style.setLocked(false);\n\n        // Number\n        style.setNumberFormat(\"#,##0_);[Red](#,##0)\");\n\n        // Alignment\n        style.setHorizontalAlignment(HorizontalAlignment.Right);\n        style.setVerticalAlignment(VerticalAlignment.Bottom);\n        style.setWrapText(true);\n        style.setIndentLevel(5);\n        style.setOrientation(45);\n\n        // Fill\n        style.getInterior().setColorIndex(5);\n        style.getInterior().setPattern(Pattern.Down);\n        style.getInterior().setPatternColor(Color.FromArgb(0, 0, 255));\n\n        style.setIncludeAlignment(false);\n        style.setIncludeBorder(true);\n        style.setIncludeFont(false);\n        style.setIncludeNumber(true);\n        style.setIncludePatterns(false);\n        style.setIncludeProtection(true);\n        // Config custom name style settings end.\n\n        // Set range's style to custom name style.\n        worksheet.getRange(\"A2\").setValue(\"My test style\");\n        worksheet.getRange(\"A2\").setStyle(worksheet.getWorkbook().getStyles().get(\"testStyle\"));\n        worksheet.getRange(\"A2\").setColumnWidth(20);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.CreateCustomStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        // Add custom name style.\n        IStyle style = workbook.getStyles().add(\"testStyle\");\n\n        // Config custom name style settings begin.\n        // Border\n        style.getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thin);\n        style.getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thick);\n        style.getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Double);\n        style.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Double);\n        style.getBorders().setColor(Color.FromArgb(0, 255, 0));\n\n        // Font\n        style.getFont().setThemeColor(ThemeColor.Accent1);\n        style.getFont().setTintAndShade(0.8);\n        style.getFont().setItalic(true);\n        style.getFont().setBold(true);\n        style.getFont().setName(\"LiSu\");\n        style.getFont().setSize(28);\n        style.getFont().setStrikethrough(true);\n        style.getFont().setSubscript(true);\n        style.getFont().setSuperscript(false);\n        style.getFont().setUnderline(UnderlineType.Double);\n\n        // Protection\n        style.setFormulaHidden(true);\n        style.setLocked(false);\n\n        // Number\n        style.setNumberFormat(\"#,##0_);[Red](#,##0)\");\n\n        // Alignment\n        style.setHorizontalAlignment(HorizontalAlignment.Right);\n        style.setVerticalAlignment(VerticalAlignment.Bottom);\n        style.setWrapText(true);\n        style.setIndentLevel(5);\n        style.setOrientation(45);\n\n        // Fill\n        style.getInterior().setColorIndex(5);\n        style.getInterior().setPattern(Pattern.Down);\n        style.getInterior().setPatternColor(Color.FromArgb(0, 0, 255));\n\n        style.setIncludeAlignment(false);\n        style.setIncludeBorder(true);\n        style.setIncludeFont(false);\n        style.setIncludeNumber(true);\n        style.setIncludePatterns(false);\n        style.setIncludeProtection(true);\n        // Config custom name style settings end.\n\n        // Set range's style to custom name style.\n        worksheet.getRange(\"A1\").setValue(\"My test style\");\n        worksheet.getRange(\"A1\").setStyle(worksheet.getWorkbook().getStyles().get(\"testStyle\"));\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fonts.FontStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1\").setValue(\"Bold\");\n        worksheet.getRange(\"A1\").getFont().setBold(true);\n\n        worksheet.getRange(\"A2\").setValue(\"Italic\");\n        worksheet.getRange(\"A2\").getFont().setItalic(true);\n\n        worksheet.getRange(\"A3\").setValue(\"Bold Italic\");\n        worksheet.getRange(\"A3\").getFont().setBold(true);\n        worksheet.getRange(\"A3\").getFont().setItalic(true);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fonts.FontName": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // use Name property to set font name.\n        worksheet.getRange(\"A1\").setValue(\"Calibri\");\n        worksheet.getRange(\"A1\").getFont().setName(\"Calibri\");\n\n        // use ThemeFont property to set font name.\n        worksheet.getRange(\"A2\").setValue(\"Major theme font\");\n        worksheet.getRange(\"A2\").getFont().setThemeFont(ThemeFont.Major);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fonts.FontColor": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(\"font\");\n        worksheet.getRange(\"A1\").getFont().setColor(Color.GetGreen());\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fonts.FontEffect": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1\").setValue(\"Strikethrough\");\n        worksheet.getRange(\"A1\").getFont().setStrikethrough(true);\n\n        worksheet.getRange(\"A2\").setValue(\"Superscript\");\n        worksheet.getRange(\"A2\").getFont().setSuperscript(true);\n\n        worksheet.getRange(\"A3\").setValue(\"Subscript\");\n        worksheet.getRange(\"A3\").getFont().setSubscript(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fonts.FontUnderline": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1\").setValue(\"Single Underline\");\n        worksheet.getRange(\"A1\").getFont().setUnderline(UnderlineType.Single);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fonts.FontSize": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1\").setValue(\"Font size is 15\");\n        worksheet.getRange(\"A1\").getFont().setSize(15);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.alignment.ShrinkToFit": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange rangeB1 = worksheet.getRange(\"B1\");\n        rangeB1.setValue(\"The ShrinkToFit property is applied\");\n        rangeB1.setShrinkToFit(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.alignment.TextOrientation": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange rangeC1 = worksheet.getRange(\"C1\");\n        rangeC1.setValue(\"The ReadingOrder property is applied to set text direction.\");\n        rangeC1.setReadingOrder(ReadingOrder.RightToLeft);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.alignment.HAlignVAlign": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getColumns().get(0).setColumnWidth(17);\n\n        IRange rangeA1 = worksheet.getRange(\"A1\");\n        rangeA1.setValue(\"Right and top\");\n        rangeA1.setHorizontalAlignment(HorizontalAlignment.Right);\n        rangeA1.setVerticalAlignment(VerticalAlignment.Top);\n\n        IRange rangeA2 = worksheet.getRange(\"A2\");\n        rangeA2.setValue(\"Center\");\n        rangeA2.setHorizontalAlignment(HorizontalAlignment.Center);\n        rangeA2.setVerticalAlignment(VerticalAlignment.Center);\n\n        IRange rangeA3 = worksheet.getRange(\"A3\");\n        rangeA3.setValue(\"Left and bottom, indent\");\n        rangeA3.setIndentLevel(1);\n\n        worksheet.getRange(\"A1:A3\").setColumnWidth(50);\n        worksheet.getRange(\"A1:A3\").setRowHeight(30);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.alignment.WrapText": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange rangeB3 = worksheet.getRange(\"B3\");\n        rangeB3.setValue(\"The WrapText property is applied to wrap the text within a cell\");\n        rangeB3.setWrapText(true);\n\n        worksheet.getRows().get(2).setRowHeight(150);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.alignment.RotateCellContents": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange rangeB2 = worksheet.getRange(\"B2\");\n        rangeB2.setValue(\"Rotated Cell Contents\");\n        rangeB2.setHorizontalAlignment(HorizontalAlignment.Center);\n        rangeB2.setVerticalAlignment(VerticalAlignment.Center);\n        // Rotate cell contents.\n        rangeB2.setOrientation(15);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.numberformat.NumberFormats": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:H\").setColumnWidth(17);\n\n        // Display 111 as 111.\n        worksheet.getRange(\"A1\").setValue(111);\n        worksheet.getRange(\"A1\").setNumberFormat(\"#####\");\n\n        // Display 222 as 00222.\n        worksheet.getRange(\"B1\").setValue(222);\n        worksheet.getRange(\"B1\").setNumberFormat(\"00000\");\n\n        // Display 12345678 as 12,345,678.\n        worksheet.getRange(\"C1\").setValue(12345678);\n        worksheet.getRange(\"C1\").setNumberFormat(\"#,#\");\n\n        // Display .126 as 0.13.\n        worksheet.getRange(\"D1\").setValue(.126);\n        worksheet.getRange(\"D1\").setNumberFormat(\"0.##\");\n\n        // Display 74.4 as 74.400.\n        worksheet.getRange(\"E1\").setValue(74.4);\n        worksheet.getRange(\"E1\").setNumberFormat(\"##.000\");\n\n        // Display 1.6 as 160.0%.\n        worksheet.getRange(\"F1\").setValue(1.6);\n        worksheet.getRange(\"F1\").setNumberFormat(\"0.0%\");\n\n        // Display 4321 as $4,321.00.\n        worksheet.getRange(\"G1\").setValue(4321);\n        worksheet.getRange(\"G1\").setNumberFormat(\"$#,##0.00\");\n\n        // Display 8.75 as 8 3/4.\n        worksheet.getRange(\"H1\").setValue(8.75);\n        worksheet.getRange(\"H1\").setNumberFormat(\"# ?/?\");\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.numberformat.CustomNumberFormat": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        // Set range values.\n        worksheet.getRange(\"A2:B2\").setValue(-15.50);\n        worksheet.getRange(\"A3:B3\").setValue(555);\n        worksheet.getRange(\"A4:B4\").setValue(0);\n        worksheet.getRange(\"A5:B5\").setValue(\"Name\");\n\n        // Apply custom number format.\n        worksheet.getRange(\"B2:B5\").setNumberFormat(\"[Green]#.00;[Red]#.00;[Blue]0.00;[Cyan]\\\"product: \\\"@\");\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.numberformat.DateAndTimeFormat": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(17);\n        worksheet.getRange(\"A1:F1\").setFormula(\"= Now()\");\n\n        // Apply different date formats.\n        worksheet.getRange(\"A1\").setNumberFormat(\"m/d/yy\");\n        worksheet.getRange(\"B1\").setNumberFormat(\"d-mmm-yy\");\n        worksheet.getRange(\"C1\").setNumberFormat(\"dddd\");\n\n        // Apply different time formats.\n        worksheet.getRange(\"D1\").setNumberFormat(\"m/d/yy h:mm\");\n        worksheet.getRange(\"E1\").setNumberFormat(\"h:mm AM/PM\");\n        worksheet.getRange(\"F1\").setNumberFormat(\"h:mm:ss\");\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.protection.SetRangeFormulaHidden": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B1\").setFormula(\"=A1\");\n\n        // config range B1's FormulaHidden property.\n        worksheet.getRange(\"B1\").setFormulaHidden(true);\n        // protect worksheet, range B1's formula will not show in exported xlsx file.\n        worksheet.setProtection(true);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.protection.SetRangeLocked": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //config range B1's Locked property.\n        worksheet.getRange(\"B1\").setLocked(false);\n        //protect worksheet, range B1 can be modified in exported xlsx file.\n        worksheet.setProtection(true);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.celltype.AddCheckBoxCellType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        CheckBoxCellType cellType = new CheckBoxCellType();\n        cellType.setCaption(\"Caption\");\n        cellType.setTextTrue(\"True\");\n        cellType.setTextFalse(\"False\");\n        cellType.setTextIndeterminate(\"Indeterminate\");\n        cellType.setIsThreeState(true);\n        cellType.setTextAlign(CheckBoxAlign.Right);\n\n        worksheet.getRange(\"C5:C6\").setCellType(cellType);\n        worksheet.getRange(\"C5\").setValue(true);\n        worksheet.getRange(\"C6\").setValue(false);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.celltype.AddButtonCellType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        ButtonCellType cellType = new ButtonCellType();\n        cellType.setText(\"Hello\");\n        cellType.setButtonBackColor(\"Azure\");\n        cellType.setMarginLeft(10);\n        cellType.setMarginRight(10);\n\n        worksheet.getRange(\"C5\").setCellType(cellType);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.celltype.AddHyperlinkCellType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        HyperLinkCellType cellType = new HyperLinkCellType();\n        cellType.setText(\"Google\");\n        cellType.setLinkColor(\"Blue\");\n        cellType.setLinkToolTip(\"Search by google\");\n        cellType.setVisitedLinkColor(\"Green\");\n        cellType.setTarget(HyperLinkTargetType.Blank);\n\n        worksheet.getRange(\"C5\").setCellType(cellType);\n        worksheet.getRange(\"C5\").setValue(\"http://www.google.com\");\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.celltype.AddRowColumnCellType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getColumns().get(3).setColumnWidthInPixel(100);\n        CheckBoxCellType cellType = new CheckBoxCellType();\n        cellType.setCaption(\"CheckBox\");\n        cellType.setTextTrue(\"True\");\n        cellType.setTextFalse(\"False\");\n        cellType.setIsThreeState(true);\n        cellType.setTextAlign(CheckBoxAlign.Right);\n        worksheet.getColumns().get(3).setCellType(cellType);\n        worksheet.getRange(\"D1:D10\").setValue(true);\n\n        ButtonCellType buttonCellType = new ButtonCellType();\n        buttonCellType.setText(\"Button\");\n        buttonCellType.setButtonBackColor(\"Azure\");\n        buttonCellType.setMarginLeft(10);\n        buttonCellType.setMarginRight(10);\n\n        worksheet.getRows().get(3).setCellType(buttonCellType);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.celltype.AddComboBoxCellType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        ComboBoxCellType cellType = new ComboBoxCellType();\n        cellType.setEditorValueType(EditorValueType.Value);\n        ComboBoxCellItem item = new ComboBoxCellItem();\n        item.setValue(\"US\");\n        item.setText(\"United States\");\n        cellType.getItems().add(item);\n        item = new ComboBoxCellItem();\n        item.setValue(\"CN\");\n        item.setText(\"China\");\n        cellType.getItems().add(item);\n        item = new ComboBoxCellItem();\n        item.setValue(\"JP\");\n        item.setText(\"Japan\");\n        cellType.getItems().add(item);\n\n        worksheet.getRange(\"C5\").setCellType(cellType);\n        worksheet.getRange(\"C5\").setValue(\"CN\");\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.celltype.AddSheetCellType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        ButtonCellType buttonCellType = new ButtonCellType();\n        buttonCellType.setText(\"Button\");\n        buttonCellType.setButtonBackColor(\"Azure\");\n        buttonCellType.setMarginLeft(10);\n        buttonCellType.setMarginRight(10);\n\n        worksheet.setCellType(buttonCellType);\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fill.LinearGradientFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").getInterior().setPattern(Pattern.LinearGradient);\n        ((ILinearGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).getColorStops().get(0).setColor(Color.GetRed());\n        ((ILinearGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).getColorStops().get(1).setColor(Color.GetYellow());\n\n        ((ILinearGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).setDegree(90);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fill.SolidFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A2\").getInterior().setColor(Color.GetGreen());\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fill.PatternFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").getInterior().setPattern(Pattern.LightDown);\n        worksheet.getRange(\"A1\").getInterior().setColor(Color.GetPink());\n        worksheet.getRange(\"A1\").getInterior().setPatternColorIndex(5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.fill.RectangularGradientFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").getInterior().setPattern(Pattern.RectangularGradient);\n        ((IRectangularGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).getColorStops().get(0).setColor(Color.GetRed());\n        ((IRectangularGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).getColorStops().get(1).setColor(Color.GetGreen());\n\n        ((IRectangularGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).setBottom(0.2);\n        ((IRectangularGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).setRight(0.3);\n        ((IRectangularGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).setTop(0.4);\n        ((IRectangularGradient) worksheet.getRange(\"A1\").getInterior().getGradient()).setLeft(0.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.borders.AddingBordersToRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange rangeB2_E6 = worksheet.getRange(\"B2:E6\");\n\n        //set left, top, right, bottom borders together.\n        rangeB2_E6.getBorders().setLineStyle(BorderLineStyle.DashDot);\n        rangeB2_E6.getBorders().setColor(Color.GetGreen());\n\n        //set inside horizontal border.\n        rangeB2_E6.getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.Dashed);\n        rangeB2_E6.getBorders().get(BordersIndex.InsideHorizontal).setColor(Color.GetTomato());\n\n        //set inside vertical border.\n        rangeB2_E6.getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.Double);\n        rangeB2_E6.getBorders().get(BordersIndex.InsideVertical).setColor(Color.GetBlue());\n\n        //set top border individually.\n        rangeB2_E6.getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Medium);\n        rangeB2_E6.getBorders().get(BordersIndex.EdgeTop).setColor(Color.GetRed());\n\n    ",
  "com.grapecity.documents.excel.examples.features.formatting.borders.AddBordersToCell": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IRange rangeB2 = worksheet.getRange(\"B2\");\n\n        //set left, top, right, bottom borders together.\n        rangeB2.getBorders().setLineStyle(BorderLineStyle.DashDot);\n        rangeB2.getBorders().setColor(Color.GetGreen());\n\n        //set top border individually.\n        rangeB2.getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Medium);\n        rangeB2.getBorders().get(BordersIndex.EdgeTop).setColor(Color.GetRed());\n\n        //set diagonal down border individually.\n        rangeB2.getBorders().get(BordersIndex.DiagonalDown).setLineStyle(BorderLineStyle.Hair);\n        rangeB2.getBorders().get(BordersIndex.DiagonalDown).setColor(Color.GetBlue());\n\n        //set diagonal up border individually.\n        rangeB2.getBorders().get(BordersIndex.DiagonalUp).setLineStyle(BorderLineStyle.Dotted);\n        rangeB2.getBorders().get(BordersIndex.DiagonalUp).setColor(Color.GetBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.theme.ChangeWorkbookTheme": "\n\n        //Change workbook's theme to builtin theme.\n        workbook.setTheme(Themes.GetBerlin());\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2\").setValue(\"Major Font:\");\n        worksheet.getRange(\"B3\").setValue(\"Minor Font:\");\n        worksheet.getRange(\"C2\").setValue(\"Trebuchet MS\");\n        worksheet.getRange(\"C3\").setValue(\"Trebuchet MS\");\n        worksheet.getRange(\"C2\").getFont().setThemeFont(ThemeFont.Major);\n        worksheet.getRange(\"C3\").getFont().setThemeFont(ThemeFont.Minor);\n\n        worksheet.getRange(\"E2:E13\").setValue(new Object[]{\n                \"Light1\", \"Dark1\", \"Light2\", \"Dark2\", \"Accent1\", \"Accent2\",\n                \"Accent3\", \"Accent4\", \"Accent5\", \"Accent6\", \"Hyperlink\", \"FollowedHyperlink\"\n        });\n\n        worksheet.getRange(\"F2\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F3\").getInterior().setThemeColor(ThemeColor.Dark1);\n        worksheet.getRange(\"F4\").getInterior().setThemeColor(ThemeColor.Light2);\n        worksheet.getRange(\"F5\").getInterior().setThemeColor(ThemeColor.Dark2);\n        worksheet.getRange(\"F6\").getInterior().setThemeColor(ThemeColor.Accent1);\n        worksheet.getRange(\"F7\").getInterior().setThemeColor(ThemeColor.Accent2);\n        worksheet.getRange(\"F8\").getInterior().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"F9\").getInterior().setThemeColor(ThemeColor.Accent4);\n        worksheet.getRange(\"F10\").getInterior().setThemeColor(ThemeColor.Accent5);\n        worksheet.getRange(\"F11\").getInterior().setThemeColor(ThemeColor.Accent6);\n        worksheet.getRange(\"F12\").getInterior().setThemeColor(ThemeColor.Hyperlink);\n        worksheet.getRange(\"F13\").getInterior().setThemeColor(ThemeColor.FollowedHyperlink);\n\n        worksheet.getRange(\"B:F\").setColumnWidth(15);\n\n    ",
  "com.grapecity.documents.excel.examples.features.theme.AddCustomThemes": "\n        // Base theme is office theme when not give parameter.\n        ITheme theme = new Theme(\"testTheme\");\n        // ITheme theme = new GrapeCity.Documents.Excel.Theme(\"testTheme\",Themes.Badge);\n\n        // Customize theme's color.\n        theme.getThemeColorScheme().get(ThemeColor.Light1).setRGB(Color.GetAntiqueWhite());\n        theme.getThemeColorScheme().get(ThemeColor.Dark1).setRGB(Color.GetAqua());\n        theme.getThemeColorScheme().get(ThemeColor.Light2).setRGB(Color.GetBeige());\n        theme.getThemeColorScheme().get(ThemeColor.Dark2).setRGB(Color.GetBlack());\n        theme.getThemeColorScheme().get(ThemeColor.Accent1).setRGB(Color.GetCadetBlue());\n        theme.getThemeColorScheme().get(ThemeColor.Accent2).setRGB(Color.GetChartreuse());\n        theme.getThemeColorScheme().get(ThemeColor.Accent3).setRGB(Color.GetChocolate());\n        theme.getThemeColorScheme().get(ThemeColor.Accent4).setRGB(Color.GetCoral());\n        theme.getThemeColorScheme().get(ThemeColor.Accent5).setRGB(Color.GetCornflowerBlue());\n        theme.getThemeColorScheme().get(ThemeColor.Accent6).setRGB(Color.GetCornsilk());\n        theme.getThemeColorScheme().get(ThemeColor.Hyperlink).setRGB(Color.GetHoneydew());\n        theme.getThemeColorScheme().get(ThemeColor.FollowedHyperlink).setRGB(Color.GetHotPink());\n\n        // Customize theme's font.\n        theme.getThemeFontScheme().getMajor().get(FontLanguageIndex.Latin).setName(\"Kristen ITC\");\n        theme.getThemeFontScheme().getMinor().get(FontLanguageIndex.Latin).setName(\"Segoe Script\");\n\n        // Change workbook's theme to custom theme.\n        workbook.setTheme(theme);\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2\").setValue(\"Major Font:\");\n        worksheet.getRange(\"B3\").setValue(\"Minor Font:\");\n        worksheet.getRange(\"C2\").setValue(\"Kristen ITC\");\n        worksheet.getRange(\"C3\").setValue(\"Segoe Script\");\n        worksheet.getRange(\"C2\").getFont().setThemeFont(ThemeFont.Major);\n        worksheet.getRange(\"C3\").getFont().setThemeFont(ThemeFont.Minor);\n\n        worksheet.getRange(\"E2:E13\").setValue(new Object[]{\n                \"Light1\", \"Dark1\", \"Light2\", \"Dark2\", \"Accent1\", \"Accent2\",\n                \"Accent3\", \"Accent4\", \"Accent5\", \"Accent6\", \"Hyperlink\", \"FollowedHyperlink\"\n        });\n\n        worksheet.getRange(\"F2\").getInterior().setThemeColor(ThemeColor.Light1);\n        worksheet.getRange(\"F3\").getInterior().setThemeColor(ThemeColor.Dark1);\n        worksheet.getRange(\"F4\").getInterior().setThemeColor(ThemeColor.Light2);\n        worksheet.getRange(\"F5\").getInterior().setThemeColor(ThemeColor.Dark2);\n        worksheet.getRange(\"F6\").getInterior().setThemeColor(ThemeColor.Accent1);\n        worksheet.getRange(\"F7\").getInterior().setThemeColor(ThemeColor.Accent2);\n        worksheet.getRange(\"F8\").getInterior().setThemeColor(ThemeColor.Accent3);\n        worksheet.getRange(\"F9\").getInterior().setThemeColor(ThemeColor.Accent4);\n        worksheet.getRange(\"F10\").getInterior().setThemeColor(ThemeColor.Accent5);\n        worksheet.getRange(\"F11\").getInterior().setThemeColor(ThemeColor.Accent6);\n        worksheet.getRange(\"F12\").getInterior().setThemeColor(ThemeColor.Hyperlink);\n        worksheet.getRange(\"F13\").getInterior().setThemeColor(ThemeColor.FollowedHyperlink);\n\n    ",
  "com.grapecity.documents.excel.examples.features.hyperlinks.DeleteHyperlinks": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:A\").setColumnWidth(30);\n\n        //add a hyperlink link to web page.\n        worksheet.getRange(\"A1:B2\").getHyperlinks().add(worksheet.getRange(\"A1\"), \"http://www.google.com/\", null, \"open google web site.\", \"Google\");\n\n        //add a hyperlink link to a range in this document.\n        worksheet.getRange(\"A3:B4\").getHyperlinks().add(worksheet.getRange(\"A3\"), null, \"Sheet1!$C$3:$E$4\", \"Go to sheet1 C3:E4\", \"\");\n\n        //add a hyperlink link to email address.\n        worksheet.getRange(\"A5:B6\").getHyperlinks().add(worksheet.getRange(\"A5\"), \"mailto:us.sales@grapecity.com\", null, \"Send an email to sales\", \"Send an email to sales\");\n\n        //add a hyperlink link to external file.\n        //change the path to real picture file path.\n        String path = \"external.xlsx\";\n        worksheet.getRange(\"A7:B8\").getHyperlinks().add(worksheet.getRange(\"A7\"), path, null, \"link to external.xlsx file.\", \"External.xlsx\");\n\n        //delete hyperlinks in range A1:A2.\n        worksheet.getRange(\"A1:A2\").getHyperlinks().delete();\n\n        //delete all hyperlinks in this worksheet.\n        worksheet.getHyperlinks().delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.hyperlinks.CreateHyperlinks": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:A\").setColumnWidth(30);\n\n        //add a hyperlink link to web page.\n        worksheet.getRange(\"A1:B2\").getHyperlinks().add(worksheet.getRange(\"A1\"), \"http://www.google.com/\", null, \"open google web site.\", \"Google\");\n\n        //add a hyperlink link to a range in this document.\n        worksheet.getRange(\"A3:B4\").getHyperlinks().add(worksheet.getRange(\"A3\"), null, \"Sheet1!$C$3:$E$4\", \"Go to sheet1 C3:E4\", null);\n\n        //add a hyperlink link to email address.\n        worksheet.getRange(\"A5:B6\").getHyperlinks().add(worksheet.getRange(\"A5\"), \"mailto:us.sales@grapecity.com\", null, \"Send an email to sales\", \"Send an email to sales\");\n\n        //add a hyperlink link to external file.\n        //change the path to real picture file path.\n        String path = \"external.xlsx\";\n        worksheet.getRange(\"A7:B8\").getHyperlinks().add(worksheet.getRange(\"A7\"), path, null, \"link to external.xlsx file.\", \"External.xlsx\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.hyperlinks.CreateShapeWithHyperlink": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Add shapes\n        IShape shape1 = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 10, 0, 100, 100);\n        shape1.getTextFrame().getTextRange().add(\"Go to google web site.\");\n        IShape shape2 = worksheet.getShapes().addShape(AutoShapeType.RightArrow, 10, 120, 100, 100);\n        shape2.getTextFrame().getTextRange().add(\"Go to sheet1 C3:E4\");\n        IShape shape3 = worksheet.getShapes().addShape(AutoShapeType.Oval, 10, 240, 100, 100);\n        shape3.getTextFrame().getTextRange().add(\"Send an email to sales\");\n        IShape shape4 = worksheet.getShapes().addShape(AutoShapeType.LeftArrow, 10, 360, 100, 100);\n        shape4.getTextFrame().getTextRange().add(\"Link to external.xlsx file.\");\n\n        //add a hyperlink link to web page.\n        worksheet.getHyperlinks().add(shape1, \"http://www.google.com/\", null, \"open google web site.\", \"Google\");\n\n        //add a hyperlink link to a range in this document.\n        worksheet.getHyperlinks().add(shape2, null, \"Sheet1!$C$3:$E$4\", \"Go to sheet1 C3:E4\", null);\n\n        //add a hyperlink link to email address.\n        worksheet.getHyperlinks().add(shape3, \"mailto:us.sales@grapecity.com\", null, \"Send an email to sales\", \"Send an email to sales\");\n\n        //add a hyperlink link to external file.\n        //change the path to real picture file path.\n        String path = \"external.xlsx\";\n        worksheet.getHyperlinks().add(shape4, path, null, \"link to external.xlsx file.\", \"External.xlsx\");\n    ",
  "com.grapecity.documents.excel.examples.features.cellrichtext.CharacterCellText": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IRange b2 = worksheet.getRange(\"B2\");\n        b2.setValue(\"GrapeCity Documents for Excel\");\n        b2.getFont().setSize(26);\n        b2.getEntireRow().setRowHeight(42);\n\n        ITextRun run1 = b2.characters(0, 9);\n        run1.getFont().setName(\"Agency FB\");\n        run1.getFont().setThemeColor(ThemeColor.Accent1);\n        run1.getFont().setBold(true);\n\n        ITextRun run2 = b2.characters(10, 9);\n        run2.getFont().setThemeColor(ThemeColor.Accent2);\n        run2.getFont().setName(\"Arial Black\");\n        run2.getFont().setUnderline(UnderlineType.Single);\n\n        ITextRun run3 = b2.characters(20, 3);\n        run3.getFont().setItalic(true);\n\n        ITextRun run4 = b2.characters(24, 5);\n        run4.getFont().setColor(Color.GetBlue());\n        run4.getFont().setBold(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.cellrichtext.AddTextRun": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IRange b2 = worksheet.getRange(\"B2\");\n\n        ITextRun run1 = b2.getRichText().add(\"GrapeCity\");\n        run1.getFont().setName(\"Agency FB\");\n        run1.getFont().setSize(26);\n        run1.getFont().setThemeColor(ThemeColor.Accent1);\n        run1.getFont().setBold(true);\n\n        ITextRun run2 = b2.getRichText().add(\" Documents\");\n        run2.getFont().setThemeColor(ThemeColor.Accent2);\n        run2.getFont().setName(\"Arial Black\");\n        run2.getFont().setSize(20);\n        run2.getFont().setUnderline(UnderlineType.Single);\n\n        ITextRun run3 = b2.getRichText().add(\" for \");\n        run3.getFont().setItalic(true);\n\n        ITextRun run4 = b2.getRichText().add(\"Excel\");\n        run4.getFont().setColor(Color.GetBlue());\n        run4.getFont().setBold(true);\n        run4.getFont().setSize(26);\n        run4.getFont().setUnderline(UnderlineType.Double);\n\n        b2.getEntireRow().setRowHeight(42);\n    ",
  "com.grapecity.documents.excel.examples.features.cellrichtext.ConfigRunFont": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IRange a2 = worksheet.getRange(\"A2\");\n\n        a2.getFont().setSize(18);\n        a2.getFont().setBold(true);\n        a2.setVerticalAlignment(VerticalAlignment.Center);\n\n        a2.getEntireRow().setRowHeight(42);\n        a2.getEntireColumn().setColumnWidth(40);\n        a2.setValue(\"Perfect square trinomial\");\n\n        ITextRun run = a2.characters(8, 7);\n        run.getFont().setItalic(true);\n        run.getFont().setThemeColor(ThemeColor.Accent1);\n\n        IRange b2 = worksheet.getRange(\"B2\");\n        b2.getFont().setSize(26);\n        b2.getEntireColumn().setColumnWidth(60);\n\n        b2.setValue(\"(a+b)2 = a2+2ab+b2\");\n\n        ITextRun superRun1 = b2.characters(5, 1);\n        superRun1.getFont().setSuperscript(true);\n        superRun1.getFont().setColor(Color.GetRed());\n\n        ITextRun superRun2 = b2.characters(10, 1);\n        superRun2.getFont().setSuperscript(true);\n        superRun2.getFont().setColor(Color.GetGreen());\n\n        ITextRun superRun3 = b2.characters(17, 1);\n        superRun3.getFont().setSuperscript(true);\n        superRun3.getFont().setColor(Color.GetBlue());\n    ",
  "com.grapecity.documents.excel.examples.features.charts.DeleteChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 300, 10, 300, 300);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //delete chart.\n        shape.getChart().delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.ChartDuplicate": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Create chart, chart's range is Range[\"G1:M21\"]\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 300, 10, 300, 300);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //Duplicate chart\n        IShape newShape = shape.duplicate();\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.ChartCopy": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //Create chart, chart's range is Range[\"G1:M21\"]\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 300, 10, 300, 300);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //Range[\"G1:M21\"] must contain chart's range, copy a new shape to Range[\"N1:T21\"]\n        worksheet.getRange(\"G1:M21\").copy(worksheet.getRange(\"N1\"));\n        //worksheet.Range[\"G1:M21\"].Copy(worksheet.Range[\"N1:T21\"]);\n\n        //Cross sheet copy, copy a new chart to worksheet2's Range[\"N1:T21\"]\n        //IWorksheet worksheet2 = workbook.Worksheets.Add()\n        //worksheet.Range[\"G1:M21\"].Copy(worksheet2.Range[\"E1\"]);\n        //worksheet.Range[\"G1:M21\"].Copy(worksheet2.Range[\"N1:T21\"]);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.AddUserShapes": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:C10\").setValue(new Object[][]{\n            {\"Task\", \"Worker 1\", \"Worker 2\"},\n            {\"Task 1\", 7, 10},\n            {\"Task 2\", 5, 1},\n            {\"Task 3\", 3, 6},\n            {\"Task 4\", 10, 5},\n            {\"Task 5\", 4, 4},\n            {\"Task 6\", 5, 8},\n            {\"Task 7\", 8, 7},\n            {\"Task 8\", 2, 5},\n            {\"Task 9\", 6, 4}\n        });\n\n        //Create a funnel chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 400, 250);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C10\"));\n        shape.getChart().setHasLegend(false);\n        shape.getChart().getChartTitle().setText(\" \");\n        \n        //Add a bussiness logo in the line chart area\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        try {\n\t\t\tshape.getChart().addPicture(stream, ImageType.PNG, 170, 10, 60, 10);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n        //Add shapes in the line chart area \n        IShape userShape1 = shape.getChart().addShape(AutoShapeType.Rectangle, 30, 45, 60, 20);\n        userShape1.getFill().getColor().setObjectThemeColor(ThemeColor.Accent2);\n        userShape1.getLine().getColor().setObjectThemeColor(ThemeColor.Accent2);\n        userShape1.getTextFrame().getTextRange().get(0).setText(\"Worker 2\");\n\n        IShape userShape2 = shape.getChart().addShape(AutoShapeType.Rectangle, 330, 110, 60, 20);\n        userShape2.getFill().getColor().setObjectThemeColor(ThemeColor.Accent1);\n        userShape2.getLine().getColor().setObjectThemeColor(ThemeColor.Accent1);\n        userShape2.getTextFrame().getTextRange().get(0).setText(\"Worker 1\");\n\t",
  "com.grapecity.documents.excel.examples.features.charts.CreateChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 300, 10, 300, 300);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        //create chart.\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.ChartCut": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //Create chart, chart's range is Range[\"G1:M21\"]\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 300, 10, 300, 300);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //Range[\"G1:M21\"] must contain chart's range, cut a new shape to Range[\"N1:T21\"]\n        worksheet.getRange(\"G1:M21\").cut(worksheet.getRange(\"N1\"));\n        //worksheet.Range[\"G1:M21\"].cut(worksheet.Range[\"N1:T21\"]);\n\n        //Cross sheet cut, cut a new chart to worksheet2's Range[\"N1:T21\"]\n        //IWorksheet worksheet2 = workbook.Worksheets.Add()\n        //worksheet.Range[\"G1:M21\"].cut(worksheet2.Range[\"E1\"]);\n        //worksheet.Range[\"G1:M21\"].cut(worksheet2.Range[\"N1:T21\"]);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.charttitle.ConfigChartTitleStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -20, 36, 27},\n                {\"Item3\", 62, 70, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 50, 50}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config chart title style\n        shape.getChart().setHasTitle(true);\n        shape.getChart().getChartTitle().setText(\"MyChartTitle\");\n        shape.getChart().getChartTitle().getFont().setSize(15);\n        shape.getChart().getChartTitle().getFont().setName(\"Bradley Hand ITC\");\n        shape.getChart().getChartTitle().getFormat().getFill().getColor().setRGB(Color.GetDarkOrange());\n        shape.getChart().getChartTitle().getFormat().getLine().getColor().setRGB(Color.GetCornflowerBlue());\n        shape.getChart().getChartTitle().getFormat().getLine().setWeight(1.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.charttitle.ConfigChartTitleRichText": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -20, 36, 27},\n                {\"Item3\", 62, 70, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 50, 50}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config chart title style with rich text\n        shape.getChart().setHasTitle(true);\n        shape.getChart().getChartTitle().getTextFrame().getTextRange().getParagraphs().add(\"ChartSubtitle\");\n        shape.getChart().getChartTitle().getTextFrame().getTextRange().getParagraphs().add(\"ChartTitle\", 0);\n        shape.getChart().getChartTitle().getTextFrame().getTextRange().getParagraphs().get(0).getFont().getColor().setRGB(Color.GetCornflowerBlue());\n        shape.getChart().getChartTitle().getTextFrame().getTextRange().getParagraphs().get(0).getFont().setSize(15);\n        shape.getChart().getChartTitle().getTextFrame().getTextRange().getParagraphs().get(1).getFont().getColor().setRGB(Color.GetOrange());\n        shape.getChart().getChartTitle().getTextFrame().getTextRange().getParagraphs().get(1).getFont().setSize(10);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.plotarea.ConfigPlotAreaFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, 36, 27},\n                {\"Item3\", 52, 50, -30},\n                {\"Item4\", 22, 65, 30},\n                {\"Item5\", 23, 40, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        IPlotArea plotarea = shape.getChart().getPlotArea();\n        plotarea.getFormat().getFill().getColor().setRGB(Color.GetLightGray());\n        plotarea.getFormat().getLine().getColor().setRGB(Color.GetGray());\n        plotarea.getFormat().getLine().setWeight(1);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.plotarea.ChartJustPlotVisibleCell": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //Hidden row 3.\n        worksheet.getRange(\"3:3\").setHidden(true);\n        //plot visible cells only, does not plot row 3.\n        shape.getChart().setPlotVisibleOnly(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.LineMarkersChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineMarkers, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B8\").setValue(new Object[][]{\n                {6, 55},\n                {45, 25},\n                {35, 45},\n                {25, 65},\n                {65, 15},\n                {45, 75},\n                {75, 55},\n                {65, 35},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B8\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Line with Markers\");\n        shape.getChart().getSeriesCollection().get(0).setMarkerStyle(MarkerStyle.Square);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.CombinationChart2": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C17\").setValue(new Object[][]{\n                {\"Area 1\", \"Column 1\", \"Column 2\"},\n                {1350, 120, 75},\n                {1500, 90, 35},\n                {1200, 80, 50},\n                {1300, 80, 80},\n                {1750, 90, 100},\n                {1640, 120, 130},\n                {1700, 120, 95},\n                {1100, 90, 80},\n                {1350, 120, 75},\n                {1500, 90, 35},\n                {1200, 80, 50},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C17\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Combination Chart\");\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        ISeries series2 = shape.getChart().getSeriesCollection().get(1);\n        ISeries series3 = shape.getChart().getSeriesCollection().get(2);\n        //change series type\n        series1.setChartType(ChartType.Area);\n        series2.setChartType(ChartType.ColumnStacked);\n        series3.setChartType(ChartType.ColumnStacked);\n        //set axis group\n        series2.setAxisGroup(AxisGroup.Secondary);\n        series3.setAxisGroup(AxisGroup.Secondary);\n        //config axis scale and unit\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        IAxis value_second_axis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Secondary);\n        value_axis.setMaximumScale(1800);\n        value_axis.setMajorUnit(450);\n        value_second_axis.setMaximumScale(300);\n        value_second_axis.setMajorUnit(75);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.BubbleChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.Bubble, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C10\").setValue(new Object[][]{\n                {\"Blue\", null, null},\n                {125, 750, 3},\n                {25, 625, 7},\n                {75, 875, 5},\n                {175, 625, 6},\n                {\"Red\", null, null},\n                {125, 500, 10},\n                {25, 250, 1},\n                {75, 125, 5},\n                {175, 250, 8},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C5\"), RowCol.Columns);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A6:C10\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Bubble Chart\");\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.AreaChart": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.Area, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C13\").setValue(new Object[][]{\n                {null, \"Blue Series\", \"Orange Series\"},\n                {\"Jan\", 0, 59.1883603948205},\n                {\"Feb\", 44.6420211591501, 52.2280901938606},\n                {\"Mar\", 45.2174930051225, 49.8093056416248},\n                {\"Apr\", 62, 37.3065749226828},\n                {\"May\", 53, 34.4312192530766},\n                {\"Jun\", 31.8933622049831, 69.7834561753736},\n                {\"Jul\", 41.7930895085093, 63.9418103906982},\n                {\"Aug\", 73, 57.4049534494926},\n                {\"Sep\", 49.8773891668518, 33},\n                {\"Oct\", 50, 74},\n                {\"Nov\", 54.7658428630216, 22.9587876597096},\n                {\"Dec\", 32, 54},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C13\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Area Chart\");\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.LineStacked100Chart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineStacked100, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C5\").setValue(new Object[][]\n                {\n                        {12, 22, 27},\n                        {45, 52, 25},\n                        {58, 35, 58},\n                        {21, 37, 43},\n                        {44, 45, 28}\n                });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C5\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Line Stacked 100 Chart\");\n        shape.getChart().getSeriesCollection().get(0).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(1).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(2).getFormat().getLine().setWeight(2.25);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.Stock_VolumeOpenHighLowClose": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.StockVOHLC, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:F23\").setValue(new Object[][]{\n                {null, \"Volume\", \"Open\", \"High\", \"Low\", \"Close\"},\n                {new GregorianCalendar(2019, 8, 1), 26085, 103.46, 105.76, 92.38, 100.94},\n                {new GregorianCalendar(2019, 8, 2), 52314, 100.26, 102.45, 90.14, 93.45},\n                {new GregorianCalendar(2019, 8, 3), 70308, 98.05, 102.11, 85.01, 99.89},\n                {new GregorianCalendar(2019, 8, 4), 33401, 100.32, 106.01, 94.04, 99.45},\n                {new GregorianCalendar(2019, 8, 5), 87500, 99.74, 108.23, 98.16, 104.33},\n                {new GregorianCalendar(2019, 8, 8), 33756, 92.11, 107.7, 91.02, 102.17},\n                {new GregorianCalendar(2019, 8, 9), 65737, 107.8, 110.36, 101.62, 110.07},\n                {new GregorianCalendar(2019, 8, 10), 45668, 107.56, 115.97, 106.89, 112.39},\n                {new GregorianCalendar(2019, 8, 11), 47815, 112.86, 120.32, 112.15, 117.52},\n                {new GregorianCalendar(2019, 8, 12), 76759, 115.02, 122.03, 114.67, 114.75},\n                {new GregorianCalendar(2019, 8, 15), 23492, 108.53, 120.46, 106.21, 116.85},\n                {new GregorianCalendar(2019, 8, 16), 56127, 114.97, 118.08, 113.55, 116.69},\n                {new GregorianCalendar(2019, 8, 17), 81142, 127.14, 128.23, 110.91, 117.25},\n                {new GregorianCalendar(2019, 8, 18), 46384, 118.89, 120.55, 108.09, 112.52},\n                {new GregorianCalendar(2019, 8, 19), 51005, 105.57, 112.58, 105.42, 109.12},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:F23\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Stock Volume-Open-High-Low-Close Chart\");\n        IAxis valueAxis = shape.getChart().getAxes().item(AxisType.Value);\n        IAxis categoryAxis = shape.getChart().getAxes().item(AxisType.Category);\n        IAxis valueSecondaryAxis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Secondary);\n\n        valueAxis.setMinimumScale(0);\n        valueAxis.setMaximumScale(150000);\n        valueAxis.setMajorUnit(30000);\n\n        categoryAxis.setCategoryType(CategoryType.CategoryScale);\n        categoryAxis.setTickLabelSpacing(5);\n\n        valueSecondaryAxis.setMajorUnit(40);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.XYScatterSmoothWithMarkers": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.XYScatterSmooth, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:B5\").setValue(new Object[][]{\n                {4, 2},\n                {6, 1},\n                {1, 2},\n                {7, 4},\n                {4, 4},\n        });\n        worksheet.getRange(\"A7:B11\").setValue(new Object[][]{\n                {9, 5},\n                {7, 8},\n                {9, 8},\n                {5, 9},\n                {2, 4},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B5\"), RowCol.Columns);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A7:B11\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Scatter with Smooth Lines and Markers\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.AreaStacked100": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.AreaStacked100, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C13\").setValue(new Object[][]{\n                {0, 59.18, 27.14},\n                {44.64, 52.22, 25.08},\n                {45.21, 49.80, 57.99},\n                {24.32, 37.30, 42.73},\n                {58.34, 34.43, 28.34},\n                {31.89, 69.78, 46.88},\n                {41.79, 63.94, 56.24},\n                {67.94, 57.40, 27.78},\n                {49.87, 48.26, 52.06},\n                {62.39, 67.43, 33.33},\n                {54.76, 22.95, 50.36},\n                {28.33, 36.60, 36.61},\n                {22.77, 55.65, 65.64},\n                {20.34, 49.35, 45.60},\n                {32.10, 47.60, 20.62},\n                {26.37, 63.00, 53.97},\n                {35, 75, 60}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C13\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Area Stacked100 Chart\");\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.PieChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.Pie, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B4\").setValue(new Object[][]{\n                {\"Blue\", 1},\n                {\"Red\", 2},\n                {\"Green\", 3},\n                {\"Purple\", 4},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B4\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Pie Chart\");\n        shape.getChart().getLegend().setPosition(LegendPosition.Right);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.BarStackedChart": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.BarStacked, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C4\").setValue(new Object[][]{\n                {103, 121, 109},\n                {56, 94, 115},\n                {116, 89, 99},\n                {55, 93, 70}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C4\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Bar Stacked Chart\");\n        shape.getChart().getLegend().setPosition(LegendPosition.Left);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.ColumnStackedChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnStacked, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C6\").setValue(new Object[][]{\n                {103, 121, 109},\n                {56, 94, 115},\n                {116, 89, 99},\n                {55, 93, 70},\n                {114, 114, 83},\n                {125, 138, 136}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C6\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Column Stacked Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.BarStacked100Chart": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.BarStacked100, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B5\").setValue(new Object[][]{\n                {1, 5},\n                {2, 4},\n                {3, 3},\n                {4, 2},\n                {4, 1}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B5\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Bar Stacked 100 Chart\");\n        shape.getChart().getLegend().setPosition(LegendPosition.Left);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.ColumnClusteredChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D2\").setValue(new Object[][]{\n                {100, 200, 300, 400},\n                {100, 200, 300, 400}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D2\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Column Clustered Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.XYScatterLinesChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.XYScatterLines, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:B8\").setValue(new Object[][]{\n                {75, 250},\n                {50, 125},\n                {25, 375},\n                {75, 250},\n                {50, 875},\n                {25, 625},\n                {75, 750},\n                {125, 500},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B8\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Scatter with Straight Lines and Markers Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.Stock_OpenHighLowCloseStock": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.StockOHLC, 350, 20, 360, 220);\n        worksheet.getRange(\"A1:E17\").setValue(new Object[][]{\n                {null, \"Open\", \"High\", \"Low\", \"Close\"},\n                {new GregorianCalendar(2019, 8, 1), 103.46, 105.76, 92.38, 100.94},\n                {new GregorianCalendar(2019, 8, 2), 100.26, 102.45, 90.14, 93.45},\n                {new GregorianCalendar(2019, 8, 3), 98.05, 102.11, 85.01, 99.89},\n                {new GregorianCalendar(2019, 8, 4), 100.32, 106.01, 94.04, 99.45},\n                {new GregorianCalendar(2019, 8, 5), 99.74, 108.23, 98.16, 104.33},\n                {new GregorianCalendar(2019, 8, 8), 92.11, 107.7, 91.02, 102.17},\n                {new GregorianCalendar(2019, 8, 9), 107.8, 110.36, 101.62, 110.07},\n                {new GregorianCalendar(2019, 8, 10), 107.56, 115.97, 106.89, 112.39},\n                {new GregorianCalendar(2019, 8, 11), 112.86, 120.32, 112.15, 117.52},\n                {new GregorianCalendar(2019, 8, 12), 115.02, 122.03, 114.67, 114.75},\n                {new GregorianCalendar(2019, 8, 15), 108.53, 120.46, 106.21, 116.85},\n                {new GregorianCalendar(2019, 8, 16), 114.97, 118.08, 113.55, 116.69},\n                {new GregorianCalendar(2019, 8, 17), 127.14, 128.23, 110.91, 117.25},\n                {new GregorianCalendar(2019, 8, 18), 118.89, 120.55, 108.09, 112.52},\n                {new GregorianCalendar(2019, 8, 19), 105.57, 112.58, 105.42, 109.12},\n                {new GregorianCalendar(2019, 8, 22), 110.23, 115.23, 97.25, 101.56},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:E17\"), RowCol.Columns);\n        //set chart title\n        shape.getChart().getChartTitle().setText(\"Open-High-Low-Close Stock Chart\");\n\n        IAxis valueAxis = shape.getChart().getAxes().item(AxisType.Value);\n        IAxis categoryAxis = shape.getChart().getAxes().item(AxisType.Category);\n        //config value axis\n        valueAxis.setMinimumScale(80);\n        valueAxis.setMaximumScale(140);\n        valueAxis.setMajorUnit(15);\n        //config category axis\n        categoryAxis.setCategoryType(CategoryType.CategoryScale);\n        categoryAxis.setMajorTickMark(TickMark.Outside);\n        categoryAxis.setTickMarkSpacing(5);\n        categoryAxis.setTickLabelSpacing(5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.LineChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C7\").setValue(new Object[][]{\n                {0, 59.18, 27.14},\n                {44.64, 52.22, 25.08},\n                {45.21, 49.80, 57.99},\n                {24.32, 37.30, 42.73},\n                {58.34, 34.43, 28.34},\n                {31.89, 69.78, 46.88},\n                {41.79, 63.94, 56.24}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C7\"), RowCol.Columns);\n        //set series lines style\n        shape.getChart().getSeriesCollection().get(0).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(1).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(2).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getChartTitle().setText(\"Line Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.Stock_VolumeHighLowCloseStock": "\n\t\t\n\t\tIWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.StockVHLC, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:E17\").setValue(new Object[][] {\n        \t{ null, \"Volume\", \"High\", \"Low\", \"Close\" },\n            { new GregorianCalendar(2019, 8, 1), 26085,  105.76, 92.38, 100.94 },\n            { new GregorianCalendar(2019, 8, 2), 52314,  102.45, 90.14, 93.45 },\n            { new GregorianCalendar(2019, 8, 3), 70308, 102.11, 85.01, 99.89 },\n            { new GregorianCalendar(2019, 8, 4), 33401,  106.01, 94.04, 99.45 },\n            { new GregorianCalendar(2019, 8, 5), 87500,  108.23, 98.16, 104.33 },\n            { new GregorianCalendar(2019, 8, 8), 33756,  107.7, 91.02, 102.17 },\n            { new GregorianCalendar(2019, 8, 9), 65737,  110.36, 101.62, 110.07 },\n            { new GregorianCalendar(2019, 8, 10), 45668, 115.97, 106.89, 112.39 },\n            { new GregorianCalendar(2019, 8, 11), 47815, 120.32, 112.15, 117.52 },\n            { new GregorianCalendar(2019, 8, 12), 76759, 122.03, 114.67, 114.75 },\n            { new GregorianCalendar(2019, 8, 15), 23492, 120.46, 106.21, 116.85 },\n            { new GregorianCalendar(2019, 8, 16), 56127, 118.08, 113.55, 116.69 },\n            { new GregorianCalendar(2019, 8, 17), 81142, 128.23, 110.91, 117.25 },\n            { new GregorianCalendar(2019, 8, 18), 46384, 120.55, 108.09, 112.52 },\n            { new GregorianCalendar(2019, 8, 19), 51005, 112.58, 105.42, 109.12 },\n            { new GregorianCalendar(2019, 8, 22), 35223, 115.23, 97.25, 101.56 },\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:E17\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Volume-High-Low-Close Stock Chart\");\n        shape.getChart().getLineGroups().get(0).getHiLoLines().getFormat().getLine().getColor().setRGB(Color.GetBlack());\n        IAxis valueAxis = shape.getChart().getAxes().item(AxisType.Value);\n        IAxis categoryAxis = shape.getChart().getAxes().item(AxisType.Category);\n        IAxis valueSecondaryAxis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Secondary);\n        ISeries series_close = shape.getChart().getSeriesCollection().get(3);\n        //config value axis\n        valueAxis.setMinimumScale(0);\n        valueAxis.setMaximumScale(150000);\n        valueAxis.setMajorUnit(30000);\n        //config category axis\n        categoryAxis.setCategoryType(CategoryType.CategoryScale);\n        categoryAxis.setMajorTickMark(TickMark.Outside);\n        categoryAxis.setTickLabelSpacing(4);\n        //config secondary value axis\n        valueSecondaryAxis.setMinimumScale(0);\n        valueSecondaryAxis.setMaximumScale(150);\n        valueSecondaryAxis.setMajorUnit(30);\n        //config marker style\n        series_close.getMarkerFormat().getFill().getColor().setRGB(Color.GetOrange());\n        series_close.setMarkerStyle(MarkerStyle.Square);\n\t",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.Stock_HighLowCloseStockChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.StockHLC, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:D17\").setValue(new Object[][]{\n                {null, \"High\", \"Low\", \"Close\"},\n                {new GregorianCalendar(2019, 8, 1), 105.76, 92.38, 100.94},\n                {new GregorianCalendar(2019, 8, 2), 102.45, 90.14, 93.45},\n                {new GregorianCalendar(2019, 8, 3), 102.11, 85.01, 99.89},\n                {new GregorianCalendar(2019, 8, 4), 106.01, 94.04, 99.45},\n                {new GregorianCalendar(2019, 8, 5), 108.23, 98.16, 104.33},\n                {new GregorianCalendar(2019, 8, 8), 107.7, 91.02, 102.17},\n                {new GregorianCalendar(2019, 8, 9), 110.36, 101.62, 110.07},\n                {new GregorianCalendar(2019, 8, 10), 115.97, 106.89, 112.39},\n                {new GregorianCalendar(2019, 8, 11), 120.32, 112.15, 117.52},\n                {new GregorianCalendar(2019, 8, 12), 122.03, 114.67, 114.75},\n                {new GregorianCalendar(2019, 8, 15), 120.46, 106.21, 116.85},\n                {new GregorianCalendar(2019, 8, 16), 118.08, 113.55, 116.69},\n                {new GregorianCalendar(2019, 8, 17), 128.23, 110.91, 117.25},\n                {new GregorianCalendar(2019, 8, 18), 120.55, 108.09, 112.52},\n                {new GregorianCalendar(2019, 8, 19), 112.58, 105.42, 109.12},\n                {new GregorianCalendar(2019, 8, 22), 115.23, 97.25, 101.56},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D17\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"High-Low-Close Stock Chart\");\n        IAxis valueAxis = shape.getChart().getAxes().item(AxisType.Value);\n        IAxis categoryAxis = shape.getChart().getAxes().item(AxisType.Category);\n        ISeries series_close = shape.getChart().getSeriesCollection().get(2);\n        //config value axis\n        valueAxis.setMinimumScale(80);\n        valueAxis.setMaximumScale(140);\n        valueAxis.setMajorUnit(15);\n        //config category axis\n        categoryAxis.setCategoryType(CategoryType.CategoryScale);\n        categoryAxis.setMajorTickMark(TickMark.Outside);\n        categoryAxis.setTickLabelSpacingIsAuto(false);\n        categoryAxis.setTickLabelSpacing(5);\n        series_close.setMarkerStyle(MarkerStyle.Square);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.XYScatterChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.XYScatter, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:D7\").setValue(new Object[][]{\n                {\"Blue\", null, \"Red\", null},\n                {55, 964, 67, 475},\n                {20, 825, 10, 163},\n                {77, 840, 87, 224},\n                {182, 596, 46, 196},\n                {190, 384, 100, 377},\n                {140, 503, 92, 47},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B7\"), RowCol.Columns);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"C1:D7\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Scatter Chart\");\n        //config markers style\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        ISeries series2 = shape.getChart().getSeriesCollection().get(1);\n        series1.setMarkerStyle(MarkerStyle.Square);\n        series1.setMarkerSize(10);\n        series2.setMarkerSize(10);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.XYScatterSmooth": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.XYScatterSmoothNoMarkers, 350, 20, 360, 230);\n        worksheet.getRange(\"A1:B5\").setValue(new Object[][]{\n                {4, 2},\n                {6, 1},\n                {1, 2},\n                {7, 4},\n                {4, 4},\n        });\n        worksheet.getRange(\"A7:B11\").setValue(new Object[][]{\n                {9, 5},\n                {7, 8},\n                {9, 8},\n                {5, 9},\n                {2, 4},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B5\"), RowCol.Columns);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A7:B11\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Scatter with Smooth Lines Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.Pie_DoughnutChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.Doughnut, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B6\").setValue(new Object[][]{\n                {\"S1\", \"S2\"},\n                {10, 25},\n                {51, 36},\n                {52, 85},\n                {22, 65},\n                {23, 69},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B6\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Area Chart\");\n        shape.getChart().getChartGroups().get(0).setDoughnutHoleSize(50);\n        shape.getChart().getSeriesCollection().get(0).setHasDataLabels(true);\n        shape.getChart().getSeriesCollection().get(1).setHasDataLabels(true);\n        shape.getChart().getSeriesCollection().get(1).setExplosion(2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.BarClusteredChart": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.BarClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D2\").setValue(new Object[][]{\n                {100, 200, 300, 400},\n                {100, 200, 300, 400}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D2\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Bar Clustered Chart\");\n        shape.getChart().getLegend().setPosition(LegendPosition.Left);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.ColumnStacked100Chart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnStacked100, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B6\").setValue(new Object[][]{\n                {1, 5},\n                {2, 4},\n                {3, 3},\n                {4, 2},\n                {5, 1},\n                {5, 3}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B6\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Column Stacked 100 Chart\");\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.AreaStackedChart": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.AreaStacked, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C13\").setValue(new Object[][]{\n                {0, 59.18, 27.14},\n                {44.64, 52.22, 25.08},\n                {45.21, 49.80, 57.99},\n                {24.32, 37.30, 42.73},\n                {58.34, 34.43, 28.34},\n                {31.89, 69.78, 46.88},\n                {41.79, 63.94, 56.24},\n                {67.94, 57.40, 27.78},\n                {49.87, 48.26, 52.06},\n                {62.39, 67.43, 33.33},\n                {54.76, 22.95, 50.36},\n                {28.33, 36.60, 36.61},\n                {22.77, 55.65, 65.64},\n                {20.34, 49.35, 45.60},\n                {32.10, 47.60, 20.62},\n                {26.37, 63.00, 53.97},\n                {35, 75, 60}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C13\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Area Stacked Chart\");\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.LineMarkerStacked100Chart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineMarkersStacked100, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C5\").setValue(new Object[][]{\n                {12, 22, 27},\n                {45, 52, 25},\n                {58, 35, 58},\n                {21, 37, 43},\n                {44, 45, 28}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C5\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Line Marker Stacked 100 Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.LineStackedChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineStacked, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C7\").setValue(new Object[][]{\n                {0, 59.18, 27.14},\n                {44.64, 52.22, 25.08},\n                {45.21, 49.80, 57.99},\n                {24.32, 37.30, 42.73},\n                {58.34, 34.43, 28.34},\n                {31.89, 69.78, 46.88},\n                {41.79, 63.94, 56.24}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C7\"), RowCol.Columns);\n        shape.getChart().getSeriesCollection().get(0).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(1).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(2).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getChartTitle().setText(\"Line Stacked Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.LineMarkerStackedChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineMarkersStacked, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C7\").setValue(new Object[][]{\n                {0, 59.18, 27.14},\n                {44.64, 52.22, 25.08},\n                {45.21, 49.80, 57.99},\n                {24.32, 37.30, 42.73},\n                {58.34, 34.43, 28.34},\n                {31.89, 69.78, 46.88},\n                {41.79, 63.94, 56.24}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C7\"), RowCol.Columns);\n        shape.getChart().getSeriesCollection().get(0).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(1).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getSeriesCollection().get(2).getFormat().getLine().setWeight(2.25);\n        shape.getChart().getChartTitle().setText(\"Line Marker Stacked Chart\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartgallery.CombinationChart1": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B13\").setValue(new Object[][]{\n                {\"Blue Column\", \"Red Line\"},\n                {75, 20},\n                {149, 50},\n                {105, 30},\n                {55, 80},\n                {121, 40},\n                {76, 110},\n                {128, 50},\n                {114, 140},\n                {75, 60},\n                {105, 170},\n                {145, 70},\n                {110, 100}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B13\"), RowCol.Columns);\n        shape.getChart().getChartTitle().setText(\"Combination Chart\");\n        //change series type\n        ISeries series2 = shape.getChart().getSeriesCollection().get(1);\n        series2.setChartType(ChartType.LineMarkers);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddBoxWhiskerChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:D16\").setValue(new Object[][]{\n            {\"Course\", \"SchoolA\", \"SchoolB\", \"SchoolC\"},\n            {\"English\", 63, 53, 45},\n            {\"Physics\", 61, 55, 65},\n            {\"English\", 63, 50, 65},\n            {\"Math\", 62, 51, 64},\n            {\"English\", 46, 53, 66},\n            {\"English\", 58, 56, 67},\n            {\"Math\", 60, 51, 67},\n            {\"Math\", 62, 53, 66},\n            {\"English\", 63, 54, 64},\n            {\"English\", 63, 52, 67},\n            {\"Physics\", 60, 56, 64},\n            {\"English\", 60, 56, 67},\n            {\"Math\", 61, 56, 45},\n            {\"Math\", 63, 58, 64},\n            {\"English\", 59, 54, 65}\n        });\n\n\t\t//Create a box&whisker chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.BoxWhisker, 300, 20, 300, 200);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D16\"));\n\n        //Config value axis's scale.\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value, AxisGroup.Primary);\n        value_axis.setMinimumScale(40);\n        value_axis.setMaximumScale(70);\n\n        //Config the display of box&whisker plot.  \n        ISeries series = shape.getChart().getSeriesCollection().get(0);\n        series.setShowInnerPoints(true);\n        series.setShowOutlierPoints(false);\n        series.setShowMeanMarkers(false);\n        series.setShowMeanLine(true);\n        series.setQuartileCalculationInclusiveMedian(true);\n\t",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddSunburstChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:D16\").setValue(new Object[][]{\n        \t {\"Quarter\", \"Month\", \"Week\", \"Output\"},\n             {\"1st\", \"Jan\", null, 3.5},\n             {null, \"Feb\", \"Week1\", 1.2},\n             {null, null, \"Week2\", 0.8},\n             {null, null, \"Week3\", 0.6},\n             {null, null, \"Week4\", 0.5},\n             {null, \"Mar\", null, 1.7 },\n             {\"2st\", \"Apr\", null, 1.1},\n             {null, \"May\", null, 0.8},\n             {null, \"Jun\", null, 0.3},\n             {\"3st\", \"July\", null, 0.7},\n             {null, \"Aug\", null, 0.6},\n             {null, \"Sept\", null, 0.1},\n             {\"4st\", \"Oct\", null, 0.5},\n             {null, \"Nov\", null, 0.4},\n             {null, \"Dec\", null, 0.3},\n        });\n\n        //Create a sunburst chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Sunburst, 300, 20, 200, 200);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D16\"));\n\n        //Modify chart title text.\n        shape.getChart().getChartTitle().setText(\"Annual Report\");\n\t",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddParetoChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:B11\").setValue(new Object[][]{\n        \t  {\"Complaint\", \"Count\"},\n              {\"Too noisy\", 27},\n              {\"Overpriced\", 789},\n              {\"Food is tasteless\", 65},\n              {\"Food is not fresh\", 9},\n              {\"Food is too salty\", 15},\n              {\"Not clean\", 30},\n              {\"Unfriendly staff\", 12},\n              {\"Wait time\", 109},\n              { \"No atmosphere\", 45},\n              {\"Small portions\", 621 }\n        });\n        worksheet.getRange(\"A:A\").getColumns().autoFit();\n\n        //Create a pareto chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Pareto, 300, 20, 300, 200);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B11\"));\n\n        //Sets bins type by size.\n        shape.getChart().getChartGroups().get(0).setBinsType(BinsType.BinsTypeBinSize);\n        shape.getChart().getChartGroups().get(0).setBinWidthValue(300);\n\n        //Set underflow bin value.\n        shape.getChart().getChartGroups().get(0).setBinsUnderflowEnabled(true);\n        shape.getChart().getChartGroups().get(0).setBinsOverflowValue(50);\n\t",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddTreeMapChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:D16\").setValue(new Object[][]{\n        \t {\"Quarter\", \"Month\", \"Week\", \"Output\"},\n             {\"1st\", \"Jan\", null, 3.5},\n             {null, \"Feb\", \"Week1\", 1.2},\n             {null, null, \"Week2\", 0.8},\n             {null, null, \"Week3\", 0.6},\n             {null, null, \"Week4\", 0.5},\n             {null, \"Mar\", null, 1.7 },\n             {\"2st\", \"Apr\", null, 1.1},\n             {null, \"May\", null, 0.8},\n             {null, \"Jun\", null, 0.3},\n             {\"3st\", \"July\", null, 0.7},\n             {null, \"Aug\", null, 0.6},\n             {null, \"Sept\", null, 0.1},\n             {\"4st\", \"Oct\", null, 0.5},\n             {null, \"Nov\", null, 0.4},\n             {null, \"Dec\", null, 0.3},\n        });\n\n        //Create a treemap chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Treemap, 300, 20, 300, 200);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D16\"));\n        \n        //Set the parent data labels are displayed as banners.\n        shape.getChart().getSeriesCollection().get(0).setParentDataLabelOption(ParentDataLabelOptions.Banner);\n\n        //Modify chart title text.\n        shape.getChart().getChartTitle().setText(\"Annual Report\");\n\t",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddWaterfallChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:B8\").setValue(new Object[][]{\n        \t {\"Starting Amt\", 130},\n             {\"Measurement 1\", 25},\n             {\"Measurement 2\", -75},\n             {\"Subtotal\", 80},\n             {\"Measurement 3\", 45},\n             {\"Measurement 4\", -65},\n             {\"Measurement 5\", 80},\n             {\"Total\", 140}\n        });\n        worksheet.getRange(\"A:A\").getColumns().autoFit();\n\n        //Create a waterfall chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Waterfall, 300, 20, 300, 250);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B8\"));\n\n        //Set subtotal&total points.\n        IPoints points = shape.getChart().getSeriesCollection().get(0).getPoints();\n        points.get(3).setIsTotal(true);\n        points.get(7).setIsTotal(true);\n\n        //Connector lines are not shown.\n        ISeries series = shape.getChart().getSeriesCollection().get(0);\n        series.setShowConnectorLines(false);\n        \n        //Modify the fill color of the first legend entry.\n        ILegendEntries legendEntries = shape.getChart().getLegend().getLegendEntries();\n        legendEntries.get(0).getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent6);\n\t",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddFunnelChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:B7\").setValue(new Object[][]{\n        \t{\"Stage\", \"Amount\"},\n            {\"Prospects\", 500},\n            {\"Qualified prospects\", 425},\n            {\"Needs analysis\", 200},\n            {\"Price quotes\", 150},\n            {\"Negotiations\", 100},\n            {\"Closed sales\", 90}\n        });\n        worksheet.getRange(\"A:A\").getColumns().autoFit();\n\n        //Create a funnel chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Funnel, 300, 20, 300, 200);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B7\"));\n\n        //Set the axis invisible.\n        IAxis axis = shape.getChart().getAxes().item(AxisType.Category, AxisGroup.Primary);\n        axis.setVisible(false);\n\t",
  "com.grapecity.documents.excel.examples.features.charts.newcharts.AddHistogramChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        worksheet.getRange(\"A1:B11\").setValue(new Object[][]{\n        \t  {\"Complaint\", \"Count\"},\n              {\"Too noisy\", 27},\n              {\"Overpriced\", 789},\n              {\"Food is tasteless\", 65},\n              {\"Food is not fresh\", 9},\n              {\"Food is too salty\", 15},\n              {\"Not clean\", 30},\n              {\"Unfriendly staff\", 12},\n              {\"Wait time\", 109},\n              { \"No atmosphere\", 45},\n              {\"Small portions\", 621 }\n        });\n        worksheet.getRange(\"A:A\").getColumns().autoFit();\n\n        //Create a histogram chart.\n        IShape shape = worksheet.getShapes().addChart(ChartType.Histogram, 300, 20, 300, 200);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B11\"));\n\n        //Sets bins type by count.\n        shape.getChart().getChartGroups().get(0).setBinsType(BinsType.BinsTypeBinCount);\n        shape.getChart().getChartGroups().get(0).setBinsCountValue(3);\n\n        //Set overflow bin value\n        shape.getChart().getChartGroups().get(0).setBinsOverflowEnabled(true);\n        shape.getChart().getChartGroups().get(0).setBinsOverflowValue(500);\n\t",
  "com.grapecity.documents.excel.examples.features.charts.chartlines.CreateTrendline": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n\n        series1.getTrendlines().add();\n        series1.getTrendlines().get(0).setType(TrendlineType.Linear);\n        series1.getTrendlines().get(0).setForward(1);\n        series1.getTrendlines().get(0).setBackward(0.5);\n        series1.getTrendlines().get(0).setIntercept(2.5);\n        series1.getTrendlines().get(0).setDisplayEquation(true);\n        series1.getTrendlines().get(0).setDisplayRSquared(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartlines.CreateHiLoLine": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        shape.getChart().getLineGroups().get(0).setHasHiLoLines(true);\n        shape.getChart().getLineGroups().get(0).getHiLoLines().getFormat().getLine().getColor().setRGB(Color.GetLightPink());\n        shape.getChart().getLineGroups().get(0).getHiLoLines().getFormat().getLine().setWeight(3);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartlines.CreateSeriesLine": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnStacked, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        shape.getChart().getColumnGroups().get(0).setHasSeriesLines(true);\n        shape.getChart().getColumnGroups().get(0).getSeriesLines().getFormat().getLine().getColor().setRGB(Color.GetLightPink());\n        shape.getChart().getColumnGroups().get(0).getSeriesLines().getFormat().getLine().setWeight(3);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartlines.CreateConnectorLine": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.PieOfPie, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //connector line for pie of pie chart\n        shape.getChart().getPieGroups().get(0).setHasSeriesLines(true);\n        shape.getChart().getPieGroups().get(0).getSeriesLines().getFormat().getLine().getColor().setRGB(Color.GetOrange());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartlines.CreateUpDownBars": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config up down bars for line chart.\n        shape.getChart().getLineGroups().get(0).setHasUpDownBars(true);\n        shape.getChart().getLineGroups().get(0).getUpBars().getFormat().getFill().getColor().setRGB(Color.FromArgb(199, 235, 217));\n        shape.getChart().getLineGroups().get(0).getDownBars().getFormat().getFill().getColor().setRGB(Color.GetLightPink());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartlines.CreateDropLine": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        shape.getChart().getLineGroups().get(0).setHasDropLines(true);\n        shape.getChart().getLineGroups().get(0).getDropLines().getFormat().getLine().getColor().setRGB(Color.GetLightPink());\n        shape.getChart().getLineGroups().get(0).getDropLines().getFormat().getLine().setWeight(3);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.markers.ConfigMarkersFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineMarkers, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B6\").setValue(new Object[][]{\n                {null, \"S1\"},\n                {\"Item1\", 10},\n                {\"Item2\", -51},\n                {\"Item3\", 52},\n                {\"Item4\", 22},\n                {\"Item5\", 40}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n\n        //config line markers style\n        series1.getMarkerFormat().getFill().getColor().setRGB(Color.GetCornflowerBlue());\n        series1.getMarkerFormat().getLine().setStyle(LineStyle.ThickThin);\n        series1.getMarkerFormat().getLine().getColor().setRGB(Color.GetLightGreen());\n        series1.getMarkerFormat().getLine().setWeight(3);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.markers.ConfigMarkerStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.LineMarkers, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B6\").setValue(new Object[][]{\n                {null, \"S1\"},\n                {\"Item1\", 10},\n                {\"Item2\", -51},\n                {\"Item3\", 52},\n                {\"Item4\", 22},\n                {\"Item5\", 40}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n\n        //config line markers style\n        series1.setMarkerStyle(MarkerStyle.Square);\n        series1.setMarkerSize(10);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigValueAxesFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n\n        //set value axis's format.\n        value_axis.getFormat().getLine().getColor().setRGB(Color.FromArgb(91, 155, 213));\n        value_axis.getFormat().getLine().setWeight(2);\n        value_axis.getFormat().getLine().setStyle(LineStyle.Single);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.SetAxisTickMark": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n        category_axis.getFormat().getLine().getColor().setRGB(Color.GetGreen());\n        category_axis.getFormat().getLine().setWeight(1.5);\n        category_axis.setMajorTickMark(TickMark.Inside);\n        category_axis.setMinorTickMark(TickMark.Cross);\n        category_axis.setTickMarkSpacing(2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigDisplayUnitLabel": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        value_axis.setDisplayUnit(DisplayUnit.Custom);\n        value_axis.setDisplayUnitCustom(100);\n        value_axis.setHasDisplayUnitLabel(true);\n        value_axis.getDisplayUnitLabel().getFont().getColor().setRGB(Color.GetCornflowerBlue());\n        value_axis.getDisplayUnitLabel().getFormat().getFill().getColor().setRGB(Color.GetOrange());\n        value_axis.getDisplayUnitLabel().getFormat().getLine().getColor().setRGB(Color.GetCornflowerBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigGridlines": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        value_axis.setHasMajorGridlines(true);\n        value_axis.setHasMinorGridlines(true);\n        value_axis.getMajorGridlines().getFormat().getLine().getColor().setRGB(Color.GetGray());\n        value_axis.getMajorGridlines().getFormat().getLine().setWeight(1);\n        value_axis.getMinorGridlines().getFormat().getLine().getColor().setRGB(Color.GetLightGray());\n        value_axis.getMinorGridlines().getFormat().getLine().setWeight(0.75);\n        value_axis.setMajorUnit(40);\n        value_axis.setMinorUnit(8);\n        value_axis.getMinorGridlines().getFormat().getLine().setStyle(LineStyle.ThickThin);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigCategoryAxesFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Line, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n\n        //set category axis's format.\n        category_axis.getFormat().getFill().getColor().setObjectThemeColor(ThemeColor.Accent1);\n        category_axis.getFormat().getLine().getColor().setRGB(Color.GetLightSkyBlue());\n        category_axis.getFormat().getLine().setWeight(3);\n        category_axis.getFormat().getLine().setStyle(LineStyle.Single);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigValueAxisUnits": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, 36, 27},\n                {\"Item3\", 52, 90, -30},\n                {\"Item4\", 22, 65, 50},\n                {\"Item5\", 23, 55, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n\n        value_axis.setMaximumScale(100);\n        value_axis.setMinimumScale(-100);\n        value_axis.setMajorUnit(30);\n        value_axis.setMinorUnit(6);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigTickMarkLabel": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n\n        //config tick label's format\n        category_axis.setTickLabelPosition(TickLabelPosition.NextToAxis);\n        category_axis.setTickLabelSpacing(2);\n        category_axis.getTickLabels().getFont().getColor().setRGB(Color.GetDarkOrange());\n        category_axis.getTickLabels().getFont().setSize(12);\n        category_axis.getTickLabels().setNumberFormat(\"#,##0.00\");\n        value_axis.getTickLabels().setNumberFormat(\"#,##0;[Red]#,##0\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.SetAxisScaleType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D5\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 4, 25, 7},\n                {\"Item2\", 15, -10, 18},\n                {\"Item3\", 45, 90, 20},\n                {\"Item4\", 8, 20, 11}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D5\"), RowCol.Columns, true, true);\n\n        IAxis value_axis = shape.getChart().getAxes().item(AxisType.Value);\n        value_axis.setScaleType(ScaleType.Logarithmic);\n        value_axis.setLogBase(5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigCategoryAxisUnits": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A2:A6\").setNumberFormat(\"m/d/yyyy\");\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]\n                {\n                        {null, \"S1\", \"S2\", \"S3\"},\n                        {new GregorianCalendar(2015, 9, 7), 10, 25, 25},\n                        {new GregorianCalendar(2015, 9, 24), 51, 36, 27},\n                        {new GregorianCalendar(2015, 10, 8), 52, 85, 30},\n                        {new GregorianCalendar(2015, 10, 25), 22, 65, 65},\n                        {new GregorianCalendar(2015, 11, 10), 23, 69, 69}\n                });\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n        // DateTime(2015, 12, 20)\n        category_axis.setMaximumScale(DateInfo.ToOADate(new GregorianCalendar(2015, 11, 20)));\n        // DateTime(2015, 10, 1)\n        category_axis.setMinimumScale(DateInfo.ToOADate(new GregorianCalendar(2015, 9, 1)));\n        category_axis.setBaseUnit(TimeUnit.Months);\n        category_axis.setMajorUnitScale(TimeUnit.Months);\n        category_axis.setMajorUnit(1);\n        category_axis.setMinorUnitScale(TimeUnit.Days);\n        category_axis.setMinorUnit(15);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.axes.ConfigAxisTitle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", 51, 36, 27},\n                {\"Item3\", 52, 85, 30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IAxis category_axis = shape.getChart().getAxes().item(AxisType.Category);\n\n        //config axis title\n        category_axis.setHasTitle(true);\n        category_axis.getAxisTitle().setText(\"CategoryAxisTitle\");\n        category_axis.getAxisTitle().getFont().setSize(18);\n        category_axis.getAxisTitle().getFont().getColor().setRGB(Color.GetOrange());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.datapoint.ConfigSecondarySection": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.PieOfPie, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        series1.setHasDataLabels(true);\n\n        //config secondary section for pie of pie chart\n        shape.getChart().getChartGroups().get(0).setSplitType(ChartSplitType.SplitByCustomSplit);\n        series1.getPoints().get(0).setSecondaryPlot(true);\n        series1.getPoints().get(1).setSecondaryPlot(false);\n        series1.getPoints().get(2).setSecondaryPlot(true);\n        series1.getPoints().get(3).setSecondaryPlot(false);\n        series1.getPoints().get(4).setSecondaryPlot(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.datapoint.ConfigDataPointFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n\n        //set data point format\n        series1.getPoints().get(2).getFormat().getFill().getColor().setRGB(Color.FromArgb(0, 176, 240));\n        series1.getPoints().get(2).getFormat().getLine().getColor().setRGB(Color.GetBlue());\n        series1.getPoints().get(2).getFormat().getLine().setWeight(1.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.datapoint.ConfigNegativePoint": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n\n        //If it is a negative point, it's color is red.\n        series1.setInvertIfNegative(true);\n        series1.getInvertColor().setObjectThemeColor(ThemeColor.Accent4);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.datalabel.ConfigDataLabelFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B5\").setValue(new Object[][]{\n                {null, \"S1\"},\n                {\"Item1\", -20},\n                {\"Item2\", 30},\n                {\"Item3\", 50},\n                {\"Item3\", 40}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B5\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        series1.setHasDataLabels(true);\n        series1.getDataLabels().setShowSeriesName(true);\n\n        //set series1's all data label's format.\n        series1.getDataLabels().getFormat().getFill().getColor().setRGB(Color.GetPink());\n        series1.getDataLabels().getFormat().getLine().getColor().setRGB(Color.GetGreen());\n        series1.getDataLabels().getFormat().getLine().setWeight(1);\n\n        //set series1's specific data label's format.\n        series1.getDataLabels().get(2).getFormat().getFill().getColor().setRGB(Color.GetLightGreen());\n        series1.getPoints().get(2).getDataLabel().getFormat().getLine().getColor().setRGB(Color.GetGray());\n        series1.getPoints().get(2).getDataLabel().getFormat().getLine().setWeight(2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.datalabel.ConfigDataLabelText": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B5\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\"},\n                {\"Item1\", -20},\n                {\"Item2\", 30},\n                {\"Item3\", 50},\n                {\"Item3\", 40}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B5\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        series1.setHasDataLabels(true);\n\n        //customize data label's text.\n        series1.getDataLabels().setShowCategoryName(true);\n        series1.getDataLabels().setShowSeriesName(true);\n        series1.getDataLabels().setShowLegendKey(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartarea.ConfigChartAreaFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IChartArea chartarea = shape.getChart().getChartArea();\n\n        //Format\n        chartarea.getFormat().getFill().getColor().setRGB(Color.GetLightGray());\n        chartarea.getFormat().getLine().getColor().setRGB(Color.GetMediumSeaGreen());\n        chartarea.getFormat().getLine().setWeight(1.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chartarea.ConfigChartAreaFont": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        IChartArea chartarea = shape.getChart().getChartArea();\n\n        //Font\n        chartarea.getFont().getColor().setRGB(Color.GetMediumSeaGreen());\n        chartarea.getFont().setName(\"Times New Roman\");\n        chartarea.getFont().setSize(12);\n        //rounded corners.\n        chartarea.setRoundedCorners(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.legend.ConfigLegendPositionAndLayout": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -20, 36, 27},\n                {\"Item3\", 52, 70, 30},\n                {\"Item4\", 22, 33, -20},\n                {\"Item5\", 23, 30, 30}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        shape.getChart().setHasLegend(true);\n        ILegend legend = shape.getChart().getLegend();\n        //position.\n        legend.setPosition(LegendPosition.Left);\n        //font.\n        legend.getFont().getColor().setRGB(Color.GetRed());\n        legend.getFont().setItalic(true);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.legend.ConfigLegendEntryFontStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, 36, 27},\n                {\"Item3\", 52, 70, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        shape.getChart().setHasLegend(true);\n        ILegend legend = shape.getChart().getLegend();\n        //config legend entry font style\n        ILegendEntry legendentry = legend.getLegendEntries().get(0);\n        legendentry.getFont().getColor().setRGB(Color.GetRed());\n        legendentry.getFont().setSize(15);\n    ",
  "com.grapecity.documents.excel.examples.features.charts.legend.ConfigLegendFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, 36, 27},\n                {\"Item3\", 52, 70, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        shape.getChart().setHasLegend(true);\n        //config legend font style\n        ILegend legend = shape.getChart().getLegend();\n        legend.getFont().setSize(12);\n        legend.getFont().setName(\"Cooper Black\");\n        //config legend format\n        legend.getFormat().getFill().getColor().setRGB(Color.GetLightGray());\n        legend.getFormat().getLine().getColor().setRGB(Color.GetGray());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.CreateSecondaryAxis": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:C6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\"},\n                {\"Item1\", 10, 25},\n                {\"Item2\", -51, -36},\n                {\"Item3\", 32, 64},\n                {\"Item4\", 44, 80},\n                {\"Item5\", 60, 100}\n        });\n\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:C6\"), RowCol.Columns, true, true);\n        ISeries series2 = shape.getChart().getSeriesCollection().get(1);\n        //add a secondary axis\n        series2.setAxisGroup(AxisGroup.Secondary);\n        series2.setChartType(ChartType.Line);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.ConfigSeriesFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        //set series format.\n        series1.getFormat().getFill().getColor().setRGB(Color.GetMediumSeaGreen());\n        series1.getFormat().getLine().getColor().setRGB(Color.GetGreen());\n        series1.getFormat().getLine().setWeight(1.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.DeleteSeries": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //delete chart series, make series count to 1.\n        shape.getChart().getSeriesCollection().get(2).delete();\n        shape.getChart().getSeriesCollection().get(1).delete();\n        //Chart's series count is 1.\n        int count = shape.getChart().getSeriesCollection().getCount();\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.SetVaryColorForColumnChart": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:B6\").setValue(new Object[][]{\n                {null, \"S1\"},\n                {\"Item1\", 10},\n                {\"Item2\", -51},\n                {\"Item3\", 52},\n                {\"Item4\", 22},\n                {\"Item5\", 23}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:B6\"), RowCol.Columns, true, true);\n        //set vary colors for column chart which only has one series.\n        shape.getChart().getColumnGroups().get(0).setVaryByCategories(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.ExtendSeries": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D4\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 50},\n                {\"Item2\", 15, -36, 40},\n                {\"Item3\", 52, 40, -30},\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D4\"), RowCol.Columns, true, true);\n\n        worksheet.getRange(\"A12:D13\").setValue(new Object[][]{\n                {\"Item5\", 10, 20, -30},\n                {\"Item6\", 20, 40, 80},\n        });\n\n        //add new data point to existing series.\n        shape.getChart().getSeriesCollection().extend(worksheet.getRange(\"A12:D13\"), RowCol.Columns, true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.ConfigBubbleChartLayout": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Bubble, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        series1.setHasDataLabels(true);\n\n        shape.getChart().getXYGroups().get(0).setBubbleScale(150);\n        shape.getChart().getXYGroups().get(0).setSizeRepresents(SizeRepresents.SizeIsArea);\n        shape.getChart().getXYGroups().get(0).setShowNegativeBubbles(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.ChangeSeriesType": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        //Add series\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n        ISeries series1 = shape.getChart().getSeriesCollection().get(0);\n        ISeries series2 = shape.getChart().getSeriesCollection().get(1);\n        //change series2's chart type.\n        series2.setChartType(ChartType.Line);\n        series2.getFormat().getLine().setWeight(2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.series.AddSeries": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.ColumnClustered, 250, 20, 360, 230);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n\n        //Add series\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chart3dformat.ConfigChartSideWall": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Column3D, 250, 20, 350, 250);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config side wall individually.\n        shape.getChart().getSideWall().setThickness(5);\n        shape.getChart().getSideWall().getFormat().getFill().getColor().setRGB(Color.GetLightGreen());\n        shape.getChart().getSideWall().getFormat().getLine().getColor().setRGB(Color.GetLightBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chart3dformat.ConfigChartFloorStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Column3D, 250, 20, 350, 250);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config back wall individually.\n        shape.getChart().getFloor().setThickness(5);\n        shape.getChart().getFloor().getFormat().getFill().getColor().setRGB(Color.GetYellow());\n        shape.getChart().getFloor().getFormat().getLine().getColor().setRGB(Color.GetRed());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chart3dformat.ConfigChartWallStyle": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Column3D, 250, 20, 350, 250);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config back wall and side wall together.\n        shape.getChart().getWalls().setThickness(5);\n        shape.getChart().getWalls().getFormat().getFill().getColor().setRGB(Color.GetLightPink());\n        shape.getChart().getWalls().getFormat().getLine().getColor().setRGB(Color.GetLightBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chart3dformat.ConfigChart3DFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Column3D, 250, 20, 350, 250);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        IChartArea chartarea = shape.getChart().getChartArea();\n        //config 3D chart format\n        chartarea.getFormat().getThreeD().setRotationX(60);\n        chartarea.getFormat().getThreeD().setRotationY(60);\n\n    ",
  "com.grapecity.documents.excel.examples.features.charts.chart3dformat.ConfigChartBackWall": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShape shape = worksheet.getShapes().addChart(ChartType.Column3D, 250, 20, 350, 250);\n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n                {null, \"S1\", \"S2\", \"S3\"},\n                {\"Item1\", 10, 25, 25},\n                {\"Item2\", -51, -36, 27},\n                {\"Item3\", 52, -85, -30},\n                {\"Item4\", 22, 65, 65},\n                {\"Item5\", 23, 69, 69}\n        });\n        shape.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"), RowCol.Columns, true, true);\n\n        //config chart floor\n        shape.getChart().getBackWall().setThickness(5);\n        shape.getChart().getBackWall().getFormat().getFill().getColor().setRGB(Color.GetLightGreen());\n        shape.getChart().getBackWall().getFormat().getLine().getColor().setRGB(Color.GetLightBlue());\n\n    ",
  "com.grapecity.documents.excel.examples.features.picture.PictureDuplicate": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        try {\n            //Create a shape in worksheet\n            IShape picture = worksheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 395, 60);\n\n            //Duplicate picture\n            IShape newPicture = picture.duplicate();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.picture.DeletePicture": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        try {\n            IShape picture = worksheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 100, 100);\n\n            //set picture size.\n            picture.setWidthInPixel(700);\n            picture.setHeightInPixel(120);\n            //config picture layout.\n            picture.getFill().solid();\n            picture.getFill().getColor().setObjectThemeColor(ThemeColor.Accent1);\n\n            //delete picture.\n            picture.delete();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.picture.PictureCopy": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        try {\n            //Create a shape in worksheet, picture's range is Range(\"A2:I6\")\n            IShape picture = worksheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 395, 60);\n            //Range(\"A2:I6\") must contain picture's range, copy a new picture to Range(\"J2:R6\")\n            worksheet.getRange(\"A2:I6\").copy(worksheet.getRange(\"J2\"));\n            //worksheet.getRange(\"A2:I6\").copy(worksheet.getRange(\"J2:R6\"));\n\n            //Cross sheet copy, copy a new shape to worksheet2's Range(\"J2:R6\")\n            //IWorksheet worksheet2 = workbook.getWorksheets().add();\n            //worksheet.getRange(\"A2:I6\").copy(worksheet2.getRange(\"J2\"));\n            //worksheet.getRange(\"A2:I6\").copy(worksheet2.getRange(\"J2:R6\"));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.picture.CreatePicture": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        \n        InputStream stream = this.getResourceStream(\"logo.png\");\n        try {\n            IShape picture = worksheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 790, 120);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.picture.PictureCut": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        try {\n\n            //Create a shape in worksheet, picture's range is getRange(\"A2:I6\")\n            IShape picture = worksheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 395, 60);\n            // getRange(\"A2:I6\"] must contain picture's range, cut a new picture to Range[\"J2:R6\")\n            worksheet.getRange(\"A2:I6\").cut(worksheet.getRange(\"J2\"));\n            //worksheet.getRange(\"A2:I6\"].cut(worksheet.Range[\"J2:R6\"));\n\n            //Cross sheet cut, cut a new shape to worksheet2's getRange(\"J2:R6\")\n            //IWorksheet worksheet2 = workbook.getWorksheets().add();\n            //worksheet.getRange(\"A2:I6\").cut(worksheet2.getRange(\"J2\"));\n            //worksheet.getRange(\"A2:I6\").cut(worksheet2.getRange(\"J2:R6\"));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.ShowSpecificLevel": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:N\").group();\n        worksheet.getRange(\"A:F\").group();\n        worksheet.getRange(\"A:C\").group();\n\n        worksheet.getRange(\"Q:Z\").group();\n        worksheet.getRange(\"Q:T\").group();\n\n        //level 3 and level 4 will be collapsed. level 2 and level 1 expand.\n        worksheet.getOutline().showLevels(0, 2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.ClearOutline": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //1:20 rows' outline level will be 2.\n        worksheet.getRange(\"1:20\").group();\n        //1:10 rows' outline level will be 3.\n        worksheet.getRange(\"1:10\").group();\n\n        //1:20 rows' outline level will be 1.\n        worksheet.getRange(\"1:20\").clearOutline();\n\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.UngroupRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //1:20 rows' outline level will be 2.\n        worksheet.getRange(\"1:20\").group();\n        //1:10 rows' outline level will be 3.\n        worksheet.getRange(\"1:10\").group();\n\n        //1:10 rows' outline level will be 2.\n        worksheet.getRange(\"1:10\").ungroup();\n        //1:20 rows' outline level will be 1.\n        worksheet.getRange(\"1:20\").ungroup();\n\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.CollapseGroup": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //1:20 rows' outline level will be 2.\n        worksheet.getRange(\"1:20\").group();\n        //1:10 rows' outline level will be 3.\n        worksheet.getRange(\"1:10\").group();\n\n        //1:20 rows' outline level will be 1.\n        worksheet.getRange(\"11:11\").setShowDetail(false);\n\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.AddSubtotalAdvanced": "\n\n        IRange targetRange = workbook.getActiveSheet().getRange(\"A1:C9\");\n        // Set data\n        targetRange.setValue(new Object[][] { { \"Grade\", \"Class\", \"Score\", \"Student ID\" }, { 1, 1, 93, 1 },\n                { 1, 1, 87, 2 }, { 1, 2, 97, 3 }, { 1, 2, 95, 4 }, { 2, 1, 83, 5 }, { 2, 1, 87, 6 }, { 2, 2, 96, 7 },\n                { 2, 2, 83, 8 } });\n\n        // Group by Grade select Average(Score)\n        targetRange.subtotal(1, // Grade\n                ConsolidationFunction.Average, new int[] { 3 }, // Score\n                false, true);\n\n        // Group by Class select Average(Score)\n        targetRange.subtotal(2, // Class\n                ConsolidationFunction.Average, new int[] { 3 }, // Score\n                false);\n\n        workbook.getActiveSheet().getRange(\"C:C\").setNumberFormat(\"0;0;0;@\");\n\n        targetRange.autoFit();\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.RemoveSubtotal": "\n\n        IRange targetRange = workbook.getActiveSheet().getRange(\"A1:C9\");\n        // Set data\n        targetRange.setValue(new Object[][] { { \"Player\", \"Side\", \"Commander\" }, { 1, \"Soviet\", \"AI\" },\n                { 2, \"Soviet\", \"AI\" }, { 3, \"Soviet\", \"Human\" }, { 4, \"Allied\", \"Human\" }, { 5, \"Allied\", \"Human\" },\n                { 6, \"Allied\", \"AI\" }, { 7, \"Empire\", \"AI\" }, { 8, \"Empire\", \"AI\" } });\n\n        // Subtotal\n        targetRange.subtotal(2, // Side\n                ConsolidationFunction.Count, new int[] { 2 } // Side\n        );\n\n        workbook.getActiveSheet().getRange(\"A1:C13\").removeSubtotal();\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.AddSubtotal": "\n\n        IRange targetRange = workbook.getActiveSheet().getRange(\"A1:C9\");\n        // Set data\n        targetRange.setValue(new Object[][]\n        {\n            {\"Player\", \"Side\", \"Commander\"},\n            {1, \"Soviet\", \"AI\"},\n            {2, \"Soviet\", \"AI\"},\n            {3, \"Soviet\", \"Human\"},\n            {4, \"Allied\", \"Human\"},\n            {5, \"Allied\", \"Human\"},\n            {6, \"Allied\", \"AI\"},\n            {7, \"Empire\", \"AI\"},\n            {8, \"Empire\", \"AI\"}\n        });\n\n        // Subtotal\n        targetRange.subtotal(2, // Side\n            ConsolidationFunction.Count,\n            new int[] { 2 } // Side\n            );\n\n        targetRange.autoFit();\n    ",
  "com.grapecity.documents.excel.examples.features.grouping.CreateRangeGroup": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //1:20 rows' outline level will be 2.\n        worksheet.getRange(\"1:20\").group();\n        //1:10 rows' outline level will be 3.\n        worksheet.getRange(\"1:10\").group();\n\n        //A:N columns' outline level will be 2.\n        worksheet.getRange(\"A:N\").group();\n        //A:E columns' outline level will be 3.\n        worksheet.getRange(\"A:E\").group();\n\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveTable": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Add Table\r\n        ITable table = sheet.getTables().add(sheet.getRange(\"B5:G16\"), true);\r\n        table.setShowTotals(true);\r\n\r\n        //Set values\r\n        int[] data = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};\r\n        sheet.getRange(\"C6:C16\").setValue(data);\r\n        sheet.getRange(\"D6:D16\").setValue(data);\r\n\r\n        //Set total functions\r\n        table.getColumns().get(1).setTotalsCalculation(TotalsCalculation.Average);\r\n        table.getColumns().get(2).setTotalsCalculation(TotalsCalculation.Sum);\r\n\r\n        //Create custom table style\r\n        ITableStyle customTableStyle = workbook.getTableStyles().get(\"TableStyleMedium10\").duplicate();\r\n\r\n        ITableStyleElement wholeTableStyle = customTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable);\r\n        wholeTableStyle.getFont().setItalic(true);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeTop).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thick);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeRight).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thick);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeLeft).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thick);\r\n\r\n        ITableStyleElement firstRowStripStyle = customTableStyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe);\r\n        firstRowStripStyle.getFont().setBold(true);\r\n\r\n        //Apply custom style to table\r\n        table.setTableStyle(customTableStyle);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SetDocumentPropertiesToPDF": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(\"GrapeCity Documents for Excel\");\n        worksheet.getRange(\"A1\").getFont().setSize(25);\n        \n        DocumentProperties documentProperties = new DocumentProperties();\n        //Sets the name of the person that created the PDF document.\n        documentProperties.setAuthor(\"Jaime Smith\");\n        //Sets the title of the  PDF document.\n        documentProperties.setTitle(\"GcPdf Document Info Sample\");\n        //Set the PDF version.\n        documentProperties.setPdfVersion(1.5f);\n        //Set the subject of the PDF document.\n        documentProperties.setSubject(\"GcPdfDocument.DocumentInfo\");\n        //Set the keyword associated with the PDF document.\n        documentProperties.setKeywords(\"Keyword1\");\n        //Set the creation date and time of the PDF document.\n        documentProperties.setCreationDate(new GregorianCalendar(2019,5,24));\n        //Set the date and time the PDF document was most recently modified.\n        documentProperties.setModifyDate(new GregorianCalendar(2020,5,24));\n        //Set the name of the application that created the original PDF document.\n        documentProperties.setCreator(\"GcPdfWeb Creator\");\n        //Set the name of the application that created the PDF document.\n        documentProperties.setProducer(\"GcPdfWeb Producer\");\n\n\n        PdfSaveOptions pdfSaveOptions = new PdfSaveOptions();\n        //Sets the document properties of the pdf.\n        pdfSaveOptions.setDocumentProperties(documentProperties);\n\n        //Save the workbook into pdf file.\n        workbook.save(outputStream, pdfSaveOptions);\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveWorkbookToPDF": "\r\n        IWorksheet sheet1 = workbook.getWorksheets().get(0);\r\n\r\n        //set style.\r\n        sheet1.getRange(\"A1\").setValue(\"Sheet1\");\r\n        sheet1.getRange(\"A1\").getFont().setName(\"Wide Latin\");\r\n        sheet1.getRange(\"A1\").getFont().setColor(Color.GetRed());\r\n        sheet1.getRange(\"A1\").getInterior().setColor(Color.GetGreen());\r\n        \r\n        \r\n        IWorksheet sheet2 = workbook.getWorksheets().add();\r\n        \r\n        //set style.\r\n        sheet2.getRange(\"A1\").setValue(\"Sheet2\");\r\n        sheet2.getRange(\"A1\").getFont().setName(\"Wide Latin\");\r\n        sheet2.getRange(\"A1\").getFont().setColor(Color.GetRed());\r\n        sheet2.getRange(\"A1\").getInterior().setColor(Color.GetYellow());\r\n\r\n        //change the path to real export path when save.\r\n        workbook.save(\"dest.pdf\", SaveFileFormat.Pdf);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.ConvertExcelToPDF": "\r\n        // Open an excel file\r\n        InputStream fileStream = this.getResourceStream(\"xlsx/Employee absence schedule.xlsx\");\r\n        workbook.open(fileStream);\r\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveConditionalFormatting": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Conditional formatting on merge cell\r\n        sheet.getRange(\"B2:C4\").merge();\r\n        sheet.getRange(\"B2:C4\").setValue(123);\r\n        IFormatCondition cf = (IFormatCondition) sheet.getRange(\"B2:C4\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.Greater, 0, 0);\r\n        cf.getBorders().setThemeColor(ThemeColor.Accent1);\r\n        cf.getBorders().setLineStyle(BorderLineStyle.Thin);\r\n\r\n        //Set cell values\r\n        int[] data = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n        sheet.getRange(\"B10:B19\").setValue(data);\r\n        sheet.getRange(\"C10:C19\").setValue(data);\r\n        sheet.getRange(\"D10:D19\").setValue(data);\r\n\r\n        //Set conditional formattings\r\n        //Color scale\r\n        IColorScale cf1 = sheet.getRange(\"B10:B19\").getFormatConditions().addColorScale(ColorScaleType.ThreeColorScale);\r\n        cf1.getColorScaleCriteria().get(0).setType(ConditionValueTypes.LowestValue);\r\n        cf1.getColorScaleCriteria().get(0).getFormatColor().setColor(Color.FromArgb(248, 105, 107));\r\n        cf1.getColorScaleCriteria().get(1).setType(ConditionValueTypes.Percentile);\r\n        cf1.getColorScaleCriteria().get(1).setValue(50);\r\n        cf1.getColorScaleCriteria().get(1).getFormatColor().setColor(Color.FromArgb(255, 235, 132));\r\n        cf1.getColorScaleCriteria().get(2).setType(ConditionValueTypes.HighestValue);\r\n        cf1.getColorScaleCriteria().get(2).getFormatColor().setColor(Color.FromArgb(99, 190, 123));\r\n\r\n        //Data bar\r\n        sheet.getRange(\"C14\").setValue(-5);\r\n        sheet.getRange(\"C17\").setValue(-8);\r\n        IDataBar cf2 = sheet.getRange(\"C10:C19\").getFormatConditions().addDatabar();\r\n        cf2.getMinPoint().setType(ConditionValueTypes.AutomaticMin);\r\n        cf2.getMaxPoint().setType(ConditionValueTypes.AutomaticMax);\r\n        cf2.setBarFillType(DataBarFillType.Gradient);\r\n        cf2.getBarColor().setColor(Color.FromArgb(0, 138, 239));\r\n        cf2.getBarBorder().getColor().setColor(Color.FromArgb(0, 138, 239));\r\n        cf2.getNegativeBarFormat().getColor().setColor(Color.FromArgb(255, 0, 0));\r\n        cf2.getNegativeBarFormat().setBorderColorType(DataBarNegativeColorType.Color);\r\n        cf2.getNegativeBarFormat().getBorderColor().setColor(Color.FromArgb(255, 0, 0));\r\n        cf2.getAxisColor().setColor(Color.GetBlack());\r\n        cf2.setAxisPosition(DataBarAxisPosition.Automatic);\r\n\r\n        //Icon set\r\n        IIconSetCondition cf3 = sheet.getRange(\"D10:D19\").getFormatConditions().addIconSetCondition();\r\n        cf3.setIconSet(workbook.getIconSets().get(IconSetType.Icon3Symbols));\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveSheetBackgroundToPDF": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(\"GrapeCity Documents for Excel\");\n        worksheet.getRange(\"A1\").getFont().setSize(25);\n        \n        //Set a background image for worksheet\n        InputStream inputStream = this.getResourceStream(\"logo.png\");\n        try {\n            byte[] bytes = new byte[inputStream.available()];\n            inputStream.read(bytes, 0, bytes.length);\n            worksheet.setBackgroundPicture(bytes);\n        }catch (IOException ioe){\n            ioe.printStackTrace();\n        }\n\n        PdfSaveOptions pdfSaveOptions = new PdfSaveOptions();\n        //Print the background image when saving pdf.\n        //The background image will be centered on every page of the sheet.\n        pdfSaveOptions.setPrintBackgroundPicture(true);\n\n        //Save the workbook into pdf file.\n        workbook.save(outputStream, pdfSaveOptions);\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.ConvertSheetToImage": "\n\t\t\n        workbook.open(this.getResourceStream(\"xlsx/Employee absence schedule.xlsx\"));\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        //Get the first print area of the worksheet.\n        IRange printArea = printManager.getPrintAreas(worksheet).get(0);\n        //Get the size of the printArea.\n        Size size = printManager.getSize(printArea);\n        PDRectangle pageSize = new PDRectangle((float)size.getWidth(), (float)size.getHeight());\n\n        //Create a pdf document.\n        PDDocument doc = new PDDocument();\n        PDPage page = new PDPage(pageSize);\n        doc.addPage(page);\t\n\n        //Draw the print to the specified location on the page. \n        printManager.draw(doc, page, new Point(0, 0), printArea);\n\n        //Saves the page as an image to a stream.\n        PDFRenderer pdfRenderer = new PDFRenderer(doc);\n        BufferedImage bim;\n\t\ttry {\n        \tbim = pdfRenderer.renderImage(0);\n\t\t\tImageIO.write(bim, \"PNG\", outputStream); \n\t\t\tdoc.close();\n\t\t} catch (IOException e1) {\n\t\t\te1.printStackTrace();\n\t\t}\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveWorksheetToPDF": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //set style.\r\n        sheet.getRange(\"A1\").setValue(\"Sheet1\");\r\n        sheet.getRange(\"A1\").getFont().setName(\"Wide Latin\");\r\n        sheet.getRange(\"A1\").getFont().setColor(Color.GetRed());\r\n        sheet.getRange(\"A1\").getInterior().setColor(Color.GetGreen());\r\n\r\n        //change the path to real export path when save.\r\n        sheet.save(\"dest.pdf\", SaveFileFormat.Pdf);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveBorder": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Single cell border\r\n        sheet.getRange(\"B2\").getBorders().setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"B2\").getBorders().setLineStyle(BorderLineStyle.SlantDashDot);\r\n        sheet.getRange(\"B2\").getBorders().get(BordersIndex.DiagonalUp).setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"B2\").getBorders().get(BordersIndex.DiagonalUp).setLineStyle(BorderLineStyle.SlantDashDot);\r\n        sheet.getRange(\"B2\").getBorders().get(BordersIndex.DiagonalDown).setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"B2\").getBorders().get(BordersIndex.DiagonalDown).setLineStyle(BorderLineStyle.SlantDashDot);\r\n\r\n        //Range border\r\n        sheet.getRange(\"D2:E3\").getBorders().setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"D2:E3\").getBorders().setLineStyle(BorderLineStyle.DashDot);\r\n        sheet.getRange(\"D2:E3\").getBorders().get(BordersIndex.DiagonalDown).setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"D2:E3\").getBorders().get(BordersIndex.DiagonalDown).setLineStyle(BorderLineStyle.DashDot);\r\n\r\n        //Merge cell border\r\n        sheet.getRange(\"B6:C7\").merge();\r\n        sheet.getRange(\"B6:C7\").getBorders().setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"B6:C7\").getBorders().setLineStyle(BorderLineStyle.Double);\r\n        sheet.getRange(\"B6:C7\").getBorders().get(BordersIndex.DiagonalUp).setThemeColor(ThemeColor.Accent1);\r\n        sheet.getRange(\"B6:C7\").getBorders().get(BordersIndex.DiagonalUp).setLineStyle(BorderLineStyle.Double);\r\n\r\n        //Border style on table\r\n        ITable table = sheet.getTables().add(sheet.getRange(\"B12:G22\"), true);\r\n\r\n        //Create custom table style\r\n        ITableStyle customTableStyle = workbook.getTableStyles().get(\"TableStyleMedium10\").duplicate();\r\n\r\n        //Set outline border for \"whole table\" style\r\n        ITableStyleElement wholeTableStyle = customTableStyle.getTableStyleElements().get(TableStyleElementType.WholeTable);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeTop).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeTop).setLineStyle(BorderLineStyle.Thick);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeRight).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeRight).setLineStyle(BorderLineStyle.Thick);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeBottom).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeBottom).setLineStyle(BorderLineStyle.Thick);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeLeft).setThemeColor(ThemeColor.Accent1);\r\n        wholeTableStyle.getBorders().get(BordersIndex.EdgeLeft).setLineStyle(BorderLineStyle.Thick);\r\n\r\n        //Set vertical border for \"first row strip\" style\r\n        ITableStyleElement firstRowStripStyle = customTableStyle.getTableStyleElements().get(TableStyleElementType.FirstRowStripe);\r\n        firstRowStripStyle.getBorders().get(BordersIndex.InsideVertical).setThemeColor(ThemeColor.Accent6);\r\n        firstRowStripStyle.getBorders().get(BordersIndex.InsideVertical).setLineStyle(BorderLineStyle.Dashed);\r\n\r\n        //Apply custom style to table\r\n        table.setTableStyle(customTableStyle);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SavePivotTable": "\n\t\t\n        Object sourceData = new Object[][]{\n            {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n            {1, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n            {2, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n            {3, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n            {4, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n            {5, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n            {6, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n            {7, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n            {8, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n            {9, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n            {10, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n            {11, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n            {12, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n            {13, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n         };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"K20:P33\").setValue(sourceData);\n        worksheet.getRange(\"K:P\").setColumnWidth(15);\n        // Add pivot table\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"K20:P33\"));\n        IPivotTable pivottable = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"A1\"), \"pivottable1\");\n        worksheet.getRange(\"N21:N35\").setNumberFormat(\"$#,##0.00\");\n        worksheet.getRange(\"A:G\").setColumnWidth(12);\n        \n        // config pivot table's fields\n        IPivotField field_Date = pivottable.getPivotFields().get(\"Date\");\n        field_Date.setOrientation(PivotFieldOrientation.PageField);\n\n        IPivotField field_Category = pivottable.getPivotFields().get(\"Category\");\n        field_Category.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Product = pivottable.getPivotFields().get(\"Product\");\n        field_Product.setOrientation(PivotFieldOrientation.ColumnField);\n\n        IPivotField field_Amount = pivottable.getPivotFields().get(\"Amount\");\n        field_Amount.setOrientation(PivotFieldOrientation.DataField);\n        field_Amount.setNumberFormat(\"$#,##0.00\");\n\n        IPivotField field_Country = pivottable.getPivotFields().get(\"Country\");\n        field_Country.setOrientation(PivotFieldOrientation.RowField);\n\n        // Set pivot style\n        pivottable.setTableStyle(\"PivotStyleMedium28\");\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.ConvertRangeToImage": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A1:C1\").setValue(new String[] { \"Device\", \"Quantity\", \"Unit Price\" });\n        worksheet.getRange(\"A2:C5\").setValue(new Object[][] \n        { \n            { \"T540p\", 12, 9850 }, \n            { \"T570\", 5, 7460 },\n            { \"Y460\", 6, 5400 },\n            { \"Y460F\", 8, 6240 } \n         });\n\n        // Set style\n        worksheet.getRange(\"A1:C1\").getFont().setBold(true);\n        worksheet.getRange(\"A1:C1\").getFont().setColor(Color.GetWhite());\n        worksheet.getRange(\"A1:C1\").getInterior().setColor(Color.GetLightBlue());\n        worksheet.getRange(\"A2:C5\").getBorders().get(BordersIndex.InsideHorizontal).setColor(Color.GetOrange());\n        worksheet.getRange(\"A2:C5\").getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.DashDot);\n\n        // Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        // Get the size of the printArea.\n        Size size = printManager.getSize(worksheet.getRange(\"A1:C5\"));\n        PDRectangle pageSize = new PDRectangle((float) size.getWidth(), (float) size.getHeight());\n\n        // Create a pdf document.\n        PDDocument doc = new PDDocument();\n        PDPage page = new PDPage(pageSize);\n        doc.addPage(page);\n\n        // Draw the Range\"A1:C5\" to the specified location on the page.\n        printManager.draw(doc, page, new Point(0, 0), worksheet.getRange(\"A1:C5\"));\n\n        // Saves the page as an image to a stream.\n        PDFRenderer pdfRenderer = new PDFRenderer(doc);\n        BufferedImage bim;\n        try {\n        \tbim = pdfRenderer.renderImage(0);\n        \tImageIO.write(bim, \"PNG\", outputStream);\n        \tdoc.close();\n        } catch (IOException e) {\n        \te.printStackTrace();\n        }\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SetFontsFolderPath": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //set style.\r\n        sheet.getRange(\"A1\").setValue(\"Sheet1\");\r\n        sheet.getRange(\"A1\").getFont().setName(\"Wide Latin\");\r\n        sheet.getRange(\"A1\").getFont().setColor(Color.GetRed());\r\n        sheet.getRange(\"A1\").getInterior().setColor(Color.GetGreen());\r\n\r\n        //specify font path.\r\n        Workbook.FontsFolderPath = \"/var/usr/public/Fonts\";\r\n\r\n//\t\t//get the used fonts list in workbook, the list are:\"Wide Latin\", \"Calibri\"\r\n        List<FontInfo> fonts = workbook.getUsedFonts();\r\n\r\n        //change the path to real export path when save.\r\n        sheet.save(\"dest.pdf\", SaveFileFormat.Pdf);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SetSecurityOptionsToPDF": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1\").setValue(\"GrapeCity Documents for Excel\");\n        worksheet.getRange(\"A1\").getFont().setSize(25);\n        \n        //The security settings of pdf when converting excel to pdf.\n        PdfSecurityOptions securityOptions = new PdfSecurityOptions();\n        //Sets the user password.\n        securityOptions.setUserPassword(\"user\");\n        //Sets the owner password.\n        securityOptions.setOwnerPassword(\"owner\");\n        //Allow to print pdf document.\n        securityOptions.setPrintPermission(true);\n        //Print the pdf document in high quality.\n        securityOptions.setFullQualityPrintPermission(true);\n        //Allow to copy or extract the content of the pdf document.\n        securityOptions.setExtractContentPermission(true);\n        //Allow to modify the pdf document.\n        securityOptions.setModifyDocumentPermission(true);\n        //Allow to insert, rotate, or delete pages and create bookmarks or thumbnail images of the pdf document.\n        securityOptions.setAssembleDocumentPermission(true);\n        //Allow to modify text annotations and fill the form fields of the pdf document.\n        securityOptions.setModifyAnnotationsPermission(true);\n        //Filling the form fields of the pdf document is not allowed.\n        securityOptions.setFillFormsPermission(false);\n\n\n        PdfSaveOptions pdfSaveOptions = new PdfSaveOptions();\n        //Sets the secutity settings of the pdf.\n        pdfSaveOptions.setSecurityOptions(securityOptions);\n\n        //Save the workbook into pdf file.\n        workbook.save(outputStream, pdfSaveOptions);\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveRangeFillToPDF": "\r\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\r\n\r\n        worksheet.getRange(\"A1:C2\").merge();\r\n        worksheet.getRange(\"A1:C2\").getInterior().setColor(Color.GetGreen());\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveSlicer": "\n\n        Object sourceData = new Object[][] { { \"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\" },\n                { 1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\" },\n                { 2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\" },\n                { 3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\" },\n                { 4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\" },\n                { 5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\" },\n                { 6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\" },\n                { 7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\" },\n                { 8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\" },\n                { 9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\" },\n                { 10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\" },\n                { 11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\" },\n                { 12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\" },\n                { 13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\" },\n                { 14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\" },\n                { 15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\" }, };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:E\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:E16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:E16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        // create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 150, 30,\n                100, 200);\n        slicer1.getSlicerCache().getSlicerItems().get(\"Vegetables\").setSelected(false);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SavePictureToPDF": "\r\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\r\n\r\n        worksheet.getPageSetup().setOrientation(PageOrientation.Landscape);\r\n        InputStream stream = this.getResourceStream(\"logo.png\");\r\n        IShape picture = null;\r\n        try {\r\n            picture = worksheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 400, 100);\r\n        } catch (IOException ioe) {\r\n\r\n        }\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.ConvertShapeToImage": "\n\t\t\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Add a rectangle\n        IShape rectangle = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 0, 0, 191, 194);\n\n        // Set soild fill for rectangle\n        rectangle.getFill().getColor().setRGB(Color.GetOrangeRed());\n\n        // Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        // Get the size of the shape.\n        IRange topLeftCell = rectangle.getTopLeftCell();\n        IRange bottomRightCell = rectangle.getBottomRightCell();\n        IRange shapeRange = worksheet.getRange(topLeftCell.getRow(), topLeftCell.getColumn(),\n                bottomRightCell.getRow() - topLeftCell.getRow() + 1,\n                bottomRightCell.getColumn() - topLeftCell.getColumn() + 1);\n        Size size = printManager.getSize(shapeRange);\n        PDRectangle pageSize = new PDRectangle((float) size.getWidth(), (float) size.getHeight());\n\n        // Create a pdf document.\n        PDDocument doc = new PDDocument();\n        PDPage page = new PDPage(pageSize);\n        doc.addPage(page);\n\n        // Draw the printArea to the specified location on the page.\n        printManager.draw(doc, page, new Point(0, 0), shapeRange);\n\n        // Saves the page as an image to a stream.\n        PDFRenderer pdfRenderer = new PDFRenderer(doc);\n        BufferedImage bim;\n\n        try {\n        \tbim = pdfRenderer.renderImage(0);\n        \tImageIO.write(bim, \"PNG\", outputStream);\n        \tdoc.close();\n        } catch (IOException e) {\n        \te.printStackTrace();\n        }\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.SaveSparklinesToPDF": "\r\n        Object[][] data = new Object[][]\r\n            {\r\n                {\"Customer\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\"},\r\n                {\"Customer A\", 1200.15, 1916.18, 1105.23, 1806.53},\r\n                {\"Customer B\", 896.23, 1005.53, 1800.56, 1150.49},\r\n                {\"Customer C\", 827.63, 1009.23, 1869.23, 1002.56}\r\n            };\r\n\r\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\r\n        worksheet.getRange(\"B2:E5\").setValue(data);\r\n        worksheet.getRange(\"B:F\").setColumnWidth(15);\r\n        worksheet.getRange(\"B:E\").setHorizontalAlignment(HorizontalAlignment.Center);\r\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"B2:F5\"), true);\r\n        table.setTableStyle(workbook.getTableStyles().get(\"TableStyleMedium3\"));\r\n        table.getColumns().get(4).setName(\"Sparklines\");\r\n\r\n        //create a new group of sparklines.\r\n        worksheet.getRange(\"F3\").getSparklineGroups().add(SparkType.Line, \"C3:E3\");\r\n        worksheet.getRange(\"F4\").getSparklineGroups().add(SparkType.Column, \"C4:E4\");\r\n        worksheet.getRange(\"F5\").getSparklineGroups().add(SparkType.ColumnStacked100, \"C5:E5\");\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.ShrinkToFitForWrappedText": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getPageSetup().setPrintGridlines(true); \n        worksheet.getPageSetup().setPrintHeadings(true);\n\n        //\"A1\" is ordinary wrapped text.\n        worksheet.getRange(\"A1\").setWrapText(true);\n        worksheet.getRange(\"A1\").setValue(\"GrapeCity Documents for Excel\");\n        worksheet.getRange(\"A1\").setRowHeight(38);\n        worksheet.getRange(\"A1\").setColumnWidth(9);\n\n        //The wrapped text \"A2\" will be shrink to fit.\n        //worksheet.Range[\"A2\"].Interior.Color = Color.LightGreen;\n        worksheet.getRange(\"A2\").setWrapText(true);\n        worksheet.getRange(\"A2\").setShrinkToFit(true);\n        worksheet.getRange(\"A2\").setValue(\"GrapeCity Documents for Excel\");\n        worksheet.getRange(\"A2\").setRowHeight(38);\n\n        //You must create a pdfSaveOptions object before using ShrinkToFitSettings.\n        PdfSaveOptions pdfSaveOptions = new PdfSaveOptions();\n\n        //Shrink the wrapped text within the cell with existing row height/column width, while exporting to PDF. \n        pdfSaveOptions.getShrinkToFitSettings().setCanShrinkToFitWrappedText(true);\n\n//        //Set minimum font size with which the text should shrink.\n//        pdfSaveOptions.getShrinkToFitSettings().setMinimumFont(10);\n//        //If after setting the minimum font size, the text is very long not fully visible, the ellipsis string to show for long text.\n//        pdfSaveOptions.getShrinkToFitSettings().setEllipsis(\"~\");\n\n        //Save the workbook into pdf file.\n        workbook.save(outputStream, pdfSaveOptions);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.text.VerticalText": "\r\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        IRange a1 = sheet.getRange(\"A1\");\r\n        a1.getFont().setName(\"@MS UI Gothic\");\r\n        a1.setValue(\"日本語（にほんご、にっぽんご）は、主として、日本列島で使用されてきた言語である。\");\r\n        a1.setHorizontalAlignment(HorizontalAlignment.Right);\r\n        a1.setVerticalAlignment(VerticalAlignment.Top);\r\n        a1.setOrientation(-90);\r\n        a1.setWrapText(true);\r\n\r\n        a1.setColumnWidth(27);\r\n        a1.setRowHeight(190);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.text.TextStyle": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n//C# TO JAVA CONVERTER TODO TASK: There is no preprocessor in Java:\r\n        ///#region Aligment\r\n        sheet.getRange(\"A1\").setValue(\"Alignment\");\r\n\r\n        sheet.getRange(\"B2\").setValue(\"Left Alignment\");\r\n        sheet.getRange(\"B2\").setHorizontalAlignment(HorizontalAlignment.Left);\r\n\r\n        sheet.getRange(\"C2\").setValue(\"Center Alignment\");\r\n        sheet.getRange(\"C2\").setHorizontalAlignment(HorizontalAlignment.Center);\r\n\r\n        sheet.getRange(\"D2\").setValue(\"Right Alignment\");\r\n        sheet.getRange(\"D2\").setHorizontalAlignment(HorizontalAlignment.Right);\r\n\r\n        sheet.getRange(\"B3\").setValue(\"Top Alignment\");\r\n        sheet.getRange(\"B3\").setVerticalAlignment(VerticalAlignment.Top);\r\n\r\n        sheet.getRange(\"C3\").setValue(\"Middle Alignment\");\r\n        sheet.getRange(\"C3\").setVerticalAlignment(VerticalAlignment.Center);\r\n\r\n        sheet.getRange(\"D3\").setValue(\"Bottom Alignment\");\r\n        sheet.getRange(\"D3\").setVerticalAlignment(VerticalAlignment.Bottom);\r\n\r\n        sheet.getRange(\"B4\").setValue(\"This is  a test string for Justify Alignment. \\nThis is a test string for Justify Alignment. \");\r\n        sheet.getRange(\"B4\").setHorizontalAlignment(HorizontalAlignment.Justify);\r\n        sheet.getRange(\"B4\").setVerticalAlignment(VerticalAlignment.Justify);\r\n\r\n        sheet.getRange(\"C4\").setValue(\"This is  a test string for Distributed Alignment. \\nThis is a test string for Distributed Alignment. \");\r\n        sheet.getRange(\"C4\").setHorizontalAlignment(HorizontalAlignment.Distributed);\r\n        sheet.getRange(\"C4\").setVerticalAlignment(VerticalAlignment.Distributed);\r\n\r\n        ///#endregion\r\n\r\n        //Wordwrap\r\n        sheet.getRange(\"A6\").setValue(\"Wordwrap\");\r\n        sheet.getRange(\"B7\").setValue(\"This is a test string for Wordwrap\");\r\n        sheet.getRange(\"C7\").setValue(\"This is a test string \\n for Wordwrap\");\r\n        sheet.getRange(\"B7:C7\").setWrapText(true);\r\n\r\n        //Indent\r\n        sheet.getRange(\"A9\").setValue(\"Indent\");\r\n        sheet.getRange(\"B10\").setValue(\"Left Indent\");\r\n        sheet.getRange(\"B10\").setIndentLevel(3);\r\n        sheet.getRange(\"C10\").setValue(\"Right Indent\");\r\n        sheet.getRange(\"C10\").setIndentLevel(3);\r\n        sheet.getRange(\"C10\").setHorizontalAlignment(HorizontalAlignment.Right);\r\n\r\n        //Shrink to fit\r\n        sheet.getRange(\"A12\").setValue(\"Shrink to fit\");\r\n        sheet.getRange(\"B13\").setValue(\"This is a test string for \\\"Shrink to fit\\\"\");\r\n        sheet.getRange(\"B13\").setShrinkToFit(true);\r\n\r\n        //Underline\r\n        sheet.getRange(\"A15\").setValue(\"Underline\");\r\n        sheet.getRange(\"B16\").setValue(\"Single Underline\");\r\n        sheet.getRange(\"B16\").getFont().setUnderline(UnderlineType.Single);\r\n\r\n        //Strikthrough\r\n        sheet.getRange(\"A18\").setValue(\"Strikthrough\");\r\n        sheet.getRange(\"B19\").setValue(\"Strikthrough\");\r\n        sheet.getRange(\"B19\").getFont().setStrikethrough(true);\r\n\r\n        //Other settings\r\n        sheet.getColumns().get(0).getFont().setBold(true);\r\n        sheet.getColumns().get(0).setColumnWidthInPixel(100);\r\n        sheet.getColumns().get(1).setColumnWidthInPixel(200);\r\n        sheet.getColumns().get(2).setColumnWidthInPixel(245);\r\n        sheet.getColumns().get(3).setColumnWidthInPixel(234);\r\n        sheet.getRows().get(2).setRowHeightInPixel(72);\r\n        sheet.getRows().get(3).setRowHeightInPixel(123);\r\n        sheet.getRows().get(6).setRowHeightInPixel(48);\r\n\r\n        sheet.getRange(\"A1:D19\").getBorders().setLineStyle(BorderLineStyle.Thin);\r\n        sheet.getPageSetup().setPaperSize(PaperSize.A3);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.text.NumberFormating": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        sheet.getRange(\"B3:B7\").setValue(123456.789);\r\n        sheet.getRange(\"B9:B13\").setValue(-123456.789);\r\n\r\n        sheet.getRange(\"B4, B10\").setNumberFormat(\"0.00;[Red]0.00\");\r\n        sheet.getRange(\"B5, B11\").setNumberFormat(\"$#,##0.00;[Red]$#,##0.00\");\r\n        sheet.getRange(\"B6, B12\").setNumberFormat(\"0.00E+00\");\r\n        sheet.getRange(\"B7, B13\").setNumberFormat(\"_($* #,##0.00_);_($* (#,##0.00);_($* \\\" - \\\"??_);_(@_)\");\r\n\r\n        //Other settings\r\n        sheet.getColumns().get(1).setColumnWidthInPixel(100);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.text.ExportCellRichText": "\r\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\r\n\r\n        IRange a1 = worksheet.getRange(\"A1\");\r\n\r\n        a1.getFont().setSize(18);\r\n        a1.getFont().setBold(true);\r\n        a1.setVerticalAlignment(VerticalAlignment.Center);\r\n\r\n        a1.getEntireRow().setRowHeight(42);\r\n        a1.getEntireColumn().setColumnWidth(35);\r\n        a1.setValue(\"Perfect square trinomial\");\r\n\r\n        ITextRun run = a1.characters(8, 7);\r\n        run.getFont().setItalic(true);\r\n        run.getFont().setThemeColor(ThemeColor.Accent1);\r\n\r\n        IRange b1 = worksheet.getRange(\"B1\");\r\n        b1.getFont().setSize(26);\r\n        b1.getEntireColumn().setColumnWidth(40);\r\n\r\n        b1.setValue(\"(a+b)2 = a2+2ab+b2\");\r\n\r\n        ITextRun superRun1 = b1.characters(5, 1);\r\n        superRun1.getFont().setSuperscript(true);\r\n        superRun1.getFont().setColor(Color.GetRed());\r\n\r\n        ITextRun superRun2 = b1.characters(10, 1);\r\n        superRun2.getFont().setSuperscript(true);\r\n        superRun2.getFont().setColor(Color.GetGreen());\r\n\r\n        ITextRun superRun3 = b1.characters(17, 1);\r\n        superRun3.getFont().setSuperscript(true);\r\n        superRun3.getFont().setColor(Color.GetBlue());\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.text.Overflow": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        sheet.getRange(\"F2, F4\").setValue(\"This is a test string of overflow\");\r\n\r\n        sheet.getRange(\"F6, F8\").setValue(\"This is a test string of overflow with right alignment\");\r\n        sheet.getRange(\"F6, F8\").setHorizontalAlignment(HorizontalAlignment.Right);\r\n\r\n        sheet.getRange(\"D8, H4\").setValue(123);\r\n\r\n        //Other settings\r\n        sheet.getRange(\"A1:J10\").getBorders().setLineStyle(BorderLineStyle.Thin);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.ExportFlowChart": "\n\t\t\n        //Open an excel file\n        InputStream fileStream = this.getResourceStream(\"xlsx/Flowcharts.xlsx\");\n        workbook.open(fileStream);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.ShapeWithLine": "\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n\n        IShape rectangle = sheet.getShapes().addShape(AutoShapeType.Rectangle, 20, 50, 200, 200);\n        rectangle.getLine().setDashStyle(LineDashStyle.Dash);\n        rectangle.getLine().setStyle(LineStyle.Single);\n        rectangle.getLine().setWeight(7);\n        rectangle.getLine().getColor().setRGB(Color.GetYellow());\n\n        IShape donut = sheet.getShapes().addShape(AutoShapeType.Donut, 260, 50, 200, 200);\n        donut.getLine().setDashStyle(LineDashStyle.DashDotDot);\n        donut.getLine().setStyle(LineStyle.Single);\n        donut.getLine().setWeight(7);\n        donut.getLine().getColor().setRGB(Color.GetRed());\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.SetShapeNotToPrint": "\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n\n        // Add a rectangle\n        IShape rectangle = sheet.getShapes().addShape(AutoShapeType.Rectangle, 20, 15, 100, 100);\n        \n        // Add an oval\n        IShape oval = sheet.getShapes().addShape(AutoShapeType.Oval, 160, 15, 100, 100);\n\n        //set oval not to print\n        oval.setIsPrintable(false);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.ShapeWithRotation": "\n\t\t\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n\n        sheet.getRange(\"D2\").setValue(\"rectangle with 30 degrees\");\n        sheet.getRange(\"H2\").setValue(\"right arrow with 40 degrees\");\n\n        // Add a rectangle with rotation\n        IShape rectangle = sheet.getShapes().addShape(AutoShapeType.Rectangle, 50, 50, 200, 50);\n        rectangle.setRotation(30);\n\n        // Add a right arrow with rotation\n        IShape rightArrowWithRotation = sheet.getShapes().addShape(AutoShapeType.RightArrow, 270, 50, 200, 100);\n        rightArrowWithRotation.setRotation(40);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.BasicShape": "\n\t\t\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n\n        // Add a rectangle\n        sheet.getShapes().addShape(AutoShapeType.Rectangle, 20, 10, 100, 100);\n\n        // Add an oval\n        sheet.getShapes().addShape(AutoShapeType.Oval, 20, 160, 100, 100);\n\n        // Add a triangle\n        sheet.getShapes().addShape(AutoShapeType.IsoscelesTriangle, 20, 310, 100, 100);\n\n        // Add a \"Not Allowed\" symbol\n        sheet.getShapes().addShape(AutoShapeType.NoSymbol, 20, 460, 100, 100);\n\n        // Add a \"Smile Face\" symbol\n        sheet.getShapes().addShape(AutoShapeType.SmileyFace, 20, 600, 100, 100);\n\n        // Add a \"Heart\" symbol\n        sheet.getShapes().addShape(AutoShapeType.Heart, 170, 10, 100, 100);\n\n        // Add a \"Sun\" symbol\n        sheet.getShapes().addShape(AutoShapeType.Sun, 170, 160, 100, 100);\n\n        // Add a RightArrow\n        sheet.getShapes().addShape(AutoShapeType.RightArrow, 170, 310, 100, 100);\n\n        // Add a CurvedRightArrow\n        sheet.getShapes().addShape(AutoShapeType.CurvedRightArrow, 170, 460, 100, 100);\n\n        // Add a QuadArrow\n        sheet.getShapes().addShape(AutoShapeType.QuadArrow, 170, 600, 100, 100);\n\n        // Add a MathNotEqual\n        sheet.getShapes().addShape(AutoShapeType.MathNotEqual, 320, 10, 100, 100);\n\n        // Add a FlowchartMultidocument\n        sheet.getShapes().addShape(AutoShapeType.FlowchartMultidocument, 320, 160, 100, 100);\n\n        // Add a five points star\n        sheet.getShapes().addShape(AutoShapeType.Shape5pointStar, 320, 310, 100, 100);\n\n        // Add a CurvedUpRibbon\n        sheet.getShapes().addShape(AutoShapeType.CurvedUpRibbon, 320, 460, 100, 100);\n\n        // Add a OvalCallout\n        sheet.getShapes().addShape(AutoShapeType.OvalCallout, 320, 580, 100, 100);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.ShapeWithText": "\n\t\t\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n        \n        // Add a rectangle\n        IShape rectangle = sheet.getShapes().addShape(AutoShapeType.Rectangle, 50, 30, 300, 200);\n        \n        // Add rich text to rectangle\n        rectangle.getFill().getColor().setRGB(Color.GetWhite());\n\n        // Add first paragraph\n        ITextRange run1 = rectangle.getTextFrame().getTextRange().getParagraphs().get(0).getRuns().add(\"         Doc\");\n        run1.getFont().getColor().setRGB(Color.GetTomato());\n        ITextRange run2 = rectangle.getTextFrame().getTextRange().getParagraphs().get(0).getRuns().add(\"ume\");\n        run2.getFont().getColor().setRGB(Color.GetYellow());\n        ITextRange run3 = rectangle.getTextFrame().getTextRange().getParagraphs().get(0).getRuns().add(\"nts\");\n        run3.getFont().getColor().setRGB(Color.GetLightBlue());\n        ITextRange paragraph0 = rectangle.getTextFrame().getTextRange().getParagraphs().get(0);\n        paragraph0.getFont().setSize(36);\n        paragraph0.getFont().setBold(true);\n\n        rectangle.getTextFrame().getTextRange().getParagraphs().add(\" \");\n\n        // Add second paragraph\n        ITextRange paragraph1 = rectangle.getTextFrame().getTextRange().getParagraphs().add();\n        ITextRange run4 = paragraph1.getRuns().add(\"Fast, efficient Excel, Word, and PDF APIs for .NET Standard 2.0 and Java\");\n        run4.getFont().getColor().setRGB(Color.GetBlack());\n        run4.getFont().setSize(20);\n        run4.getFont().setName(\"Agency FB\");\n\n        rectangle.getTextFrame().getTextRange().getParagraphs().add(\" \");\n\n        // Add third paragraph\n        ITextRange paragraph2 = rectangle.getTextFrame().getTextRange().getParagraphs().add();\n        ITextRange run5 = paragraph2.getRuns().add(\"Take total document control with ultra-fast, low-footprint document APIs for enterprise apps\");\n        run5.getFont().getColor().setRGB(Color.GetBlack());\n        run5.getFont().setSize(16);\n        run5.getFont().setName(\"Times New Roman\");\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.ShapeWithPictureOrTextureFill": "\n\t\t\n        IWorksheet sheet = workbook.getWorksheets().get(0);        \n        \n        try {\n            // Get stream of picture\n            InputStream stream1 = this.getResourceStream(\"logo.png\");\n        \t\n            // Add a rectangle\n            IShape rectangle = sheet.getShapes().addShape(AutoShapeType.Rectangle, 20, 20, 250, 50);\n            // Set picture fill\n            rectangle.getFill().userPicture(stream1, ImageType.PNG);\n            rectangle.getLine().setTransparency(1);\n\n            // Get stream of picture\n            InputStream stream2 = this.getResourceStream(\"logo.png\");\n\t\n            // Add a oval\n            IShape oval = sheet.getShapes().addShape(AutoShapeType.Oval, 20, 90, 250, 50);\n            // Set picture fill\n            oval.getFill().userPicture(stream2, ImageType.PNG);\n            oval.getLine().getColor().setRGB(Color.FromArgb(0x49129E));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Add a five point star\n        IShape star = sheet.getShapes().addShape(AutoShapeType.Shape5pointStar, 300, 20, 100, 100);\n        // Set picture fill\n        star.getFill().presetTextured(PresetTexture.WaterDroplets);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.exportshape.CustomShape": "\n        //Open an excel file\n        InputStream fileStream = this.getResourceStream(\"xlsx/CustomShapes.xlsx\");\n        workbook.open(fileStream);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigureScaling": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        InputStream stream = this.getResourceStream(\"logo.png\");\r\n        IShape picture = null;\r\n        try {\r\n            picture = sheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 395, 60);\r\n        } catch (IOException ioe) {\r\n\r\n        }\r\n        sheet.getRange(\"B2:D4\").setValue(\"Text\");\r\n\r\n        sheet.getPageSetup().setPrintGridlines(true);\r\n\r\n        //Set scaling.\r\n        sheet.getPageSetup().setZoom(200);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePageBreaks": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        sheet.getRange(\"A1:B5\").setValue(new Object[][]\r\n            {\r\n                {1, 2},\r\n                {3, 4},\r\n                {5, 6},\r\n                {7, 8},\r\n                {9, 10}\r\n            });\r\n\r\n        //Add page break\r\n        sheet.getHPageBreaks().add(sheet.getRange(\"B3\"));\r\n        sheet.getVPageBreaks().add(sheet.getRange(\"B3\"));\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePrintTails": "\n        workbook.open(this.getResourceStream(\"xlsx/RepeatTails.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Repeat the columns \"I\" at the left of each page when saving worksheet2 to pdf.\n        IWorksheet worksheet1 = workbook.getWorksheets().get(0);\n        worksheet1.getPageSetup().setPrintTailColumns(\"$I:$I\");\n\n        //Repeat the row 50th at the bottom of each page when saving worksheet1 to pdf.\n        IWorksheet worksheet2 = workbook.getWorksheets().get(1);\n        worksheet2.getPageSetup().setPrintTailRows(\"$50:$50\");\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePrintTitles": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        int row = 50;\r\n        int column = 14;\r\n        Object[][] data = new Object[row][column];\r\n        for (int i = 0; i < row; i++) {\r\n            for (int j = 0; j < column; j++) {\r\n                data[i][j] = \"R\" + i + \"C\" + j;\r\n            }\r\n        }\r\n\r\n        //Set data.\r\n        sheet.getRange(\"A1:N50\").setValue(data);\r\n\r\n        sheet.getRange(\"A2:N4\").setValue(\"TitleRows\");\r\n        sheet.getRange(\"A2:N4\").getInterior().setColor(Color.GetGreen());\r\n\r\n        sheet.getRange(\"C1:E50\").setValue(\"TitleColumns\");\r\n        sheet.getRange(\"C1:E50\").getInterior().setColor(Color.GetYellow());\r\n\r\n        sheet.getPageSetup().setPrintHeadings(true);\r\n\r\n        //Set print titles.\r\n        sheet.getPageSetup().setPrintTitleRows(\"$2:$4\");\r\n        sheet.getPageSetup().setPrintTitleColumns(\"$C:$E\");\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigureDraft": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Set text.\r\n        sheet.getRange(\"A1:G10\").setValue(\"Text\");\r\n\r\n        //Add picture in sheet.\r\n        InputStream stream = this.getResourceStream(\"logo.png\");\r\n        IShape picture = null;\r\n        try {\r\n            picture = sheet.getShapes().addPicture(stream, ImageType.PNG, 20, 20, 395, 60);\r\n        } catch (IOException ioe) {\r\n\r\n        }\r\n\r\n        //Add header graphic.\r\n        InputStream stream1 = this.getResourceStream(\"logo.png\");\r\n        sheet.getPageSetup().setCenterHeader(\"&G\");\r\n        sheet.getPageSetup().getCenterHeaderPicture().setGraphicStream(stream1, ImageType.PNG);\r\n        sheet.getPageSetup().getCenterHeaderPicture().setWidth(100);\r\n        sheet.getPageSetup().getCenterHeaderPicture().setHeight(13);\r\n\r\n        //Set print without graphics in page content area.\r\n        sheet.getPageSetup().setDraft(true);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigureOritation": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        sheet.getRange(\"A1:G10\").setValue(\"Text\");\r\n\r\n        //Set page orientation.\r\n        sheet.getPageSetup().setOrientation(PageOrientation.Landscape);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePrintArea": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        int row = 50;\r\n        int column = 14;\r\n        Object[][] data = new Object[row][column];\r\n        for (int i = 0; i < row; i++) {\r\n            for (int j = 0; j < column; j++) {\r\n                data[i][j] = \"R\" + i + \"C\" + j;\r\n            }\r\n        }\r\n\r\n        //Set data.\r\n        sheet.getRange(\"A1:N50\").setValue(data);\r\n        sheet.getRange(\"C10:H20\").setValue(\"PrintArea\");\r\n        sheet.getRange(\"C10:H20\").getInterior().setColor(Color.GetYellow());\r\n        sheet.getPageSetup().setPrintHeadings(true);\r\n\r\n        //Set print area.\r\n        sheet.getPageSetup().setPrintArea(\"$C$10:$H$20\");\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePageSetup": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Set data.\r\n        sheet.getRange(\"A1:G10\").setValue(\"Text\");\r\n\r\n        //Print rowheader and columnheader.\r\n        sheet.getPageSetup().setPrintHeadings(true);\r\n\r\n        //Print gridlines.\r\n        sheet.getPageSetup().setPrintGridlines(true);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigureBlackAndWhite": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        InputStream stream = this.getResourceStream(\"logo.png\");\r\n        IShape picture = null;\r\n        try {\r\n            picture = sheet.getShapes().addPicture(stream, com.grapecity.documents.excel.drawing.ImageType.PNG, 20, 20, 395, 60);\r\n        } catch (IOException ioe) {\r\n\r\n        }\r\n\r\n        //Set text font color.\r\n        sheet.getRange(\"A1:D4\").setValue(\"Font\");\r\n        sheet.getRange(\"A1:D4\").getFont().setColor(Color.GetRed());\r\n\r\n        //Set cell color\r\n        sheet.getRange(\"A7:D10\").setValue(\"Green\");\r\n        sheet.getRange(\"A7:D10\").getInterior().setColor(Color.GetGreen());\r\n\r\n        //Set print black and white.\r\n        sheet.getPageSetup().setBlackAndWhite(true);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigureBestFitRowColumn": "\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n\n        // Set text for some cells.\n        sheet.getRange(\"A1\").setValue(\"Grapecity\");\n        sheet.getRange(\"A2\").setValue(\"Document For .NET\");\n        sheet.getRange(\"B1\").setValue(\"Grapecity\");\n        sheet.getRange(\"B2\").setValue(\"Excel for .NET\");\n        //Set font size of cell \"A2\"\n        sheet.getRange(\"A2\").getFont().setSize(20);\n\n        // Set bestFitColumns/bestFitRows as true.\n        sheet.getPageSetup().setBestFitColumns(true);\n        sheet.getPageSetup().setBestFitRows(true);\n\n        // Set print gridline and heading.\n        sheet.getPageSetup().setPrintGridlines(true);\n        sheet.getPageSetup().setPrintHeadings(true);\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePageOrder": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Set pages' data.\r\n        sheet.getRange(\"A1:J46\").setValue(\"Page1\");\r\n        sheet.getRange(\"A1:J46\").getInterior().setColor(Color.GetLightGreen());\r\n\r\n        sheet.getRange(\"A47:J92\").setValue(\"Page2\");\r\n        sheet.getRange(\"A47:J92\").getInterior().setColor(Color.GetLightYellow());\r\n\r\n        sheet.getRange(\"K1:T46\").setValue(\"Page3\");\r\n        sheet.getRange(\"K1:T46\").getInterior().setColor(Color.GetOrangeRed());\r\n\r\n        sheet.getRange(\"K47:T92\").setValue(\"Page4\");\r\n        sheet.getRange(\"K47:T92\").getInterior().setColor(Color.GetDarkOrange());\r\n\r\n        sheet.getPageSetup().setPrintHeadings(true);\r\n\r\n        //Set page order. Now the page order is p1-p3-p2-p4. Origin is p1-p2-p3-p4.\r\n        sheet.getPageSetup().setOrder(Order.OverThenDown);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePagination": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        int row = 50;\r\n        int column = 14;\r\n        Object[][] data = new Object[row][column];\r\n        for (int i = 0; i < row; i++) {\r\n            for (int j = 0; j < column; j++) {\r\n                data[i][j] = \"R\" + i + \"C\" + j;\r\n            }\r\n        }\r\n\r\n        //Set data\r\n        sheet.getRange(\"A1:N50\").setValue(data);\r\n\r\n        //Set paper size\r\n        sheet.getPageSetup().setPaperSize(PaperSize.A5);\r\n\r\n        //With API the margin's unit is pound, with Excel the margins display unit is inch.\r\n        //One inch eaquals to 72 pounds. If the top margin is 0.8 inch, then please set PageSetup.TopMargin = 0.8*72(57.6);\r\n        sheet.getPageSetup().setTopMargin(57.6);\r\n\r\n        //Top margin in excel is 0.8 inch\r\n        sheet.getPageSetup().setBottomMargin(21.6);\r\n        sheet.getPageSetup().setLeftMargin(28.8);\r\n        sheet.getPageSetup().setRightMargin(0);\r\n        sheet.getPageSetup().setHeaderMargin(0);\r\n        sheet.getPageSetup().setFooterMargin(93.6);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigurePrintPageRange": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Set pages' data.\r\n        sheet.getRange(\"A1:J46\").setValue(\"Page1\");\r\n        sheet.getRange(\"A1:J46\").getInterior().setColor(Color.GetLightGreen());\r\n\r\n        sheet.getRange(\"A47:J92\").setValue(\"Page2\");\r\n        sheet.getRange(\"A47:J92\").getInterior().setColor(Color.GetLightYellow());\r\n\r\n        sheet.getRange(\"K1:T46\").setValue(\"Page3\");\r\n        sheet.getRange(\"K1:T46\").getInterior().setColor(Color.GetOrangeRed());\r\n\r\n        sheet.getRange(\"K47:T92\").setValue(\"Page4\");\r\n        sheet.getRange(\"K47:T92\").getInterior().setColor(Color.GetDarkOrange());\r\n\r\n        sheet.getRange(\"U1:AD46\").setValue(\"Page5\");\r\n        sheet.getRange(\"U1:AD46\").getInterior().setColor(Color.GetLightBlue());\r\n\r\n        sheet.getRange(\"U47:AD92\").setValue(\"Page6\");\r\n        sheet.getRange(\"U47:AD92\").getInterior().setColor(Color.GetIndianRed());\r\n        sheet.getPageSetup().setPrintHeadings(true);\r\n\r\n        //Set print page range, print p1, p3 to p5.\r\n        sheet.getPageSetup().setPrintPageRange(\"1,3-5\");\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.pdfpagesetup.ConfigureHeaderFooter": "\r\n        IWorksheet sheet = workbook.getWorksheets().get(0);\r\n\r\n        //Set data.\r\n        sheet.getRange(\"A1:G10\").setValue(\"Text\");\r\n\r\n        //Set page header.\r\n        sheet.getPageSetup().setLeftHeader(\"&\\\"Arial,Italic\\\"LeftHeader\");\r\n        sheet.getPageSetup().setRightHeader(\"&KFF0000com.grapecity\");\r\n        sheet.getPageSetup().setCenterHeader(\"&P\");\r\n\r\n        //Set page footer picture.\r\n        InputStream stream = this.getResourceStream(\"logo.png\");\r\n        sheet.getPageSetup().setCenterFooter(\"&G\");\r\n        sheet.getPageSetup().getCenterFooterPicture().setGraphicStream(stream, ImageType.PNG);\r\n        sheet.getPageSetup().getCenterFooterPicture().setWidth(100);\r\n        sheet.getPageSetup().getCenterFooterPicture().setHeight(13);\r\n    ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.CustomPageInfos": "\n        workbook.open(this.getResourceStream(\"xlsx/KeepTogether.xlsx\"));\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Firstly, create a printManager.\n        PrintManager printManager = new PrintManager();\n\n        //Get the natural pagination information of the worksheet.\n        //The first page of the natural pagination is \"A1:F37\", the second page is from row \"A38:F73\" \n        List<PageInfo> pages = printManager.paginate(worksheet);\n\n        //Custom the pageInfos.\n        pages.get(0).getPageContent().setRange(worksheet.getRange(\"A1:F36\")); // The first page is \"A1:F36\".\n        pages.get(0).getPageSettings().setCenterHeader(\"&KFF0000&20 Budget summary report\"); // The center header of the first page will show the text \"Budget summary report\".\n        pages.get(0).getPageSettings().setCenterFooter(\"&KFF0000&20 Page &P\"); // The center footer of the first page will show the page number \"1\".\n        pages.get(1).getPageContent().setRange(worksheet.getRange(\"A37:F73\"));// The second page is \"A37:F73\".\n\n        //Save the modified pages into pdf file.\n        printManager.savePageInfosToPDF(outputStream, pages);\n\t ",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.KeepTogether": "\n        workbook.open(this.getResourceStream(\"xlsx/KeepTogether.xlsx\"));\n        \n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //The first page of the natural pagination is from row 1th to 37th, the second page is from row 38th to 73th. \n        List<IRange> keepTogetherRanges = new ArrayList<IRange>();\n        //The row 37th and 38th need to keep together. So the pagination results are: the first page if from row 1th to 36th, the second page is from row 37th to 73th.\n        keepTogetherRanges.add(worksheet.getRange(\"37:38\"));\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        //Get the pagination information of the worksheet.\n        List<PageInfo> pages = printManager.paginate(worksheet, keepTogetherRanges, null);\n\n        //Save the pages into pdf file.\n        printManager.savePageInfosToPDF(outputStream, pages);\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.RenderExcelRangesInsideAPDF": "\n        workbook.open(this.getResourceStream(\"xlsx/FinancialReport.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\t\t\n        //Create a pdf document.\n        PDDocument doc = null;\n\t\ttry {\n\t\t\tdoc = PDDocument.load(this.getResourceStream(\"Acme-Financial Report 2018.pdf\"));\n\t\t} catch (IOException e1) {\n\t\t\te1.printStackTrace();\n\t\t}\n   \n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        //Draw the contents of the sheet3 to the fourth page. \n        IRange printArea1 = workbook.getWorksheets().get(2).getRange(\"A3:C24\");\n        Size size1 = printManager.getSize(printArea1);\n        printManager.draw(doc, doc.getPage(3), new Rectangle(306, 215, size1.getWidth(), size1.getHeight()), printArea1);\n\n        //Draw the contents of the sheet1 to the fifth page. \n        IRange printArea2 = workbook.getWorksheets().get(0).getRange(\"A4:E29\");\n        Size size2 = printManager.getSize(printArea2);\n        printManager.draw(doc, doc.getPage(4), new Rectangle(71, 250, size2.getWidth(), size2.getHeight()), printArea2);\n\n        //Draw the contents of the sheet2 to the sixth page. \n        IRange printArea3 = workbook.getWorksheets().get(1).getRange(\"A2:E28\");\n        Size size3 = printManager.getSize(printArea3);\n        printManager.draw(doc, doc.getPage(5), new Rectangle(71, 230, 783, size3.getHeight()), printArea3);    \n\n        //Save the modified pages into pdf file.\n        try {\n            doc.save(outputStream);\n            doc.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.DrawRangeInsideAPDF": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"A4:C4\").setValue(new String[] {\"Device\", \"Quantity\", \"Unit Price\"});\n        worksheet.getRange(\"A5:C8\").setValue(new Object[][]\n        {\n        \t{\"T540p\", 12, 9850},\n        \t{\"T570\", 5, 7460},\n        \t{\"Y460\", 6, 5400},\n        \t{\"Y460F\", 8, 6240}\n        });\n\n        //Set style\n        worksheet.getRange(\"A4:C4\").getFont().setBold(true);\n        worksheet.getRange(\"A4:C4\").getFont().setColor(Color.GetWhite());\n        worksheet.getRange(\"A4:C4\").getInterior().setColor(Color.GetLightBlue());\n        worksheet.getRange(\"A5:C8\").getBorders().get(BordersIndex.InsideHorizontal).setColor(Color.GetOrange());\n        worksheet.getRange(\"A5:C8\").getBorders().get(BordersIndex.InsideHorizontal).setLineStyle(BorderLineStyle.DashDot);\n        \n        //Create a pdf document.\n        PDDocument doc = new PDDocument();\n        PDPage page = new PDPage();\n        doc.addPage(page);\t\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        // Draw the Range\"A4:C8\" to the specified location on the page. \n        printManager.draw(doc, page, new Point(30, 100), worksheet.getRange(\"A4:C8\"));\n\n        //Save the modified pages into pdf file.\n        try {\n            doc.save(outputStream);\n            doc.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.PrintMultipleWorksheetsToOnePage": "\n        workbook.open(this.getResourceStream(\"xlsx/Multiple sheets one page.xlsx\"));\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Create a pdf document.\n        PDDocument doc = new PDDocument();\n        //This page will save datas for multiple pages.\n        PDPage page = new PDPage();\n        doc.addPage(page);\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n        \n        //Get the pagination information of the workbook.\n        List<PageInfo> pages = printManager.paginate(workbook);\n\n        //Divide the multiple pages into 1 rows and 2 columns and printed them on one page.\n        printManager.draw(doc, page, pages, 1, 2);\n\n        //Save the modified pages into pdf file.\n        try {\n        \tdoc.save(outputStream);\n        \tdoc.close();\n        } catch (IOException e) {\n        \te.printStackTrace();\n        }\n        \n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.ManageHeadersOnDifferentPages": "\n        workbook.open(this.getResourceStream(\"xlsx/MultipleHeaders.xlsx\"));\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        List<RepeatSetting> repeatSettings = new ArrayList<RepeatSetting>();\n        \n        //The title rows of the \"B2:F87\" is \"$2:$2\"\n        RepeatSetting repeatSetting = new RepeatSetting();\n        repeatSetting.setTitleRowStart(1);\n        repeatSetting.setTitleRowEnd(1);\n        repeatSetting.setRange(worksheet.getRange(\"B2:F87\"));\n        repeatSettings.add(repeatSetting);\n\n        //The title rows of the \"B91:F189\" is \"$91:$91\"\n        RepeatSetting repeatSetting2 = new RepeatSetting();\n        repeatSetting2.setTitleRowStart(88);\n        repeatSetting2.setTitleRowEnd(88);\n        repeatSetting2.setRange(worksheet.getRange(\"B89:F149\"));\n        repeatSettings.add(repeatSetting2);\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        //Get the pagination information of the worksheet.\n        List<PageInfo> pages = printManager.paginate(worksheet, null, repeatSettings);\n\n        //Save the modified pages into pdf file.\n        printManager.savePageInfosToPDF(outputStream, pages);\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.SaveMultipleWorkbooksToPDF": "\n        workbook.open(this.getResourceStream(\"xlsx/Any year calendar1.xlsx\"));\n\n        Workbook workbook2 = new Workbook();\n        workbook2.open(this.getResourceStream(\"xlsx/Any year calendar (Ion theme)1.xlsx\"));\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        //Save the workbook1 and workbook2 into one pdf file.\n        List<IWorkbook> workbooks = new ArrayList<IWorkbook>();\n        workbooks.add(workbook);\n        workbooks.add(workbook2);\n        printManager.saveWorkbooksToPDF(outputStream, workbooks);\n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.PrintMultiplePagesToOnePage": "\n        workbook.open(this.getResourceStream(\"xlsx/Multiple sheets one page.xlsx\"));\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Create a pdf document.\n        PDDocument doc = new PDDocument();\n        //This page will save datas for multiple pages.\n        PDPage page = new PDPage();\n        doc.addPage(page);\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n        \n        //Get the pagination information of the workbook.\n        List<PageInfo> pages = printManager.paginate(workbook);\n\n        //Divide the multiple pages into 1 rows and 2 columns and printed them on one page.\n        printManager.draw(doc, page, pages, 1, 2);\n\n        //Save the modified pages into pdf file.\n        try {\n        \tdoc.save(outputStream);\n        \tdoc.close();\n        } catch (IOException e) {\n        \te.printStackTrace();\n        }\n        \n\t",
  "com.grapecity.documents.excel.examples.features.pdfexporting.printmanager.PrintSpecificPages": "\n        workbook.open(this.getResourceStream(\"xlsx/PrintSpecificPDFPages.xlsx\"));\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Create a PrintManager.\n        PrintManager printManager = new PrintManager();\n\n        //Get the natural pagination information of the workbook.\n        List<PageInfo> pages = printManager.paginate(workbook);\n\n        //Pick some pages to print.\n        List<PageInfo> newPages = new ArrayList<PageInfo>();\n        newPages.add(pages.get(0));\n        newPages.add(pages.get(2));\n\n        //Update the page number and the page settings of each page. The page number is continuous.\n        printManager.updatePageNumberAndPageSettings(newPages);\n\n        //Save the pages into pdf file.\n        printManager.savePageInfosToPDF(outputStream, newPages);\n\t",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPaperScaling": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set paper scaling\n        //Method 1: Set percent scale \n        worksheet.getPageSetup().setIsPercentScale(true);\n        worksheet.getPageSetup().setZoom(150);\n\n        //Or Method 2: Fit to page's wide & tall\n        //worksheet.getPageSetup().setIsPercentScale(false);\n        //worksheet.getPageSetup().setFitToPagesWide(3);\n        //worksheet.getPageSetup().setFitToPagesTall(4);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigSheetPrintSettings": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set sheet\n        worksheet.getPageSetup().setPrintGridlines(true);\n        worksheet.getPageSetup().setPrintHeadings(true);\n        worksheet.getPageSetup().setBlackAndWhite(true);\n        worksheet.getPageSetup().setPrintComments(PrintLocation.InPlace);\n        worksheet.getPageSetup().setPrintErrors(PrintErrors.Dash);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPageMargins": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set margins, in points.\n        worksheet.getPageSetup().setTopMargin(36);\n        worksheet.getPageSetup().setBottomMargin(36);\n        worksheet.getPageSetup().setRightMargin(72);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPrintTailColumns": "\n        workbook.open(this.getResourceStream(\"xlsx/RepeatTails.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        \n        // Repeat the column \"I\" at the right of each page when saving pdf.\n        worksheet.getPageSetup().setPrintTailColumns(\"$I:$I\");\n\n\t",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPrintTitleRows": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set rows to repeat at top\n        worksheet.getPageSetup().setPrintTitleRows(\"$5:$10\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPaperSize": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set A4 paper size\n        worksheet.getPageSetup().setPaperSize(PaperSize.A4);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPageOrientation": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set page orientation, default is portrait.\n        worksheet.getPageSetup().setOrientation(PageOrientation.Landscape);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigFirstPageHeaderFooter": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set first page headerfooter\n        worksheet.getPageSetup().setDifferentFirstPageHeaderFooter(true);\n\n        worksheet.getPageSetup().getFirstPage().getCenterHeader().setText(\"&T\");\n        worksheet.getPageSetup().getFirstPage().getRightFooter().setText(\"&D\");\n\n        //Set first page headerfooter's graphic\n        worksheet.getPageSetup().getFirstPage().getLeftFooter().setText(\"&G\");\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        worksheet.getPageSetup().getFirstPage().getLeftFooter().getPicture().setGraphicStream(stream, ImageType.PNG);\n        worksheet.getPageSetup().getFirstPage().getLeftFooter().getPicture().setWidth(100);\n        worksheet.getPageSetup().getFirstPage().getLeftFooter().getPicture().setHeight(13);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPrintTailRows": "\n        workbook.open(this.getResourceStream(\"xlsx/RepeatTails.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(1);\n        \n        //Repeat the row 50th at the bottom of each page when saving pdf.\n        worksheet.getPageSetup().setPrintTailRows(\"$50:$50\");\n\n\t",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPageOrder": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set page order, default is DownThenOver.\n        worksheet.getPageSetup().setOrder(Order.OverThenDown);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPageCenter": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set center, default is false.\n        worksheet.getPageSetup().setCenterHorizontally(true);\n        worksheet.getPageSetup().setCenterVertically(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigFirstPageNumber": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getPageSetup().setCenterFooter(\"&P\");\n\n        //Set first page number, default is p1.\n        worksheet.getPageSetup().setFirstPageNumber(3);\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigHeaderFooter": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set page headerfooter\n        worksheet.getPageSetup().setLeftHeader(\"&\\\"Arial,Italic\\\"LeftHeader\");\n        worksheet.getPageSetup().setCenterHeader(\"&P\");\n\n        //Set page headerfooter's graphic\n        worksheet.getPageSetup().setCenterFooter(\"&G\");\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        worksheet.getPageSetup().getCenterFooterPicture().setGraphicStream(stream, ImageType.PNG);\n\n        //If you have picture resources locally, you can also set graphic in this way.\n        //worksheet.getPageSetup().setCenterFooter(\"&G\");\n        //worksheet.getPageSetup().getCenterFooterPicture().setFilename(\"C:\\\\picture.png\");\n        //worksheet.PageSetup.CenterFooterPicture.Filename = @\"C:\\picture.png\";\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPrintArea": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set print area & print titles\n        worksheet.getPageSetup().setPrintArea(\"$D$5:$G$10\");\n        worksheet.getPageSetup().setPrintTitleRows(\"$5:$10\");\n        worksheet.getPageSetup().setPrintTitleColumns(\"$D:$G\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigPrintTitleColumns": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set columns to repeat at left\n        worksheet.getPageSetup().setPrintTitleColumns(\"$D:$G\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.pagesetup.ConfigEvenPageHeaderFooter": "\n        workbook.open(this.getResourceStream(\"xlsx/PageSetup Demo.xlsx\"));\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set even page headerfooter\n        worksheet.getPageSetup().setOddAndEvenPagesHeaderFooter(true);\n\n        worksheet.getPageSetup().getEvenPage().getCenterHeader().setText(\"&T\");\n        worksheet.getPageSetup().getEvenPage().getRightFooter().setText(\"&D\");\n\n        //Set even page headerfooter's graphic\n        worksheet.getPageSetup().getEvenPage().getLeftFooter().setText(\"&G\");\n        InputStream stream = this.getResourceStream(\"logo.png\");\n        worksheet.getPageSetup().getEvenPage().getLeftFooter().getPicture().setGraphicStream(stream, ImageType.PNG);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.ReApplyFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        //Weight less than 72.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, \"<72\");\n\n        //change filter range data.\n        worksheet.getRange(\"E4\").setValue(71);\n        //re-apply filter condition, row 4 will be shown. \n        worksheet.getAutoFilter().applyFilter();\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.ChangeWorksheetFilterRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"D3\").setValue(\"Numbers\");\n        worksheet.getRange(\"D4\").setValue(1);\n        worksheet.getRange(\"D5\").setValue(2);\n        worksheet.getRange(\"D6\").setValue(3);\n\n        //first time invoke. worksheet's filter range will be D3:D6.\n        worksheet.getRange(\"D3:D6\").autoFilter(0, \"<>2\");\n\n        //set AutoFilterMode to false. must set this property before, otherwise, subsequent code can not take effort.\n        worksheet.setAutoFilterMode(false);\n\n        worksheet.getRange(\"A5\").setValue(\"Numbers\");\n        worksheet.getRange(\"A6\").setValue(1);\n        worksheet.getRange(\"A7\").setValue(2);\n        worksheet.getRange(\"A8\").setValue(3);\n\n        //second time invoke. worksheet's filter range will change to A5:A8.\n        worksheet.getRange(\"A5:A8\").autoFilter(0, \"<>2\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.MultiSelectFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        worksheet.getRange(\"E2:E7\").setNumberFormat(\"0.00\");\n        //multi select, selcet the weight equals to 62.00 and 76.00.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, new Object[]{\"62.00\", \"76.00\"}, AutoFilterOperator.Values);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.ClearFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        worksheet.getRange(\"A1:F7\").autoFilter(4, \"<80\");\n        worksheet.getRange(\"A1:F7\").autoFilter(0, \"*e*\");\n        worksheet.getRange(\"A1:F7\").autoFilter(1, \"=Washington\");\n\n        // clear second column filter only.\n        worksheet.getRange(\"A1:F7\").autoFilter(1);\n\n        // clear all filters\n        worksheet.getAutoFilter().showAllData();\n\n        // another way to clear all filters, same as AutoFilter.ShowAllData()\n        worksheet.showAllData();\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.datefiltering.DateDynamicFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        //filter all dates in February.\n        worksheet.getRange(\"A1:F7\").autoFilter(2, DynamicFilterType.M2, AutoFilterOperator.Dynamic);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.datefiltering.DateFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        String criteria1 = new GregorianCalendar(1972, 6, 3).getTime().toString();\n        String criteria2 = new GregorianCalendar(1993, 1, 15).getTime().toString();\n        //filter date between 1972.7.3 and 1993.2.15\n        worksheet.getRange(\"A1:F7\").autoFilter(2, \">=\" + criteria1, AutoFilterOperator.And, \"<=\" + criteria2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.filteringbycolor.FilterByCellColor": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        worksheet.getRange(\"E2\").getInterior().setColor(Color.GetGreen());\n        worksheet.getRange(\"E5\").getInterior().setColor(Color.GetGreen());\n        worksheet.getRange(\"E6\").getInterior().setColor(Color.GetRed());\n\n        //filter in the rows which cell color is green.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, worksheet.getRange(\"E2\").getInterior().getColor(), AutoFilterOperator.CellColor);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.filteringbycolor.FilterByAutomaticFontColor": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        worksheet.getRange(\"E2\").getFont().setColor(Color.GetGreen());\n        worksheet.getRange(\"E5\").getFont().setColor(Color.GetGreen());\n        worksheet.getRange(\"E6\").getFont().setColor(Color.GetRed());\n\n        //filter in the rows which font color is automatic color.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, null, AutoFilterOperator.AutomaticFontColor);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.filteringbycolor.FilterByFontColor": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        worksheet.getRange(\"E2\").getFont().setColor(Color.GetGreen());\n        worksheet.getRange(\"E5\").getFont().setColor(Color.GetGreen());\n        worksheet.getRange(\"E6\").getFont().setColor(Color.GetRed());\n\n        //filter in the rows which font color is green.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, worksheet.getRange(\"E2\").getFont().getColor(), AutoFilterOperator.FontColor);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.filteringbycolor.FilterByNoFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n        worksheet.getRange(\"E2\").getInterior().setColor(Color.GetGreen());\n        worksheet.getRange(\"E5\").getInterior().setColor(Color.GetGreen());\n        worksheet.getRange(\"E6\").getInterior().setColor(Color.GetRed());\n\n        //filter in the rows which cell color is no fill.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, null, AutoFilterOperator.NoFill);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.textfiltering.TextFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //Name contains \"e\".\n        worksheet.getRange(\"A1:F7\").autoFilter(0, \"*e*\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.numberfiltering.NumberFilter": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //Weight less than 72.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, \"<72\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.filteringbyicon.FilterByNoIcon": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        IIconSetCondition iconset = worksheet.getRange(\"E2:E7\").getFormatConditions().addIconSetCondition();\n        iconset.setIconSet(workbook.getIconSets().get(IconSetType.Icon3TrafficLights1));\n\n        IFormatCondition condition = (IFormatCondition) worksheet.getRange(\"E2:E7\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.Between, \"71\", \"79\");\n        condition.setStopIfTrue(true);\n\n        //filter in the rows which has no icon.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, null, AutoFilterOperator.NoIcon);\n\n    ",
  "com.grapecity.documents.excel.examples.features.filtering.filteringbyicon.FilterByIcon": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        IIconSetCondition iconset = worksheet.getRange(\"E2:E7\").getFormatConditions().addIconSetCondition();\n        iconset.setIconSet(workbook.getIconSets().get(IconSetType.Icon3TrafficLights1));\n\n        //filter in the rows which icon is green light.\n        worksheet.getRange(\"A1:F7\").autoFilter(4, workbook.getIconSets().get(IconSetType.Icon3TrafficLights1).get(2), AutoFilterOperator.Icon);\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.AddSlicersForTable": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //add two slicers for Category column.\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n        ISlicer slicer2 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate2\", \"Category\", 30, 700, 100, 200);\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.SlicerDuplicate": "\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //Create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //Add slicer\n        ISlicer slicer = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n\n        //Duplicate slicer\n        IShape newShape = slicer.getShape().duplicate();\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.AddCustomSlicerStyle": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //add slicer\n        ISlicer slicer = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate2\", \"Category\", 30, 550, 100, 200);\n\n        //create custom slicer style.\n        ITableStyle slicerStyle = workbook.getTableStyles().add(\"test\");\n        //set ShowAsAvailableSlicerStyle to true, the style will be treated as slicer style.\n        slicerStyle.setShowAsAvailableSlicerStyle(true);\n        slicerStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setName(\"Arial\");\n        slicerStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setBold(false);\n        slicerStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setItalic(false);\n        slicerStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setColor(Color.GetWhite());\n        slicerStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setColor(Color.GetLightPink());\n        slicerStyle.getTableStyleElements().get(TableStyleElementType.WholeTable).getInterior().setColor(Color.GetLightGreen());\n\n        //set slicer style to custom style.\n        slicer.setStyle(slicerStyle);\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.SlicerCopy": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //Create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //Add slicer, slicer's range is Range[\"H3:J16\"]\n        ISlicer slicer = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n\n        //Range[\"H3:J16\"] must contain slicer's range, copy a new shape to Range[\"K3:M16\"]\n        worksheet.getRange(\"H3:J16\").copy(worksheet.getRange(\"K3\"));\n        //worksheet.getRange(\"H3:J16\").copy(worksheet.getRange(\"K3:M16\"));\n\n        //Cross sheet copy, copy a new shape to worksheet2's Range[\"K3:M16\"]\n        //IWorksheet worksheet2 = workbook.getWorksheets().add();\n        //worksheet.getRange(\"H3:J16\").copy(worksheet2.getRange(\"K3\"));\n        //worksheet.getRange(\"H3:J16\").copy(worksheet2.getRange(\"K3:M16\"));\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.SlicerCut": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //Create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //Add slicer, slicer's range is Range[\"H3:J16\"]\n        ISlicer slicer = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n\n        //Range[\"H3:J16\"] must contain slicer's range, cut a new shape to Range[\"K3:M16\"]\n        worksheet.getRange(\"H3:J16\").cut(worksheet.getRange(\"K3\"));\n        //worksheet.getRange(\"H3:J16\").cut(worksheet.getRange(\"K3:M16\"));\n\n        //Cross sheet cut, cut a new shape to worksheet2's Range[\"K3:M16\"]\n        //IWorksheet worksheet2 = workbook.getWorksheets().add();\n        //worksheet.getRange(\"H3:J16\").cut(worksheet2.getRange(\"K3\"));\n        //worksheet.getRange(\"H3:J16\").cut(worksheet2.getRange(\"K3:M16\"));\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.ApplySlicerStyle": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //add slicer\n        ISlicer slicer = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n\n        //set slicer style to build in style.\n        slicer.setStyle(workbook.getTableStyles().get(\"SlicerStyleLight2\"));\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.DoTableFilter": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //add slicer\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 20, 550, 100, 200);\n\n        //Apply table filter, this will synchronize to the slicer, the slicer1's selected item is \"Fruit\".\n        worksheet.getRange(\"A1:F16\").autoFilter(2, \"Fruit\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.ConfigSlicerLayout": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Product\", \"productCache\");\n\n        //add slicer\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"product1\", \"Product\", 30, 550, 100, 200);\n\n        //config slicer's layout.\n        slicer1.setNumberOfColumns(2);\n        slicer1.setRowHeight(25);\n        slicer1.setDisplayHeader(false);\n        slicer1.getShape().setPlacement(Placement.Move);\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.UseSlicerToClearFilter": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //Create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //Add slicer\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n\n        //do filter operation. filter out vegetables.\n        slicer1.getSlicerCache().getSlicerItems().get(\"Vegetables\").setSelected(false);\n\n        //clear slicer filter.\n        slicer1.getSlicerCache().clearAllFilters();\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.UseSlicerDoFilter": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F16\"), true);\n        table.getColumns().get(3).getDataBodyRange().setNumberFormat(\"$#,##0.00\");\n\n        //Create slicer cache for table.\n        ISlicerCache cache = workbook.getSlicerCaches().add(table, \"Category\", \"categoryCache\");\n\n        //Add slicer\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"cate1\", \"Category\", 30, 550, 100, 200);\n\n        //do filter operation. filter out vegetables.\n        slicer1.getSlicerCache().getSlicerItems().get(\"Vegetables\").setSelected(false);\n\n    ",
  "com.grapecity.documents.excel.examples.features.slicer.AddSlicersForPivotTable": "\n\n        Object sourceData = new Object[][]{\n                {\"Order ID\", \"Product\", \"Category\", \"Amount\", \"Date\", \"Country\"},\n                {1, \"Carrots\", \"Vegetables\", 4270, new GregorianCalendar(2018, 0, 6), \"United States\"},\n                {2, \"Broccoli\", \"Vegetables\", 8239, new GregorianCalendar(2018, 0, 7), \"United Kingdom\"},\n                {3, \"Banana\", \"Fruit\", 617, new GregorianCalendar(2018, 0, 8), \"United States\"},\n                {4, \"Banana\", \"Fruit\", 8384, new GregorianCalendar(2018, 0, 10), \"Canada\"},\n                {5, \"Beans\", \"Vegetables\", 2626, new GregorianCalendar(2018, 0, 10), \"Germany\"},\n                {6, \"Orange\", \"Fruit\", 3610, new GregorianCalendar(2018, 0, 11), \"United States\"},\n                {7, \"Broccoli\", \"Vegetables\", 9062, new GregorianCalendar(2018, 0, 11), \"Australia\"},\n                {8, \"Banana\", \"Fruit\", 6906, new GregorianCalendar(2018, 0, 16), \"New Zealand\"},\n                {9, \"Apple\", \"Fruit\", 2417, new GregorianCalendar(2018, 0, 16), \"France\"},\n                {10, \"Apple\", \"Fruit\", 7431, new GregorianCalendar(2018, 0, 16), \"Canada\"},\n                {11, \"Banana\", \"Fruit\", 8250, new GregorianCalendar(2018, 0, 16), \"Germany\"},\n                {12, \"Broccoli\", \"Vegetables\", 7012, new GregorianCalendar(2018, 0, 18), \"United States\"},\n                {13, \"Carrots\", \"Vegetables\", 1903, new GregorianCalendar(2018, 0, 20), \"Germany\"},\n                {14, \"Broccoli\", \"Vegetables\", 2824, new GregorianCalendar(2018, 0, 22), \"Canada\"},\n                {15, \"Apple\", \"Fruit\", 6946, new GregorianCalendar(2018, 0, 24), \"France\"},\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F16\").setValue(sourceData);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //Create pivot cache.\n        IPivotCache pivotcache = workbook.getPivotCaches().create(worksheet.getRange(\"A1:F16\"));\n        //Create pivot tables.\n        IPivotTable pivottable1 = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"K5\"), \"pivottable1\");\n        IPivotTable pivottable2 = worksheet.getPivotTables().add(pivotcache, worksheet.getRange(\"N3\"), \"pivottable2\");\n        worksheet.getRange(\"D2:D16\").setNumberFormat(\"$#,##0.00\");\n\n        //Config pivot fields\n        IPivotField field_product1 = pivottable1.getPivotFields().get(1);\n        field_product1.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Amount1 = pivottable1.getPivotFields().get(3);\n        field_Amount1.setOrientation(PivotFieldOrientation.DataField);\n\n        IPivotField field_product2 = pivottable2.getPivotFields().get(5);\n        field_product2.setOrientation(PivotFieldOrientation.RowField);\n\n        IPivotField field_Amount2 = pivottable2.getPivotFields().get(2);\n        field_Amount2.setOrientation(PivotFieldOrientation.DataField);\n        field_Amount2.setFunction(ConsolidationFunction.Count);\n\n        //create slicer cache, the slicers base the slicer cache just control pivot table1.\n        ISlicerCache cache = workbook.getSlicerCaches().add(pivottable1, \"Product\");\n        ISlicer slicer1 = cache.getSlicers().add(workbook.getWorksheets().get(\"Sheet1\"), \"p1\", \"Product\", 30, 550, 100, 200);\n\n        //add pivot table2 for slicer cache, the slicers base the slicer cache will control pivot tabl1 and pivot table2.\n        cache.getPivotTables().addPivotTable(pivottable2);\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateDatabBarRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //data bar rule.\n        IDataBar dataBar = worksheet.getRange(\"E2:E7\").getFormatConditions().addDatabar();\n\n        dataBar.getMinPoint().setType(ConditionValueTypes.LowestValue);\n        dataBar.getMinPoint().setValue(null);\n        dataBar.getMaxPoint().setType(ConditionValueTypes.HighestValue);\n        dataBar.getMaxPoint().setValue(null);\n\n        dataBar.setBarFillType(DataBarFillType.Gradient);\n        dataBar.getBarColor().setColor(Color.GetGreen());\n        dataBar.setDirection(DataBarDirection.Context);\n        dataBar.getAxisColor().setColor(Color.GetRed());\n        dataBar.setAxisPosition(DataBarAxisPosition.Automatic);\n        dataBar.getNegativeBarFormat().setBorderColorType(DataBarNegativeColorType.Color);\n        dataBar.getNegativeBarFormat().getBorderColor().setColor(Color.GetBlue());\n        dataBar.getNegativeBarFormat().setColorType(DataBarNegativeColorType.Color);\n        dataBar.getNegativeBarFormat().getColor().setColor(Color.GetPink());\n        dataBar.setShowValue(false);\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateThreeColorScaleRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //three color scale.\n        IColorScale threeColorScaleRule = worksheet.getRange(\"E2:E7\").getFormatConditions().addColorScale(ColorScaleType.ThreeColorScale);\n        threeColorScaleRule.getColorScaleCriteria().get(0).setType(ConditionValueTypes.LowestValue);\n        threeColorScaleRule.getColorScaleCriteria().get(0).getFormatColor().setColor(Color.GetRed());\n\n        threeColorScaleRule.getColorScaleCriteria().get(1).setType(ConditionValueTypes.Percent);\n        threeColorScaleRule.getColorScaleCriteria().get(1).setValue(30);\n        threeColorScaleRule.getColorScaleCriteria().get(1).getFormatColor().setColor(Color.GetYellow());\n\n        threeColorScaleRule.getColorScaleCriteria().get(2).setType(ConditionValueTypes.HighestValue);\n        threeColorScaleRule.getColorScaleCriteria().get(2).getFormatColor().setColor(Color.GetGreen());\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateTopBottomRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //top bottom rule.\n        ITop10 condition = worksheet.getRange(\"E2:E7\").getFormatConditions().addTop10();\n        condition.setTopBottom(TopBottom.Top);\n        condition.setRank(50);\n        condition.setPercent(true);\n        condition.getInterior().setColor(Color.GetRed());\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateCellValueRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B:C\").setColumnWidth(17);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //weight between 66 and 70, set its interior color to light green.\n        IFormatCondition condition = (IFormatCondition) worksheet.getRange(\"E2:E7\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.Between, 66, 70);\n        condition.getInterior().setColor(Color.GetLightGreen());\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateExpressionRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //expression rule, format weight greater than 68.\n        IFormatCondition condition = (IFormatCondition) worksheet.getRange(\"E2:E7\").getFormatConditions().add(FormatConditionType.Expression, FormatConditionOperator.None, \"=E2>68\", null);\n        condition.getInterior().setColor(Color.GetLightPink());\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateIconSetRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //icon set rule.\n        IIconSetCondition condition = worksheet.getRange(\"E2:E7\").getFormatConditions().addIconSetCondition();\n        condition.setIconSet(workbook.getIconSets().get(IconSetType.Icon3Symbols));\n        condition.getIconCriteria().get(1).setOperator(FormatConditionOperator.GreaterEqual);\n        condition.getIconCriteria().get(1).setValue(30);\n        condition.getIconCriteria().get(1).setType(ConditionValueTypes.Percent);\n        condition.getIconCriteria().get(2).setOperator(FormatConditionOperator.GreaterEqual);\n        condition.getIconCriteria().get(2).setValue(70);\n        condition.getIconCriteria().get(2).setType(ConditionValueTypes.Percent);\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateTwoColorScaleRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //two color scale.\n        IColorScale twoColorScaleRule = worksheet.getRange(\"E2:E7\").getFormatConditions().addColorScale(ColorScaleType.TwoColorScale);\n        twoColorScaleRule.getColorScaleCriteria().get(0).setType(ConditionValueTypes.Number);\n        twoColorScaleRule.getColorScaleCriteria().get(0).setValue(62);\n        twoColorScaleRule.getColorScaleCriteria().get(0).getFormatColor().setColor(Color.GetRed());\n\n        twoColorScaleRule.getColorScaleCriteria().get(1).setType(ConditionValueTypes.Number);\n        twoColorScaleRule.getColorScaleCriteria().get(1).setValue(76);\n        twoColorScaleRule.getColorScaleCriteria().get(1).getFormatColor().setColor(Color.GetGreen());\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateAverageRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B:C\").setColumnWidth(17);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //weight above 1 std dev average, set its interior color to green.\n        IAboveAverage averageCondition = worksheet.getRange(\"E2:E7\").getFormatConditions().addAboveAverage();\n        averageCondition.setAboveBelow(AboveBelow.BelowAverage);\n        averageCondition.setNumStdDev(1);\n        averageCondition.getInterior().setColor(Color.GetPink());\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.DeleteConditionalFormatRules": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //iconset rule\n        IIconSetCondition iconset = worksheet.getRange(\"E2:E7\").getFormatConditions().addIconSetCondition();\n        iconset.setIconSet(workbook.getIconSets().get(IconSetType.Icon3TrafficLights1));\n\n        //cell value rule added later, it has the highest priority, set StopIfTrue to true, if cell match condition, it will not apply icon set rule.\n        IFormatCondition cellvalueRule = (IFormatCondition) worksheet.getRange(\"E2:E7\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.Between, \"66\", \"70\");\n        cellvalueRule.setStopIfTrue(true);\n\n        //delete icon set rule.\n        ((IIconSetCondition) worksheet.getRange(\"E2:E7\").getFormatConditions().get(1)).delete();\n\n        //delete all the rules\n        worksheet.getRange(\"E2:E7\").getFormatConditions().delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateMultiRuleForRange": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //iconset rule\n        IIconSetCondition iconset = worksheet.getRange(\"E2:E7\").getFormatConditions().addIconSetCondition();\n        iconset.setIconSet(workbook.getIconSets().get(IconSetType.Icon3TrafficLights1));\n\n        //cell value rule added later, it has the highest priority, set StopIfTrue to true, if cell match condition, it will not apply icon set rule.\n        IFormatCondition cellvalueRule = (IFormatCondition) worksheet.getRange(\"E2:E7\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.Between, \"66\", \"70\");\n        cellvalueRule.getFont().setThemeColor(ThemeColor.Accent1);\n        cellvalueRule.setStopIfTrue(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.conditionalformatting.CreateUniqueRule": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 80, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 72, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 71, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 80, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 58, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 71, 145}\n        };\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        //Unique rule.\n        IUniqueValues condition = worksheet.getRange(\"E2:E7\").getFormatConditions().addUniqueValues();\n        condition.setDupeUnique(DupeUnique.Unique);\n        condition.getFont().setName(\"Arial\");\n        condition.getInterior().setColor(Color.GetPink());\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.ActivateWorksheet": "\n\n        IWorksheet worksheet = workbook.getWorksheets().add();\n        //Activate new created worksheet.\n        worksheet.activate();\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.CopyWorksheetBetweenWorkbooks": "\n        //Load template file Home inventory.xlsx from resource to the source workbook\n        Workbook source_workbook = new Workbook();\n        InputStream source_fileStream = this.getResourceStream(\"xlsx/Home inventory.xlsx\");\n        source_workbook.open(source_fileStream);\n\n        //Copy content of active sheet from source workbook to the current workbook before the first sheet\n        IWorksheet copy_worksheet = source_workbook.getActiveSheet().copyBefore(workbook.getWorksheets().get(0));\n        copy_worksheet.setName(\"Copy of Home inventory\");\n        copy_worksheet.activate();\n\t",
  "com.grapecity.documents.excel.examples.features.worksheets.Tag": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Add tag for worksheet\n        worksheet.setTag(\"This is a Tag for sheet.\");\n\n        //Add tag for range A1:B2\n        worksheet.getRange(\"A1:B2\").setTag(\"This is a Tag for A1:B2\");\n\n        //Add tag for row 4\n        worksheet.getRange(\"A4\").getEntireRow().setTag(\"This is a Tag for Row 4\");\n\n        //Add tag for column F\n        worksheet.getRange(\"F5\").getEntireColumn().setTag(\"This is a Tag for Column F\");\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.DeleteWorksheet": "\n\n        IWorksheet worksheet = workbook.getWorksheets().add();\n\n        //workbook must contain one visible worksheet at least, if delete the one visible worksheet, it will throw exception.\n        worksheet.delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.ControlAdjustingPageBreaks": "\n        IWorksheet sheet = workbook.getWorksheets().get(0);\n        sheet.getRange(\"A1:E5\").setValue(new Object[][] { \n            { 1, 2, 3, 4, 5 }, \n            { 6, 7, 8, 9, 10 }, \n            { 11, 12, 13, 14, 15 },\n            { 16, 17, 18, 19, 20 },\n            { 21, 22, 23, 24, 25 }, \n        });\n\n        // Add page break\n        sheet.getHPageBreaks().add(sheet.getRange(\"D4\")); // Add a horizontal page break before the fourth row.\n        sheet.getVPageBreaks().add(sheet.getRange(\"D4\")); // Add a vertical page break before the fourth column.\n\n        // Delete rows and columns before the page breaks, the page breaks will be adjusted.\n        sheet.getRange(\"1:1\").delete(); // The hPageBreak is before the third row.\n        sheet.getRange(\"A:A\").delete(); // The vPageBreak is before the third column.\n\n        // Set the page breaks are fixed, it will not be adjusted when inserting/deleting rows/columns.\n        sheet.setFixedPageBreaks(true);\n\n        sheet.getRange(\"1:1\").delete(); // The hPageBreak is still before the third row.\n        sheet.getRange(\"A:A\").delete(); // The vPageBreak is still before the third column.\n\n\t",
  "com.grapecity.documents.excel.examples.features.worksheets.AddWorksheet": "\n\n        // Add a new worksheet to the workbook. The worksheet will be inserted into the end of the existing worksheet collection.\n        workbook.getWorksheets().add();\n\n        //Add a new worksheet to the specified position in the collection of worksheets.\n        workbook.getWorksheets().addBefore(workbook.getWorksheets().get(0));\n        workbook.getWorksheets().addAfter(workbook.getWorksheets().get(1));\n\n        //Set worksheet's name.\n        workbook.getWorksheets().get(2).setName(\"Product Plan\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.CopyWorksheet": "\n        //Load template file AgingReport.xlsx from resource\n        InputStream fileStream = this.getResourceStream(\"xlsx/AgingReport.xlsx\");\n        workbook.open(fileStream);\n\n        //Copy the active sheet to the end of current workbook\n        IWorksheet copy_worksheet = workbook.getActiveSheet().copy();\n        copy_worksheet.setName(\"Copy of \" + workbook.getActiveSheet().getName());\n\t",
  "com.grapecity.documents.excel.examples.features.worksheets.AccessWorksheet": "\n\n        //Use sheet index to get worksheet.\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Use sheet name to get worksheet.\n        IWorksheet worksheet1 = workbook.getWorksheets().get(\"Sheet1\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.MoveWorksheet": "\n        //Load template file AgingReport.xlsx from resource\n        InputStream fileStream = this.getResourceStream(\"xlsx/AgingReport.xlsx\");\n        workbook.open(fileStream);\n\n        //Move the active sheet to the end of current workbook\n        IWorksheet move_worksheet = workbook.getActiveSheet().move();\n        move_worksheet.setName(\"Move of \" + workbook.getActiveSheet().getName());\n\t",
  "com.grapecity.documents.excel.examples.features.worksheets.ConfigWorksheet": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Set worksheet tab color.\n        worksheet.setTabColor(Color.GetGreen());\n\n        //Set worksheet default row height.\n        worksheet.setStandardHeight(20);\n        //Set worksheet default column width.\n        worksheet.setStandardWidth(50);\n\n        //Split worksheet to panes.\n        worksheet.splitPanes(worksheet.getRange(\"B3\").getRow(), worksheet.getRange(\"B3\").getColumn());\n\n        IWorksheet worksheet1 = workbook.getWorksheets().add();\n        //Hide worksheet.\n        worksheet1.setVisible(Visibility.Hidden);\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.ProtectWorksheet": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //protect worksheet, allow insert column.\n        worksheet.setProtection(true);\n        worksheet.getProtectionSettings().setAllowInsertingColumns(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.AddChartSheet": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        \n        worksheet.getRange(\"A1:D6\").setValue(new Object[][]{\n            {null, \"S1\", \"S2\", \"S3\"},\n            {\"Item1\", 10, 25, 25},\n            {\"Item2\", 51, 36, 27},\n            {\"Item3\", 52, 85, 30},\n            {\"Item4\", 22, 65, 65},\n            {\"Item5\", 23, 69, 69}\n        });\n\n        //Add a chart sheet.\n        IWorksheet chartSheet = workbook.getWorksheets().add(SheetType.Chart);\n\n        //Add the main chart for the chart sheet.\n        IShape mainChart = chartSheet.getShapes().addChart(ChartType.ColumnClustered, 100, 100, 200, 200);\n        mainChart.getChart().getSeriesCollection().add(worksheet.getRange(\"A1:D6\"));\n\n        //Make the chart sheet the active sheet.\n        chartSheet.activate();\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.AutoFit": "\n\n\t\tIWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Auto fit column width of range 'A1'\n        worksheet.getRange(\"A1\").setValue(\"Grapecity Documents for Excel\");\n        worksheet.getRange(\"A1\").getColumns().autoFit();\n\n        //Auto fit row height of range 'B2'\n        worksheet.getRange(\"B2\").setValue(\"Grapecity\");\n        worksheet.getRange(\"B2\").getFont().setSize(20);\n        worksheet.getRange(\"B2\").getRows().autoFit();\n\n        //Auto fit column width and row height of range 'C3'\n        worksheet.getRange(\"C3\").setValue(\"Grapecity Documents for Excel\");\n        worksheet.getRange(\"C3\").getFont().setSize(32);\n        worksheet.getRange(\"C3\").autoFit();\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.UnprotectWorksheet": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //protect worksheet, allow insert column.\n        worksheet.setProtection(true);\n        worksheet.getProtectionSettings().setAllowInsertingColumns(true);\n\n        //Unprotect worksheet.\n        worksheet.setProtection(false);\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.SetBackgroundImage": "\n\n        //Use sheet index to get worksheet.\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        InputStream inputStream = this.getResourceStream(\"logo.png\");\n        try {\n            byte[] bytes = new byte[inputStream.available()];\n            inputStream.read(bytes, 0, bytes.length);\n            worksheet.setBackgroundPicture(bytes);\n        }catch (IOException ioe){\n            ioe.printStackTrace();\n        }\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.ConfigureWorksheetView": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Worksheet view settings.\n        IWorksheetView sheetView = worksheet.getSheetView();\n        sheetView.setDisplayFormulas(false);\n        sheetView.setDisplayRightToLeft(true);\n        sheetView.setGridlineColor(Color.GetRed());\n        sheetView.setZoom(200);\n\n    ",
  "com.grapecity.documents.excel.examples.features.worksheets.MoveWorksheetBetweenWorkbooks": "\n        //Load template file Home inventory.xlsx from resource to the source workbook\n        Workbook source_workbook = new Workbook();\n        InputStream source_fileStream = this.getResourceStream(\"xlsx/Home inventory.xlsx\");\n        source_workbook.open(source_fileStream);\n\n        //Move content of active sheet from source workbook to the current workbook before the first sheet\n        IWorksheet move_worksheet = source_workbook.getActiveSheet().moveBefore(workbook.getWorksheets().get(0));\n        move_worksheet.setName(\"Move of Home inventory\");\n        move_worksheet.activate();\n\t",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShapeWithPatternFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.getFill().patterned(PatternType.Percent10);\n        shape.getFill().getColor().setObjectThemeColor(ThemeColor.Accent2);\n        shape.getFill().getPatternColor().setObjectThemeColor(ThemeColor.Accent6);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ShapeGroup": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShapes shapes = worksheet.getShapes();\n        IShape pentagon = shapes.addShape(AutoShapeType.RegularPentagon, 89.4, 57.0, 153.6, 90.6);\n        IShape pie = shapes.addShape(AutoShapeType.Pie, 344.4, 156.8, 50.4, 60.0);\n        IShapeRange shpRange = shapes.getRange(new String[] { pentagon.getName(), pie.getName() });\n\n        // Group the shape range\n        IShape grouped = shpRange.group();\n\n        grouped.getLine().setVisible(true);\n        grouped.getLine().getColor().setRGB(Color.GetOrange());\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConnectShapesByConnector": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shapeBegin = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 1, 1, 100, 100);\n        IShape endBegin = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 200, 200, 100, 100);\n        IShape ConnectorShape = worksheet.getShapes().addConnector(ConnectorType.Straight, 1, 1, 101, 101);\n\n        //connect shapes by connector shape.\n        ConnectorShape.getConnectorFormat().beginConnect(shapeBegin, 3);\n        ConnectorShape.getConnectorFormat().endConnect(endBegin, 0);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigAdjustmentPoints": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.RightArrowCallout, 20, 20, 200, 100);\n\n        IAdjustments adjustments = shape.getAdjustments();\n        adjustments.set(0, 0.5);// arrow neck width\n        adjustments.set(1, 0.4);// arrow head width\n        adjustments.set(2, 0.5);// arrow head height\n        adjustments.set(3, 0.6);// text box width\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShape3DFormat": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 50, 30, 200, 100);\n        shape.getThreeD().setRotationX(50);\n        shape.getThreeD().setRotationY(20);\n        shape.getThreeD().setRotationZ(30);\n        shape.getThreeD().setDepth(7);\n        shape.getThreeD().setZ(20);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ShapeCopy": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //Create a shape in worksheet, shape's range is Range[\"A7:B7\"]\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 1, 1, 100, 100);\n        //Range[\"A1:D10\"] must contain Range[\"A7:B7\"], copy a new shape to Range[\"C1:F7\"]\n        worksheet.getRange(\"A1:D10\").copy(worksheet.getRange(\"E1\"));\n        worksheet.getRange(\"A1:D10\").copy(worksheet.getRange(\"E1:I9\"));\n\n        //Cross sheet copy, copy a new shape to worksheet2's Range[\"C1:F7\"]\n        //IWorksheet worksheet2 = workbook.getWorksheets().add();\n        //worksheet.getRange(\"A1:D10\").copy(worksheet2.getRange(\"E1\"));\n        //worksheet.getRange(\"A1:D10\").copy(worksheet2.getRange(\"E1:I9\"));\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ShapeCut": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        //Create a shape in worksheet, shape's range is Range[\"A7:B7\"]\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 1, 1, 100, 100);\n        //Range[\"A1:D10\"] must contain Range[\"A7:B7\"], cut a new shape to Range[\"C1:F7\"]\n        worksheet.getRange(\"A1:D10\").cut(worksheet.getRange(\"E1\"));\n        worksheet.getRange(\"A1:D10\").cut(worksheet.getRange(\"E1:I9\"));\n\n        //Cross sheet cut, cut a new shape to worksheet2's Range[\"C1:F7\"]\n        //IWorksheet worksheet2 = workbook.getWorksheets().add();\n        //worksheet.getRange(\"A1:D10\").cut(worksheet2.getRange(\"E1\"));\n        //worksheet.getRange(\"A1:D10\").cut(worksheet2.getRange(\"E1:I9\"));\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShapeWithSolidFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.getFill().solid();\n        shape.getFill().getColor().setRGB(Color.GetRed());\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ShapeDuplicate": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //Create shape\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Rectangle, 50, 50, 200, 200);\n\n        //Duplicate shape\n        IShape newShape = shape.duplicate();\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShapeLine": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.getLine().setDashStyle(LineDashStyle.Dash);\n        shape.getLine().setStyle(LineStyle.Single);\n        shape.getLine().setWeight(2);\n        shape.getLine().getColor().setObjectThemeColor(ThemeColor.Accent6);\n        shape.getLine().setTransparency(0.3);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ShapeUngroup": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IShapes shapes = worksheet.getShapes();\n        IShape pentagon = shapes.addShape(AutoShapeType.RegularPentagon, 89.4, 57.0, 153.6, 90.6);\n        IShape pie = shapes.addShape(AutoShapeType.Pie, 344.4, 156.8, 50.4, 60.0);\n        IShapeRange shpRange = shapes.getRange(new String[] { pentagon.getName(), pie.getName() });\n\n        // Group the shape range\n        IShape grouped = shpRange.group();\n\n        // Ungroup the group shape\n        shpRange = grouped.ungroup();\n    ",
  "com.grapecity.documents.excel.examples.features.shape.SetShapeText": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.setWidth(500);\n        shape.setHeight(200);\n\n        shape.getTextFrame().getTextRange().getFont().getColor().setRGB(Color.FromArgb(0, 255, 0));\n        shape.getTextFrame().getTextRange().getFont().setBold(true);\n        shape.getTextFrame().getTextRange().getFont().setItalic(true);\n        shape.getTextFrame().getTextRange().getFont().setSize(20);\n        shape.getTextFrame().getTextRange().getFont().setStrikethrough(true);\n\n        shape.getTextFrame().getTextRange().getParagraphs().add(\"This is a parallelogram shape.\");\n        shape.getTextFrame().getTextRange().getParagraphs().add(\"My name is XXX\");\n        shape.getTextFrame().getTextRange().getParagraphs().get(1).getRuns().add(\"Hello World!\");\n\n        shape.getTextFrame().getTextRange().getParagraphs().get(1).getRuns().get(0).getFont().setStrikethrough(false);\n        shape.getTextFrame().getTextRange().getParagraphs().get(1).getRuns().get(0).getFont().setSize(35);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShapeWithPictureFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 20, 20, 200, 100);\n        InputStream stream = this.getResourceStream(\"logo.png\");\n\n        try {\n            shape.getFill().userPicture(stream, ImageType.JPG);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        shape.getPictureFormat().setColorType(PictureColorType.Grayscale);\n        shape.getPictureFormat().setBrightness(0.6);\n        shape.getPictureFormat().setContrast(0.3);\n        shape.getPictureFormat().getCrop().setPictureOffsetX(10);\n        shape.getPictureFormat().getCrop().setPictureOffsetY(-5);\n        shape.getPictureFormat().getCrop().setPictureWidth(120);\n        shape.getPictureFormat().getCrop().setPictureHeight(80);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShapeWithGradientFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.getFill().presetGradient(GradientStyle.Vertical, 3, PresetGradientType.Silver);\n        shape.getFill().setRotateWithObject(false);\n\n    ",
  "com.grapecity.documents.excel.examples.features.shape.ConfigShapeWithTextureFill": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        IShape shape = worksheet.getShapes().addShape(AutoShapeType.Parallelogram, 1, 1, 200, 100);\n        shape.getFill().presetTextured(PresetTexture.Canvas);\n        shape.getFill().setTextureAlignment(TextureAlignment.Center);\n        shape.getFill().setTextureOffsetX(2.5);\n        shape.getFill().setTextureOffsetY(3.2);\n        shape.getFill().setTextureHorizontalScale(0.9);\n        shape.getFill().setTextureVerticalScale(0.2);\n        shape.getFill().setTransparency(0.5);\n\n    ",
  "com.grapecity.documents.excel.examples.features.customfunctions.MyIsErrorFunction": "\n        Workbook.AddCustomFunction(new MyIsErrorFunctionX());\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        worksheet.getRange(\"A1\").setValue(CalcError.Num);\n        worksheet.getRange(\"A2\").setValue(100);\n\n        worksheet.getRange(\"B1\").setFormula(\"=MyIsError(A1)\");\n        worksheet.getRange(\"B2\").setFormula(\"=MyIsError(A2)\");\n\n        //getRange(\"B1\")'s value is true.\n        Object resultB1 = worksheet.getRange(\"B1\").getValue();\n\n        //getRange(\"B2\")'s value is false.\n        Object resultB2 = worksheet.getRange(\"B2\").getValue();\n\n         /* Implementation of MyAddFunctionX\n\n            class MyIsErrorFunctionX extends CustomFunction {\n                public MyIsErrorFunctionX() {\n                    super(\"MyIsError\", FunctionValueType.Boolean, new Parameter[]{new Parameter(FunctionValueType.Variant)});\n                }\n\n                @Override\n                public Object evaluate(Object[] arguments, ICalcContext context) {\n                    if (arguments[0] instanceof CalcError) {\n                        if ((CalcError) arguments[0] != CalcError.None && (CalcError) arguments[0] != CalcError.GettingData) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n\n                    return false;\n                }\n            }\n\n          */\n    ",
  "com.grapecity.documents.excel.examples.features.customfunctions.MyIsMergedRangeFunction": "\n        Workbook.AddCustomFunction(new MyIsMergedRangeFunctionX());\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n\n        worksheet.getRange(\"A1:B2\").merge();\n\n        worksheet.getRange(\"C1\").setFormula(\"=MyIsMergedRange(A1)\");\n        worksheet.getRange(\"C2\").setFormula(\"=MyIsMergedRange(H2)\");\n\n        //A1 is a merged cell, getRange(\"C1\")'s value is true.\n        Object resultC1 = worksheet.getRange(\"C1\").getValue();\n\n        //H2 is not a merged cell, getRange(\"C2\")'s value is false.\n        Object resultC2 = worksheet.getRange(\"C2\").getValue();\n\n         /* Implementation of MyAddFunctionX\n\n            class MyIsMergedRangeFunctionX extends CustomFunction {\n                public MyIsMergedRangeFunctionX() {\n                    super(\"MyIsMergedRange\", FunctionValueType.Boolean, new Parameter[]{new Parameter(FunctionValueType.Object, true)});\n                }\n\n                @Override\n                public Object evaluate(Object[] arguments, ICalcContext context) {\n                    if (arguments[0] instanceof CalcReference) {\n                        if (arguments[0] instanceof CalcReference) {\n                            List<IRange> ranges = ((CalcReference) arguments[0]).getRanges();\n                            for (IRange range : ranges) {\n                                return range.getMergeCells();\n                            }\n                        }\n                    }\n\n                    return false;\n                }\n            }\n\n          */\n    ",
  "com.grapecity.documents.excel.examples.features.customfunctions.MyAddFunction": "\n        Workbook.AddCustomFunction(new MyAddFunctionX());\n        IWorksheet worksheet = workbook.getActiveSheet();\n        worksheet.getRange(\"A1\").setValue(1);\n        worksheet.getRange(\"B1\").setValue(2);\n        worksheet.getRange(\"C1\").setFormula(\"=MyAdd(A1, B1)\");\n\n        // Range C1's value is 3\n        Object result = worksheet.getRange(\"C1\").getValue();\n\n        worksheet.getRange(\"E1:F2\").setValue(new Object[][]{\n            {1, 3},\n            {2, 4}\n        });\n\n        worksheet.getRange(\"G1:G2\").setFormulaArray(\"=MyAdd(E1:E2, F1:F2)\");\n\n        //Range G1's value is 4, Range G2's value is 6.\n        Object resultG1 = worksheet.getRange(\"G1\").getValue();\n        Object resultG2 = worksheet.getRange(\"G2\").getValue();\n\n         /* Implementation of MyAddFunctionX\n\n            class MyAddFunctionX extends CustomFunction {\n                public MyAddFunctionX() {\n                    super(\"MyAdd\", FunctionValueType.Number, new Parameter[]{new Parameter(FunctionValueType.Number), new Parameter(FunctionValueType.Number)});\n                }\n\n                @Override\n                public Object evaluate(Object[] arguments, ICalcContext context) {\n                    return (double) arguments[0] + (double) arguments[1];\n                }\n            }\n\n          */\n    ",
  "com.grapecity.documents.excel.examples.features.customfunctions.MyConcatenateFunction": "\n        Workbook.AddCustomFunction(new MyConcatenateFunctionX());\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n        worksheet.getRange(\"A1\").setFormula(\"=MyConcatenate(\\\"I\\\", \\\" \\\", \\\"live\\\", \\\" \\\", \\\"in\\\", \\\" \\\", \\\"Xi'an\\\", \\\".\\\")\");\n        worksheet.getRange(\"A2\").setFormula(\"=MyConcatenate(A1, \\\"haha.\\\")\");\n\n        worksheet.getRange(\"B1\").setValue(12);\n        worksheet.getRange(\"B2\").setValue(34);\n        worksheet.getRange(\"B3\").setFormula(\"=MyConcatenate(B1, B2)\");\n\n        worksheet.getRange(\"M5:N5\").setFormulaArray(\"=CONCATENATE({\\\"aa\\\",\\\"bb\\\"}, 12, 34)\");\n\n        //\"I live in Xi'an.\"\n        Object resultA1 = worksheet.getRange(\"A1\").getValue();\n        //\"I live in Xi'an.haha.\"\n        Object resultA2 = worksheet.getRange(\"A2\").getValue();\n        //\"12.034.0\"\n        Object resultB3 = worksheet.getRange(\"B3\").getValue();\n        //\"aa1234\"\n        Object resultM5 = worksheet.getRange(\"M5\").getValue();\n        //\"bb1234\"\n        Object resultN5 = worksheet.getRange(\"N5\").getValue();\n\n\n         /* Implementation of MyAddFunctionX\n\n            class MyConcatenateFunctionX extends CustomFunction {\n                public MyConcatenateFunctionX() {\n                    super(\"MyConcatenate\", FunctionValueType.Text, CreateParameters());\n                }\n\n                static Parameter[] CreateParameters() {\n                    Parameter[] parameters = new Parameter[254];\n                    for (int i = 0; i < 254; i++) {\n                        parameters[i] = new Parameter(FunctionValueType.Variant);\n                    }\n\n                    return parameters;\n                }\n\n                @Override\n                public Object evaluate(Object[] arguments, ICalcContext context) {\n                    StringBuilder sb = new StringBuilder();\n\n                    for (Object argument : arguments) {\n                        if (argument instanceof CalcError) {\n                            return argument;\n                        }\n                        if (argument instanceof String || argument instanceof Double) {\n                            sb.append(argument);\n                        }\n                    }\n\n                    return sb.toString();\n                }\n            }\n\n          */\n    ",
  "com.grapecity.documents.excel.examples.features.customfunctions.MySumFunction": "\n        Workbook.AddCustomFunction(new MySumFunctionX());\n\n        IWorksheet worksheet = workbook.getActiveSheet();\n        worksheet.getRange(\"A1\").setValue(1);\n        worksheet.getRange(\"B1\").setValue(2);\n        worksheet.getRange(\"C1\").setFormula(\"=MySum(A1:B1, 2, {3,4})\");\n\n        //getRange(\"C1\")'s value is 12.\n        Object result = worksheet.getRange(\"C1\").getValue();\n\n\n         /* Implementation of MyAddFunctionX\n\n            class MySumFunctionX extends CustomFunction {\n                public MySumFunctionX() {\n                    super(\"MySum\", FunctionValueType.Number, CreateParameters());\n                }\n\n                private static Parameter[] CreateParameters() {\n                    Parameter[] parameters = new Parameter[254];\n                    for (int i = 0; i < 254; i++) {\n                        parameters[i] = new Parameter(FunctionValueType.Object);\n                    }\n\n                    return parameters;\n                }\n\n                @Override\n                public Object evaluate(Object[] arguments, ICalcContext context) {\n                    double sum = 0d;\n                    for (Object argument : arguments) {\n                        Iterable<Object> iterator = toIterable(argument);\n                        for (Object item : iterator) {\n                            if (item instanceof CalcError) {\n                                return item;\n                            }\n                            if (item instanceof Double) {\n                                sum += (double) item;\n                            }\n                        }\n                    }\n\n                    return sum;\n                }\n\n                private static Iterable<Object> toIterable(Object obj) {\n                    if (obj instanceof Iterable) {\n                        return (Iterable) obj;\n                    } else if (obj instanceof Object[][]) {\n                        List<Object> list = new ArrayList<Object>();\n                        Object[][] array = (Object[][]) obj;\n                        for (int i = 0; i < array.length; i++) {\n                            for (int j = 0; j < array[i].length; j++) {\n                                list.add(array[i][j]);\n                            }\n                        }\n                        return list;\n                    } else {\n                        List<Object> list = new ArrayList<Object>();\n                        list.add(obj);\n                        return list;\n                    }\n                }\n            }\n\n          */\n    ",
  "com.grapecity.documents.excel.examples.features.customfunctions.MyConditionalSumFunction": "\n        Workbook.AddCustomFunction(new MyConditionalSumFunctionX());\n        IWorksheet worksheet = workbook.getActiveSheet();\n        worksheet.getRange(\"A1:A10\").setValue(new Object[][] {\n            {1 },\n            {2 },\n            {3 },\n            {4 },\n            {5 },\n            {6 },\n            {7 },\n            {8 },\n            {9 },\n            {10 }});\n        IFormatCondition cellValueRule = (IFormatCondition)worksheet.getRange(\"A1:A10\").getFormatConditions().add(FormatConditionType.CellValue, FormatConditionOperator.Greater, 5, null);\n        cellValueRule.getInterior().setColor(Color.GetRed());\n\n        //Sum cells value which display format interior color are red.\n        worksheet.getRange(\"C1\").setFormula(\"=MyConditionalSum(A1:A10)\");\n\n        //Range[\"C1\"]'s value is 40.\n        Object result = worksheet.getRange(\"C1\").getValue();\n\n\n         /* Implementation of MyAddFunctionX\n\n              class MyConditionalSumFunctionX extends CustomFunction {\n                public MyConditionalSumFunctionX() {\n                    super(\"MyConditionalSum\", FunctionValueType.Number, CreateParameters());\n                }\n\n                private static Parameter[] CreateParameters() {\n                    Parameter[] parameters = new Parameter[254];\n                    for (int i = 0; i < 254; i++) {\n                        parameters[i] = new Parameter(FunctionValueType.Object, true);\n                    }\n\n                    return parameters;\n                }\n\n                @Override\n                public Object evaluate(Object[] arguments, ICalcContext context) {\n                    double sum = 0d;\n                    for (Object argument : arguments) {\n                        Iterable<Object> iterator = toIterable(argument);\n                        for (Object item : iterator) {\n                            if (item instanceof CalcError) {\n                                return item;\n                            } else if (item instanceof Double) {\n                                sum += (double) item;\n                            }\n                        }\n                    }\n\n                    return sum;\n                }\n\n                private static Iterable<Object> toIterable(Object obj) {\n                    if (obj instanceof Iterable) {\n                        return (Iterable) obj;\n                    } else if (obj instanceof Object[][]) {\n                        List<Object> list = new ArrayList<Object>();\n                        Object[][] array = (Object[][]) obj;\n                        for (int i = 0; i < array.length; i++) {\n                            for (int j = 0; j < array[i].length; j++) {\n                                list.add(array[i][j]);\n                            }\n                        }\n                        return list;\n                    } else if (obj instanceof CalcReference) {\n                        List<Object> list = new ArrayList<Object>();\n                        CalcReference reference = (CalcReference) obj;\n                        for (IRange range : reference.getRanges()) {\n                            int rowCount = range.getRows().getCount();\n                            int colCount = range.getColumns().getCount();\n                            for (int i = 0; i < rowCount; i++) {\n                                for (int j = 0; j < colCount; j++) {\n                                    if (range.getCells().get(i, j).getDisplayFormat().getInterior().getColor().equals(Color.getRed())) {\n                                        list.add(range.getCells().get(i, j).getValue());\n                                    }\n                                }\n                            }\n                        }\n                        return list;\n                    } else {\n                        List<Object> list = new ArrayList<Object>();\n                        list.add(obj);\n                        return list;\n                    }\n                }\n            }\n          */\n    ",
  "com.grapecity.documents.excel.examples.features.findandreplace.FindWithLookIn": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n\n        // Add day to date\n        // Day Date Result\n        // 1 2019-05-01 2019-05-02\n        worksheet.getRange(\"A2:C2\").setValue(new String[] { \"Day\", \"Date\", \"Result\" });\n        worksheet.getRange(\"A1\").setValue(\"Add day to date\");\n        worksheet.getRange(\"A3\").setValue(1);\n        worksheet.getRange(\"A3\").addComment(\"Enter the day offset\");\n        worksheet.getRange(\"B3\").setFormula(\"=DATE(2019,5,1)\");\n        worksheet.getRange(\"B3\").setNumberFormat(\"yyyy-mm-dd;@\");\n        worksheet.getRange(\"C3\").setFormula(\"=B3+1\");\n        worksheet.getRange(\"C3\").setNumberFormat(\"yyyy-mm-dd;@\");\n        worksheet.getUsedRange().autoFit();\n\n        // Find the first occurrence of \"2019\" in the formula bar\n        // and mark it with green foreground color\n\n        IRange searchRange = worksheet.getRange(\"A1:C3\");\n        FindOptions tempVar = new FindOptions();\n        tempVar.setLookIn(FindLookIn.Formulas);\n\n        IRange first2019InFormulaBar = searchRange.find(\"2019\", null, tempVar);\n        first2019InFormulaBar.getFont().setColor(Color.GetGreen());\n\n        // Find the first occurrence of 1 in text\n        // and mark it with blue foreground\n        FindOptions tempVar2 = new FindOptions();\n        tempVar2.setLookIn(FindLookIn.Texts);\n\n        IRange firstValue1 = searchRange.find(1, null, tempVar2);\n        firstValue1.getFont().setColor(Color.GetBlue());\n\n        // Find the first occurrence of \"day\" in comments\n        // and mark it with yellow background\n        FindOptions tempVar3 = new FindOptions();\n        tempVar3.setLookIn(FindLookIn.Comments);\n\n        IRange firstDayComments = searchRange.find(\"day\", null, tempVar3);\n        firstDayComments.getInterior().setColor(Color.GetYellow());\n\n        // Find the last occurrence of \"2019\" in the formula property\n        // and mark it with purple foreground\n        FindOptions tempVar4 = new FindOptions();\n        tempVar4.setLookIn(FindLookIn.OnlyFormulas);\n        tempVar4.setSearchDirection(SearchDirection.Previous);\n\n        IRange last2019OnlyFormula = searchRange.find(\"2019\", null, tempVar4);\n        last2019OnlyFormula.getFont().setColor(Color.GetPurple());\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.FindDisplayFormat": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n        worksheet.getRange(\"A1:C3\").setValue(\"Text\");\n\n        IRange b2 = worksheet.getRange(\"B2\");\n        b2.getInterior().setColor(Color.GetRed());\n        b2.getFont().setColor(Color.GetWhite());\n        b2.setValue(\"B2\");\n\n        IRange a2 = worksheet.getRange(\"A2\");\n        a2.getInterior().setColor(Color.GetOrange());\n        a2.getFont().setColor(Color.GetWhite());\n        a2.setValue(\"A2\");\n\n        // Find cells with red background and white foreground,\n        // and highlight them with bold and bigger text\n\n        // Create a temporary sheet to build a IDisplayFormat\n        IWorksheet displayFormatFactoryWorksheet = workbook.getWorksheets().add();\n        IRange displayFormatFactoryRange = displayFormatFactoryWorksheet.getRange(\"A1\");\n        displayFormatFactoryRange.getInterior().setColor(Color.GetRed());\n        displayFormatFactoryRange.getFont().setColor(Color.GetWhite());\n        IDisplayFormat searchFormat = displayFormatFactoryRange.getDisplayFormat();\n\n        // Find the first occurrence\n        IRange searchRange = worksheet.getUsedRange();\n        FindOptions options = new FindOptions();\n        options.setSearchFormat(searchFormat);\n        IRange foundCell = searchRange.find(\"*\", null, options);\n\n        // Highlight the found range\n        foundCell.getFont().setBold(true);\n        foundCell.getFont().setSize(foundCell.getFont().getSize() + 8);\n\n        // Dispose the temporary sheet\n        displayFormatFactoryWorksheet.delete();\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.FindWithAfter": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n        final String CorrectWord = \"Macro\";\n        worksheet.getRange(\"A1:D5\").setValue(CorrectWord);\n\n        final String MisspelledWord = \"marco\";\n        worksheet.getRange(\"A2,C3,D1\").setValue(MisspelledWord);\n\n        // Find all misspelled words and mark them with red background\n        IRange searchRange = worksheet.getRange(\"A1:D5\");\n        IRange misspelledCell = null;\n        do {\n            misspelledCell = searchRange.find(MisspelledWord, misspelledCell);\n            if (misspelledCell == null) {\n                break;\n            }\n            misspelledCell.getInterior().setColor(Color.GetRed());\n        } while (true);\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.FindLookAtSearchOrderDirectionMatchCase": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n\n        // Add day to date\n        // Day Date Result\n        // 1 2019-05-01 2019-05-02\n        worksheet.getRange(\"A2:C2\").setValue(new String[] { \"Day\", \"Date\", \"Result\" });\n        worksheet.getRange(\"A1\").setValue(\"Add day to date\");\n        worksheet.getRange(\"A3\").setValue(1);\n        worksheet.getRange(\"B3\").setFormula(\"=DATE(2019,5,1)\");\n        worksheet.getRange(\"B3\").setNumberFormat(\"yyyy-mm-dd;@\");\n        worksheet.getRange(\"C3\").setFormula(\"=B3+1\");\n        worksheet.getRange(\"C3\").setNumberFormat(\"yyyy-mm-dd;@\");\n        worksheet.getUsedRange().autoFit();\n\n        IRange searchRange = worksheet.getRange(\"A1:C3\");\n\n        // Find the last occurrence of 1 in text (match whole word, backward and by\n        // columns)\n        // and mark it with blue foreground and bigger font\n        FindOptions tempVar = new FindOptions();\n        tempVar.setLookIn(FindLookIn.Texts);\n        tempVar.setSearchDirection(SearchDirection.Previous);\n        tempVar.setLookAt(LookAt.Whole);\n        tempVar.setSearchOrder(SearchOrder.ByColumns);\n\n        IRange lastValue1 = searchRange.find(1, null, tempVar);\n        lastValue1.getFont().setColor(Color.GetBlue());\n        lastValue1.getFont().setSize(lastValue1.getFont().getSize() + 8);\n\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.FindBasicUsage": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n        final String CorrectWord = \"Macro\";\n        worksheet.getRange(\"A1:D5\").setValue(CorrectWord);\n\n        final String MisspelledWord = \"marco\";\n        worksheet.getRange(\"A2,C3,D1\").setValue(MisspelledWord);\n\n        // Find the first misspelled word\n        IRange searchRange = worksheet.getRange(\"A1:D5\");\n        IRange firstMisspelled = searchRange.find(MisspelledWord);\n\n        // Mark it with red foreground\n        firstMisspelled.getFont().setColor(Color.GetRed());\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.ReplaceWithOptions": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n\n        // Skew matrix generator\n        // Input:\n        // DegX    135\n        // DegY    45\n        //\n        // Output:\n        // M11 1\t    M12\t1\n        // M21 -1\tM22\t1\n        // M31 0\t    M32\t0\n        worksheet.getRange(\"B1\").setValue(\"Skew matrix generator\");\n        worksheet.getRange(\"A2:A4\").setValue(new String[] {\"Input:\", \"DegX\", \"DegY\"});\n        worksheet.getRange(\"B3\").setValue(135);\n        worksheet.getRange(\"B4\").setValue(45);\n        worksheet.getRange(\"A6\").setValue(\"Output:\");\n        worksheet.getRange(\"A7:A9\").setValue(new String[] {\"M11\", \"M21\", \"M31\"});\n        worksheet.getRange(\"B7\").setValue(1);\n        worksheet.getRange(\"B8\").setFormula(\"=TAN(B3/180*3.14)\");\n        worksheet.getRange(\"B9\").setValue(0);\n        worksheet.getRange(\"C7:C9\").setValue(new String[] {\"M12\", \"M22\", \"M32\"});\n        worksheet.getRange(\"D7\").setFormula(\"=TAN(B4/180*3.14)\");\n        worksheet.getRange(\"D8\").setValue(1);\n        worksheet.getRange(\"D9\").setValue(0);\n\n        // Replace 3.14 with PI()\n        IRange searchRange = worksheet.getUsedRange();\n        searchRange.replace(3.14, \"PI()\");\n        \n        // Replace M with m (Match case)\n        ReplaceOptions tempVar = new ReplaceOptions();\n        tempVar.setMatchCase(true);\n        searchRange.replace(\"M\", \"m\", tempVar);\n        \n        // Replace m11 with M11 (Match whole word, match byte)\n        ReplaceOptions tempVar2 = new ReplaceOptions();\n        tempVar2.setLookAt(LookAt.Whole);\n        tempVar2.setMatchByte(true);\n        searchRange.replace(\"m11\", \"M11\", tempVar2);\n\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.ReplaceBasicUsage": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n        worksheet.getRange(\"A1:A3\")\n                .setValue(new String[] { \"Render Excel ranges inside PDF in .NET Core\",\n                        \"Control pagination when printing Excel document to PDF in .NET Core (Support Team)\",\n                        \"How to format Pivot table styles in .NET Core (Support Team)\" });\n\n        // Replace \".NET Core\" with \".NET 5\"\n        worksheet.getUsedRange().replace(\".NET Core\", \".NET 5\");\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.FindMatchByte": "\n        // This option is valid when culture is ja-JP or zh-CN.\n        workbook.setCulture(Locale.JAPANESE);\n        ;\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        \n        // Prepare data\n        worksheet.getRange(\"A1:A4\")\n                .setValue(new String[] { \"Mario Games\", \"スーパーマリオブラザーズ\", \"ﾏﾘｵ&ﾙｲｰｼﾞRPG3 DX\", \"マリオ＆ルイージRPG1 DX\" });\n        \n        // Find the first cell that contains \"マリオ\" (match width)\n        // and mark it with red foreground.\n        IRange searchRange = worksheet.getUsedRange();\n        FindOptions matchByteOptions = new FindOptions();\n        matchByteOptions.setMatchByte(true);\n        \n        IRange marioCell = searchRange.find(\"マリオ\", null, matchByteOptions);\n        marioCell.getFont().setColor(Color.GetRed());\n        \n        // Find the first cell that contains \"ルイージ\" (ignore width)\n        // and mark it with green background.\n        IRange luigiCell = searchRange.find(\"ルイージ\");\n        luigiCell.getInterior().setColor(Color.GetGreen());\n\n\t",
  "com.grapecity.documents.excel.examples.features.findandreplace.ReplaceCustomWrapSearch": "\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        // Prepare data\n        worksheet.getRange(\"A1:A8\")\n                .setValue(new String[] { \"Whats new in GcExcel v2 sp2\", \"Render Excel ranges inside PDF in .NET Core\",\n                        \"Control pagination when printing Excel document to PDF in .NET Core (Support Team)\",\n                        \"How to format Pivot table styles in .NET Core (Support Team)\",\n                        \"Controlling page breaks when editing Excel files in .NET Core (Support Team)\",\n                        \"Combine different workbooks into PDF in .NET Core (Support Team)\",\n                        \"Repeating Excel rows/columns on exporting to PDF in .NET Core (Support Team)\",\n                        \"Using GcExcel with Kotlin\" });\n\n        // Find \".NET Core\" and replace them with \".NET 5\", starting after A4\n        String what = \".NET Core\";\n        String replacement = \".NET 5\";\n        FindOptions settings = new FindOptions();\n        IRange target = worksheet.getUsedRange();\n        IRange after = worksheet.getRange(\"A4\");\n\n        // Search start after A4\n        IRange cellToReplace = after;\n        do {\n            cellToReplace = target.find(what, cellToReplace, settings);\n            if (cellToReplace == null) {\n                break;\n            }\n\n            // Replace\n            cellToReplace.setValue(cellToReplace.getText().replace(what, replacement));\n        } while (true);\n\n        // Search reached the bottom of the range.\n        // Wrap search start at the top-left corner.\n        if (after != null) {\n            do {\n                cellToReplace = target.find(what, cellToReplace, settings);\n                if (cellToReplace == null) {\n                    break;\n                }\n\n                // Replace\n                cellToReplace.setValue(cellToReplace.getText().replace(what, replacement));\n\n                if (cellToReplace.getRow() == after.getRow() && cellToReplace.getColumn() == after.getColumn()) {\n                    break;\n                }\n            } while (true);\n        }\n\t",
  "com.grapecity.documents.excel.examples.features.tables.RemoveTable": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n\n        // add table.\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n        // remove table\n        table.delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.TableFilter": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //add table.\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n        //Filter table \n        table.getRange().autoFilter(0, new Object[]{\"Richard\", \"Nia\"}, AutoFilterOperator.Values);\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.CreateTable": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        // add table.\n        worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.PerformCalculationsInTable": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        // add table.\n        worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n        // \"Name\" column's total row calculation function will be\n        // \"=SUBTOTAL(103,[Name])\"\n        worksheet.getTables().get(0).getColumns().get(0).setTotalsCalculation(TotalsCalculation.Count);\n        // \"Weight\" column's total row calculation function will be\n        // \"=SUBTOTAL(101,[Weight])\"\n        worksheet.getTables().get(0).getColumns().get(4).setTotalsCalculation(TotalsCalculation.Average);\n        worksheet.getTables().get(0).setShowTotals(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.InsertDeleteTableRowColumns": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        // add table.\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n        // add table column before first column.\n        table.getColumns().add(0);\n        // add table column before second column.\n        table.getColumns().add(1);\n\n        // delete first table column.\n        table.getColumns().get(0).delete();\n        // delete \"City\" table column.\n        table.getColumns().get(\"City\").delete();\n\n        // insert a table row in table's last row.\n        table.getRows().add();\n        // delete second table row.\n        table.getRows().get(1).delete();\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.AddCustomTableStyle": "\n\n        //Add one custom table style.\n        ITableStyle style = workbook.getTableStyles().add(\"test\");\n\n        //Set WholeTable element style.\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setItalic(true);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setColor(Color.GetWhite());\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getFont().setStrikethrough(true);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setLineStyle(BorderLineStyle.Dotted);\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getBorders().setColor(Color.FromArgb(0, 193, 213));\n        style.getTableStyleElements().get(TableStyleElementType.WholeTable).getInterior().setColor(Color.FromArgb(59, 92, 170));\n\n        //Set FirstColumnStripe element style.\n        style.getTableStyleElements().get(TableStyleElementType.FirstColumnStripe).getFont().setBold(true);\n        style.getTableStyleElements().get(TableStyleElementType.FirstColumnStripe).getFont().setColor(Color.FromArgb(255, 0, 0));\n        style.getTableStyleElements().get(TableStyleElementType.FirstColumnStripe).getBorders().setLineStyle(BorderLineStyle.Thick);\n        style.getTableStyleElements().get(TableStyleElementType.FirstColumnStripe).getBorders().setThemeColor(ThemeColor.Accent5);\n        style.getTableStyleElements().get(TableStyleElementType.FirstColumnStripe).getInterior().setColor(Color.FromArgb(255, 255, 0));\n        style.getTableStyleElements().get(TableStyleElementType.FirstColumnStripe).setStripeSize(2);\n\n        //Set SecondColumnStripe element style.\n        style.getTableStyleElements().get(TableStyleElementType.SecondColumnStripe).getFont().setColor(Color.FromArgb(255, 0, 255));\n        style.getTableStyleElements().get(TableStyleElementType.SecondColumnStripe).getBorders().setLineStyle(BorderLineStyle.DashDot);\n        style.getTableStyleElements().get(TableStyleElementType.SecondColumnStripe).getBorders().setColor(Color.FromArgb(42, 105, 162));\n        style.getTableStyleElements().get(TableStyleElementType.SecondColumnStripe).getInterior().setColor(Color.FromArgb(204, 204, 255));\n\n        //add table.\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //set custom table style to table.\n        table.setTableStyle(style);\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.ApplyTableStyle": "\n\n        //add table.\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        //Add one custom table style.\n        ITableStyle style = workbook.getTableStyles().add(\"test\");\n        //set custom table style for table.\n        table.setTableStyle(style);\n\n        //Use table style name get one build in table style.\n        ITableStyle tableStyle = workbook.getTableStyles().get(\"TableStyleMedium3\");\n        //set built-in table style for table.\n        table.setTableStyle(tableStyle);\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.AccessTableRanges": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        // add table.\n        worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n        // show totals\n        worksheet.getTables().get(0).setShowTotals(true);\n\n        // set each range's interior color.\n        worksheet.getTables().get(0).getHeaderRange().getInterior().setColor(Color.GetGreen());\n        worksheet.getTables().get(0).getDataRange().getInterior().setColor(Color.GetPink());\n        worksheet.getTables().get(0).getTotalsRange().getInterior().setColor(Color.GetLightGray());\n\n    ",
  "com.grapecity.documents.excel.examples.features.tables.TableSort": "\n\n        Object data = new Object[][]{\n                {\"Name\", \"City\", \"Birthday\", \"Eye color\", \"Weight\", \"Height\"},\n                {\"Richard\", \"New York\", new GregorianCalendar(1968, 5, 8), \"Blue\", 67, 165},\n                {\"Nia\", \"New York\", new GregorianCalendar(1972, 6, 3), \"Brown\", 62, 134},\n                {\"Jared\", \"New York\", new GregorianCalendar(1964, 2, 2), \"Hazel\", 72, 180},\n                {\"Natalie\", \"Washington\", new GregorianCalendar(1972, 7, 8), \"Blue\", 66, 163},\n                {\"Damon\", \"Washington\", new GregorianCalendar(1986, 1, 2), \"Hazel\", 76, 176},\n                {\"Angela\", \"Washington\", new GregorianCalendar(1993, 1, 15), \"Brown\", 68, 145}\n        };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"A1:F7\").setValue(data);\n        worksheet.getRange(\"A:F\").setColumnWidth(15);\n\n        // add table.\n        ITable table = worksheet.getTables().add(worksheet.getRange(\"A1:F7\"), true);\n\n        // sort table\n        ValueSortField key1 = new ValueSortField(worksheet.getRange(\"A1:A2\"), SortOrder.Ascending);\n        table.getSort().getSortFields().add(key1);\n        table.getSort().apply();\n\n    ",
  "com.grapecity.documents.excel.examples.features.comments.ConfigCommentLayout": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IComment commentC3 = worksheet.getRange(\"C3\").addComment(\"Range C3's comment.\");\n        commentC3.getShape().getLine().getColor().setRGB(Color.GetLightGreen());\n        commentC3.getShape().getLine().setWeight(3);\n        commentC3.getShape().getLine().setStyle(LineStyle.ThickThin);\n        commentC3.getShape().getLine().setDashStyle(LineDashStyle.Solid);\n        commentC3.getShape().getFill().getColor().setRGB(Color.GetPink());\n        commentC3.getShape().setWidth(100);\n        commentC3.getShape().setHeight(200);\n        commentC3.getShape().getTextFrame().getTextRange().getFont().setBold(true);\n        commentC3.setVisible(true);\n\n    ",
  "com.grapecity.documents.excel.examples.features.comments.SetRichTextForComment": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        IComment commentC3 = worksheet.getRange(\"C3\").addComment(\"This is a rich text comment:\\r\\n\");\n\n        //config the paragraph's style.\n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getFont().setBold(true);\n\n        //add runs for the paragraph.\n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().add(\"Run1 font size is 15.\", 1);\n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().add(\"Run2 font strikethrough.\", 2);\n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().add(\"Run3 font italic, green color.\");\n\n        //config the first run of the paragraph's style.\n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().get(1).getFont().setSize(15);\n        //config the second run of the paragraph's style. \n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().get(2).getFont().setStrikethrough(true);\n\n        //config the third run of the paragraph's style. \n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().get(3).getFont().setItalic(true);\n        commentC3.getShape().getTextFrame().getTextRange().getParagraphs().get(0).getRuns().get(3).getFont().getColor().setRGB(Color.GetGreen());\n\n        //show comment.\n        commentC3.setVisible(true);\n\n        commentC3.getShape().setWidthInPixel(300);\n        commentC3.getShape().setHeightInPixel(100);\n\n    ",
  "com.grapecity.documents.excel.examples.features.comments.ClearComment": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        worksheet.getRange(\"C3\").addComment(\"Range C3's comment.\");\n        worksheet.getRange(\"D4\").addComment(\"Range D4's comment.\");\n        worksheet.getRange(\"D5\").addComment(\"Range D5's comment.\");\n\n        // delete a single cell comment.\n        worksheet.getRange(\"D5\").getComment().delete();\n\n        // clear a range of cells comment.\n        worksheet.getRange(\"C3:D4\").clearComments();\n\n    ",
  "com.grapecity.documents.excel.examples.features.comments.AddComment": "\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n\n        //create comment for range C3.\n        IComment comment = worksheet.getRange(\"C3\").addComment(\"Range C3's comment.\");\n\n        //change comment's text.\n        comment.setText(\"Range C3's new comment\");\n\n    ",
  "com.grapecity.documents.excel.examples.features.sparklines.UseDateAxis": "\n\n        Object data = new Object[][]\n                {\n                        {\"Number\", \"Date\", \"Customer\", \"Description\", \"Trend\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\", \"Amount\"},\n                        {\"1001\", new GregorianCalendar(2017, 4, 21), \"Customer A\", \"Invoice 1001\", null, 1200.15, 1916.18, 1105.23, 1806.53, null},\n                        {\"1002\", new GregorianCalendar(2017, 2, 18), \"Customer B\", \"Invoice 1002\", null, 896.23, 1005.53, 1800.56, 1150.49, null},\n                        {\"1003\", new GregorianCalendar(2017, 5, 15), \"Customer C\", \"Invoice 1003\", null, 827.63, 1009.23, 1869.23, 1002.56, null}\n                };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2:K5\").setValue(data);\n        worksheet.getRange(\"B:K\").setColumnWidth(15);\n\n        worksheet.getTables().add(worksheet.getRange(\"B2:K5\"), true);\n        worksheet.getTables().get(0).getColumns().get(9).getDataBodyRange().setFormula(\"=SUM(Table1[@[0-30 Days]:[>90 Days]])\");\n\n        //create a new group of sparklines.\n        worksheet.getRange(\"F3:F5\").getSparklineGroups().add(SparkType.Line, \"G3:J5\");\n\n        worksheet.getRange(\"G7:J7\").setValue(new Object[]{new GregorianCalendar(2011, 11, 16), new GregorianCalendar(2011, 11, 17), new GregorianCalendar(2011, 11, 18), new GregorianCalendar(2011, 11, 19)});\n        worksheet.getRange(\"F3\").getSparklineGroups().get(0).setDateRange(\"G7:J7\");\n        worksheet.getRange(\"F3\").getSparklineGroups().get(0).getAxes().getHorizontal().getAxis().setVisible(true);\n        worksheet.getRange(\"F3\").getSparklineGroups().get(0).getAxes().getHorizontal().getAxis().getColor().setColor(Color.GetGreen());\n\n    ",
  "com.grapecity.documents.excel.examples.features.sparklines.ClearSparklines": "\n\n        Object data = new Object[][]\n                {\n                        {\"Number\", \"Date\", \"Customer\", \"Description\", \"Trend\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\", \"Amount\"},\n                        {\"1001\", new GregorianCalendar(2017, 4, 21), \"Customer A\", \"Invoice 1001\", null, 1200.15, 1916.18, 1105.23, 1806.53, null},\n                        {\"1002\", new GregorianCalendar(2017, 2, 18), \"Customer B\", \"Invoice 1002\", null, 896.23, 1005.53, 1800.56, 1150.49, null},\n                        {\"1003\", new GregorianCalendar(2017, 5, 15), \"Customer C\", \"Invoice 1003\", null, 827.63, 1009.23, 1869.23, 1002.56, null}\n                };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2:K5\").setValue(data);\n        worksheet.getRange(\"B:K\").setColumnWidth(15);\n        worksheet.getTables().add(worksheet.getRange(\"B2:K5\"), true);\n        worksheet.getTables().get(0).getColumns().get(9).getDataBodyRange().setFormula(\"=SUM(Table1[@[0-30 Days]:[>90 Days]])\");\n\n        //create a new group of sparklines.\n        worksheet.getRange(\"F3\").getSparklineGroups().add(SparkType.Line, \"G3:J3\");\n        //create another new group of sparklines.\n        worksheet.getRange(\"F4:F5\").getSparklineGroups().add(SparkType.Column, \"G4:J5\");\n\n        //clear F3 and F4 cell's sparkline. F5 cell's sparkline still exist.\n        worksheet.getRange(\"F3, F4\").getSparklineGroups().clear();\n    ",
  "com.grapecity.documents.excel.examples.features.sparklines.CreateSparklines": "\n\n        Object data = new Object[][]\n                {\n                        {\"Number\", \"Date\", \"Customer\", \"Description\", \"Trend\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\", \"Amount\"},\n                        {\"1001\", new GregorianCalendar(2017, 4, 21), \"Customer A\", \"Invoice 1001\", null, 1200.15, 1916.18, 1105.23, 1806.53, null},\n                        {\"1002\", new GregorianCalendar(2017, 2, 18), \"Customer B\", \"Invoice 1002\", null, 896.23, 1005.53, 1800.56, 1150.49, null},\n                        {\"1003\", new GregorianCalendar(2017, 5, 15), \"Customer C\", \"Invoice 1003\", null, 827.63, 1009.23, 1869.23, 1002.56, null}\n                };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2:K5\").setValue(data);\n        worksheet.getRange(\"B:K\").setColumnWidth(15);\n\n        worksheet.getTables().add(worksheet.getRange(\"B2:K5\"), true);\n        worksheet.getTables().get(0).getColumns().get(9).getDataBodyRange().setFormula(\"=SUM(Table1[@[0-30 Days]:[>90 Days]])\");\n\n        //create a new group of sparklines.\n        worksheet.getRange(\"F3:F5\").getSparklineGroups().add(SparkType.Line, \"G3:J5\");\n    ",
  "com.grapecity.documents.excel.examples.features.sparklines.ClearSparklineGroup": "\n\n        Object data = new Object[][]\n                {\n                        {\"Number\", \"Date\", \"Customer\", \"Description\", \"Trend\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\", \"Amount\"},\n                        {\"1001\", new GregorianCalendar(2017, 4, 21), \"Customer A\", \"Invoice 1001\", null, 1200.15, 1916.18, 1105.23, 1806.53, null},\n                        {\"1002\", new GregorianCalendar(2017, 2, 18), \"Customer B\", \"Invoice 1002\", null, 896.23, 1005.53, 1800.56, 1150.49, null},\n                        {\"1003\", new GregorianCalendar(2017, 5, 15), \"Customer C\", \"Invoice 1003\", null, 827.63, 1009.23, 1869.23, 1002.56, null}\n                };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2:K5\").setValue(data);\n        worksheet.getRange(\"B:K\").setColumnWidth(15);\n        worksheet.getTables().add(worksheet.getRange(\"B2:K5\"), true);\n        worksheet.getTables().get(0).getColumns().get(9).getDataBodyRange().setFormula(\"=SUM(Table1[@[0-30 Days]:[>90 Days]])\");\n\n        //create a new group of sparklines.\n        worksheet.getRange(\"F3\").getSparklineGroups().add(SparkType.Line, \"G3:J3\");\n        //create another new group of sparklines.\n        worksheet.getRange(\"F4:F5\").getSparklineGroups().add(SparkType.Column, \"G4:J5\");\n\n        //clear sparkline group, all sparklines in the group will be cleaned.\n        worksheet.getRange(\"F3, F4\").getSparklineGroups().clearGroups();\n    ",
  "com.grapecity.documents.excel.examples.features.sparklines.ConfigSparklineSettings": "\n\n        Object data = new Object[][]\n                {\n                        {\"Number\", \"Date\", \"Customer\", \"Description\", \"Trend\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\", \"Amount\"},\n                        {\"1001\", new GregorianCalendar(2017, 4, 21), \"Customer A\", \"Invoice 1001\", null, 1200.15, 1916.18, 1105.23, 1806.53, null},\n                        {\"1002\", new GregorianCalendar(2017, 2, 18), \"Customer B\", \"Invoice 1002\", null, 896.23, 1005.53, 1800.56, 1150.49, null},\n                        {\"1003\", new GregorianCalendar(2017, 5, 15), \"Customer C\", \"Invoice 1003\", null, 827.63, 1009.23, 1869.23, 1002.56, null}\n                };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2:K5\").setValue(data);\n        worksheet.getRange(\"B:K\").setColumnWidth(15);\n\n        worksheet.getTables().add(worksheet.getRange(\"B2:K5\"), true);\n        worksheet.getTables().get(0).getColumns().get(9).getDataBodyRange().setFormula(\"=SUM(Table1[@[0-30 Days]:[>90 Days]])\");\n\n        //create a new group of sparklines.\n        worksheet.getRange(\"F3:F5\").getSparklineGroups().add(SparkType.Line, \"G3:J5\");\n        ISparklineGroup sparklinegroup = worksheet.getRange(\"F3\").getSparklineGroups().get(0);\n\n        //Config sparkline settings.\n        sparklinegroup.setLineWeight(2.5);\n        sparklinegroup.getPoints().getMarkers().getColor().setThemeColor(ThemeColor.Accent2);\n        sparklinegroup.getPoints().getMarkers().setVisible(true);\n        sparklinegroup.getSeriesColor().setThemeColor(ThemeColor.Accent6);\n    ",
  "com.grapecity.documents.excel.examples.features.sparklines.GroupExistSparklines": "\n\n        Object data = new Object[][]\n                {\n                        {\"Number\", \"Date\", \"Customer\", \"Description\", \"Trend\", \"0-30 Days\", \"30-60 Days\", \"60-90 Days\", \">90 Days\", \"Amount\"},\n                        {\"1001\", new GregorianCalendar(2017, 4, 21), \"Customer A\", \"Invoice 1001\", null, 1200.15, 1916.18, 1105.23, 1806.53, null},\n                        {\"1002\", new GregorianCalendar(2017, 2, 18), \"Customer B\", \"Invoice 1002\", null, 896.23, 1005.53, 1800.56, 1150.49, null},\n                        {\"1003\", new GregorianCalendar(2017, 5, 15), \"Customer C\", \"Invoice 1003\", null, 827.63, 1009.23, 1869.23, 1002.56, null}\n                };\n\n        IWorksheet worksheet = workbook.getWorksheets().get(0);\n        worksheet.getRange(\"B2:K5\").setValue(data);\n        worksheet.getRange(\"B:K\").setColumnWidth(15);\n\n        worksheet.getTables().add(worksheet.getRange(\"B2:K5\"), true);\n        worksheet.getTables().get(0).getColumns().get(9).getDataBodyRange().setFormula(\"=SUM(Table1[@[0-30 Days]:[>90 Days]])\");\n\n        //create a new group of sparklines.\n        worksheet.getRange(\"F3\").getSparklineGroups().add(SparkType.Line, \"G3:J3\");\n        //create another new group of sparklines.\n        worksheet.getRange(\"F4:F5\").getSparklineGroups().add(SparkType.Column, \"G4:J5\");\n\n        //Create a new group, group exist sparklines, according to Range[\"F4\"]'s sparkline group setting.\n        worksheet.getRange(\"F3:F5\").getSparklineGroups().group(worksheet.getRange(\"F4\"));\n    "
}3.productType = \"Fruit\";\r\n\t\tsalesInfo3.sales = 322;\r\n\t\tsalesInfos.add(salesInfo3);\r\n\r\n\t\tSalesInfo salesInfo4 = new SalesInfo();\r\n\t\tsalesInfo4.area = \"NorthChina\";\r\n\t\tsalesInfo4.salesman = \"Hellen\";\r\n\t\tsalesInfo4.product = \"Carrots\";\r\n\t\tsalesInfo4.productType = \"Vegetable\";\r\n\t\tsalesInfo4.sales = 154;\r\n\t\tsalesInfos.add(salesInfo4);\r\n\r\n\t\tSalesInfo salesInfo5 = new SalesInfo();\r\n\t\tsalesInfo5.area = \"NorthChina\";\r\n\t\tsalesInfo5.salesman = \"Fancy\";\r\n\t\tsalesInfo5.product = \"Carrots\";\r\n\t\tsalesInfo5.productType = \"Vegetable\";\r\n\t\tsalesInfo5.sales = 131;\r\n\t\tsalesInfos.add(salesInfo5);\r\n\r\n\t\tSalesInfo salesInfo6 = new SalesInfo();\r\n\t\tsalesInfo6.area = \"NorthChina\";\r\n\t\tsalesInfo6.salesman = \"Fancy\";\r\n\t\tsalesInfo6.product = \"Cabbage\";\r\n\t\tsalesInfo6.productType = \"Vegetable\";\r\n\t\tsalesInfo6.sales = 98;\r\n\t\tsalesInfos.add(salesInfo6);\r\n\r\n\t\tSalesInfo salesInfo7 = new SalesInfo();\r\n\t\tsalesInfo7.area = \"NorthChina\";\r\n\t\tsalesInfo7.salesman = \"Fancy\";\r\n\t\tsalesInfo7.product = \"Potato\";\r\n\t\tsalesInfo7.productType = \"Vegetable\";\r\n\t\tsalesInfo7.sales = 212;\r\n\t\tsalesInfos.add(salesInfo7);\r\n\r\n\t\tSalesInfo salesInfo8 = new SalesInfo();\r\n\t\tsalesInfo8.area = \"NorthChina\";\r\n\t\tsalesInfo8.salesman = \"Fancy\";\r\n\t\tsalesInfo8.product = \"Apple\";\r\n\t\tsalesInfo8.productType = \"Fruit\";\r\n\t\tsalesInfo8.sales = 120;\r\n\t\tsalesInfos.add(salesInfo8);\r\n\r\n\t\tSalesInfo salesInfo9 = new SalesInfo();\r\n\t\tsalesInfo9.area = \"NorthChina\";\r\n\t\tsalesInfo9.salesman = \"Ivan\";\r\n\t\tsalesInfo9.product = \"Apple\";\r\n\t\tsalesInfo9.productType = \"Fruit\";\r\n\t\tsalesInfo9.sales = 164;\r\n\t\tsalesInfos.add(salesInfo9);\r\n\r\n\t\tSalesInfo salesInfo10 = new SalesInfo();\r\n\t\tsalesInfo10.area = \"NorthChina\";\r\n\t\tsalesInfo10.salesman = \"Ivan\";\r\n\t\tsalesInfo10.product = \"Kiwi\";\r\n\t\tsalesInfo10.productType = \"Fruit\";\r\n\t\tsalesInfo10.sales = 213;\r\n\t\tsalesInfos.add(salesInfo10);\r\n\r\n\t\tSalesInfo salesInfo11 = new SalesInfo();\r\n\t\tsalesInfo11.area = \"NorthChina\";\r\n\t\tsalesInfo11.salesman = \"Ivan\";\r\n\t\tsalesInfo11.product = \"Potato\";\r\n\t\tsalesInfo11.productType = \"Vegetable\";\r\n\t\tsalesInfo11.sales = 56;\r\n\t\tsalesInfos.add(salesInfo11);\r\n\r\n\t\tSalesInfo salesInfo12 = new SalesInfo();\r\n\t\tsalesInfo12.area = \"NorthChina\";\r\n\t\tsalesInfo12.salesman = \"Ivan\";\r\n\t\tsalesInfo12.product = \"Cabbage\";\r\n\t\tsalesInfo12.productType = \"Vegetable\";\r\n\t\tsalesInfo12.sales = 265;\r\n\t\tsalesInfos.add(salesInfo12);\r\n\r\n\t\tSalesInfo salesInfo13 = new SalesInfo();\r\n\t\tsalesInfo13.area = \"SouthChina\";\r\n\t\tsalesInfo13.salesman = \"Adam\";\r\n\t\tsalesInfo13.product = \"Cabbage\";\r\n\t\tsalesInfo13.productType = \"Vegetable\";\r\n\t\tsalesInfo13.sales = 112;\r\n\t\tsalesInfos.add(salesInfo13);\r\n\r\n\t\tSalesInfo salesInfo14 = new SalesInfo();\r\n\t\tsalesInfo14.area = \"SouthChina\";\r\n\t\tsalesInfo14.salesman = \"Adam\";\r\n\t\tsalesInfo14.product = \"Carrots\";\r\n\t\tsalesInfo14.productType = \"Vegetable\";\r\n\t\tsalesInfo14.sales = 354;\r\n\t\tsalesInfos.add(salesInfo14);\r\n\r\n\t\tSalesInfo salesInfo15 = new SalesInfo();\r\n\t\tsalesInfo15.area = \"SouthChina\";\r\n\t\tsalesInfo15.salesman = \"Adam\";\r\n\t\tsalesInfo15.product = \"Banana\";\r\n\t\tsalesInfo15.productType = \"Fruit\";\r\n\t\tsalesInfo15.sales = 277;\r\n\t\tsalesInfos.add(salesInfo15);\r\n\r\n\t\tSalesInfo salesInfo16 = new SalesInfo();\r\n\t\tsalesInfo16.area = \"SouthChina\";\r\n\t\tsalesInfo16.salesman = \"Adam\";\r\n\t\tsalesInfo16.product = \"Apple\";\r\n\t\tsalesInfo16.productType = \"Fruit\";\r\n\t\tsalesInfo16.sales = 105;\r\n\t\tsalesInfos.add(salesInfo16);\r\n\r\n\t\tSalesInfo salesInfo17 = new SalesInfo();\r\n\t\tsalesInfo17.area = \"SouthChina\";\r\n\t\tsalesInfo17.salesman = \"Bob\";\r\n\t\tsalesInfo17.product = \"Kiwi\";\r\n\t\tsalesInfo17.productType = \"Fruit\";\r\n\t\tsalesInfo17.sales = 402;\r\n\t\tsalesInfos.add(salesInfo17);\r\n\r\n\t\tSalesInfo salesInfo18 = new SalesInfo();\r\n\t\tsalesInfo18.area = \"SouthChina\";\r\n\t\tsalesInfo18.salesman = \"Bob\";\r\n\t\tsalesInfo18.product = \"Banana\";\r\n\t\tsalesInfo18.productType = \"Fruit\";\r\n\t\tsalesInfo18.sales = 133;\r\n\t\tsalesInfos.add(salesInfo1);\r\n\r\n\t\tSalesInfo salesInfo19 = new SalesInfo();\r\n\t\tsalesInfo19.area = \"SouthChina\";\r\n\t\tsalesInfo19.salesman = \"Bob\";\r\n\t\tsalesInfo19.product = \"Cabbage\";\r\n\t\tsalesInfo19.productType = \"Vegetable\";\r\n\t\tsalesInfo19.sales = 252;\r\n\t\tsalesInfos.add(salesInfo19);\r\n\r\n\t\tSalesInfo salesInfo20 = new SalesInfo();\r\n\t\tsalesInfo20.area = \"SouthChina\";\r\n\t\tsalesInfo20.salesman = \"Bob\";\r\n\t\tsalesInfo20.product = \"Potato\";\r\n\t\tsalesInfo20.productType = \"Vegetable\";\r\n\t\tsalesInfo20.sales = 265;\r\n\t\tsalesInfos.add(salesInfo20);\r\n\t\t///#endregion\r\n\r\n\t\t//Add data source\r\n\t\tworkbook.addDataSource(\"ds\", salesInfos);\r\n\t\t//Invoke to process the template\r\n\t\tworkbook.processTemplate();\r\n\t",
  "com.grapecity.documents.excel.examples.template.templatesamples.ShippingAndDeliveryOrder": "\r\n\t\t//Load template file Template_Score.xlsx from resource\r\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_ShippingAndDeliveryOrder.xlsx\");\r\n\t\tworkbook.open(templateFile);\r\n\r\n\t\t///#region Define custom classes\r\n\t\t//\t\tpublic class PackingList {\r\n\t\t//\t\t\tpublic String exporter;\r\n\t\t//\t\t\tpublic String address_exporter;\r\n\t\t//\t\t\tpublic String country_exporter;\r\n\t\t//\t\t\tpublic String phonenumber_shipper;\r\n\t\t//\t\t\tpublic String shipper;\r\n\t\t//\r\n\t\t//\t\t\tpublic String imports;\r\n\t\t//\t\t\tpublic String address_consignee;\r\n\t\t//\t\t\tpublic String country_consignee;\r\n\t\t//\t\t\tpublic String phonenumber_consignee;\r\n\t\t//\t\t\tpublic String consignee;\r\n\t\t//\r\n\t\t//\t\t\tpublic int invoice_No;\r\n\t\t//\t\t\tpublic Date date = new Date(0);\r\n\t\t//\t\t\tpublic int reference;\r\n\t\t//\r\n\t\t//\t\t\tpublic String dispatchMethod;\r\n\t\t//\t\t\tpublic String shipmentType;\r\n\t\t//\t\t\tpublic String vA;\r\n\t\t//\t\t\tpublic String voyageNo;\r\n\t\t//\t\t\tpublic String portofLanding;\r\n\t\t//\t\t\tpublic Date departureDate = new Date(0);\r\n\t\t//\t\t\tpublic String dischargePort;\r\n\t\t//\t\t\tpublic String finalDestination;\r\n\t\t//\r\n\t\t//\t\t\tpublic String goodsOriginCountry;\r\n\t\t//\t\t\tpublic String destinationCountry;\r\n\t\t//\r\n\t\t//\t\t\tpublic ArrayList<Product> item;\r\n\t\t//\r\n\t\t//\t\t\tpublic String issuePlace;\r\n\t\t//\t\t\tpublic Date issueDate = new Date(0);\r\n\t\t//\t\t\tpublic String signatoryCompany;\r\n\t\t//\t\t\tpublic String signatoryName;\r\n\t\t//\r\n\t\t//\t\t}\r\n\r\n\t\t//\t\tpublic class Product {\r\n\t\t//\t\t\tpublic String productcode;\r\n\t\t//\t\t\tpublic String goods;\r\n\t\t//\t\t\tpublic double quantity;\r\n\t\t//\t\t\tpublic double netweight;\r\n\t\t//\t\t\tpublic String kindAndPackagesCount;\r\n\t\t//\t\t\tpublic double grossweight;\r\n\t\t//\t\t\tpublic double measurements;\r\n\t\t//\t\t}\r\n\t\t///#endregion\r\n\r\n\t\t///#region Init Data\r\n\t\tPackingList packinginfo = new PackingList();\r\n\t\tpackinginfo.exporter = \"DEL Exports\";\r\n\t\tpackinginfo.address_exporter = \"4243 Longline Vlvd Longline, CA - 98020\";\r\n\t\tpackinginfo.country_exporter = \"United States\";\r\n\t\tpackinginfo.phonenumber_shipper = \"010-510-22424\";\r\n\t\tpackinginfo.shipper = \"Diana Thompson\";\r\n\r\n\t\tpackinginfo.imports = \"Deanna Imports\";\r\n\t\tpackinginfo.address_consignee = \"113/23, Lombard Street Halford Townsville, Melbourne, 4323\";\r\n\t\tpackinginfo.country_consignee = \"Australia\";\r\n\t\tpackinginfo.phonenumber_consignee = \"010-510-33232\";\r\n\t\tpackinginfo.consignee = \"James Williams\";\r\n\r\n\t\tpackinginfo.invoice_No = 1934;\r\n\t\tpackinginfo.date = new GregorianCalendar(2019, 1, 30).getTime();\r\n\t\tpackinginfo.reference = 1934;\r\n\r\n\t\tpackinginfo.dispatchMethod = \"Sea\";\r\n\t\tpackinginfo.shipmentType = \"FCL\";\r\n\t\tpackinginfo.goodsOriginCountry = \"United States\";\r\n\t\tpackinginfo.destinationCountry = \"Australia\";\r\n\t\tpackinginfo.vA = \"MAKERS DYER\";\r\n\t\tpackinginfo.voyageNo = \"6E\";\r\n\t\tpackinginfo.portofLanding = \"Longline - California\";\r\n\t\tpackinginfo.departureDate = new GregorianCalendar(2019, 2, 1).getTime();\r\n\t\tpackinginfo.dischargePort = \"Melbourne - Australia\";\r\n\t\tpackinginfo.finalDestination = \"Australia\";\r\n\r\n\t\tProduct product1 = new Product();\r\n\t\tproduct1.productcode = \"P1001\";\r\n\t\tproduct1.goods = \"Pencils - HB\";\r\n\t\tproduct1.quantity = 5;\r\n\t\tproduct1.netweight = 0.1;\r\n\t\tproduct1.kindAndPackagesCount = \"PALLET X 1\";\r\n\t\tproduct1.grossweight = 750;\r\n\t\tproduct1.measurements = 1.7;\r\n\r\n\t\tProduct product2 = new Product();\r\n\t\tproduct2.productcode = \"P1002\";\r\n\t\tproduct2.goods = \"Paper - A4\";\r\n\t\tproduct2.quantity = 3;\r\n\t\tproduct2.netweight = 2;\r\n\t\tproduct2.kindAndPackagesCount = \"PALLET X 2\";\r\n\t\tproduct2.grossweight = 250;\r\n\t\tproduct2.measurements = 1.4;\r\n\r\n\t\tpackinginfo.item = new ArrayList<Product>(Arrays.asList(product1, product2));\r\n\r\n\t\tpackinginfo.issuePlace = \"Longline\";\r\n\t\tpackinginfo.issueDate = new GregorianCalendar(2019, 1, 30).getTime();\r\n\t\tpackinginfo.signatoryCompany = \"DEL Exports\";\r\n\t\tpackinginfo.signatoryName = \"Rayna Johnson\";\r\n\t\t///#endregion\r\n\r\n\t\t//Add data source\r\n\t\tworkbook.addDataSource(\"ds\", packinginfo);\r\n\t\t//Invoke to process the template\r\n\t\tworkbook.processTemplate();\r\n\t",
  "com.grapecity.documents.excel.examples.template.templatesamples.TablixReport": "\r\n\t\t//Load template file Template_Score.xlsx from resource\r\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_TablixReport.xlsx\");\r\n\t\tworkbook.open(templateFile);\r\n\r\n\t\t/// #region Define custom classes\r\n\t\t//\t\tpublic class TablixInfo {\r\n\t\t//\t\t\tpublic int orderID;\r\n\t\t//\t\t\tpublic String product;\r\n\t\t//\t\t\tpublic double sales;\r\n\t\t//\t\t\tpublic String productType;\r\n\t\t//\t\t\tpublic String year;\r\n\t\t//\t\t\tpublic String season;\r\n\t\t//\t\t}\r\n\t\t/// #endregion\r\n\r\n\t\t///#region Init Data\r\n\t\tList<TablixInfo> tablixInfos = new ArrayList<TablixInfo>();\r\n\r\n\t\tTablixInfo tablixInfo1 = new TablixInfo();\r\n\t\ttablixInfo1.orderID = 1;\r\n\t\ttablixInfo1.product = \"Röd Kaviar\";\r\n\t\ttablixInfo1.sales = 300;\r\n\t\ttablixInfo1.productType = \"Seafood\";\r\n\t\ttablixInfo1.year = \"2017\";\r\n\t\ttablixInfo1.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo1);\r\n\r\n\t\tTablixInfo tablixInfo2 = new TablixInfo();\r\n\t\ttablixInfo2.orderID = 2;\r\n\t\ttablixInfo2.product = \"Spegesild\";\r\n\t\ttablixInfo2.sales = 144;\r\n\t\ttablixInfo2.productType = \"Seafood\";\r\n\t\ttablixInfo2.year = \"2017\";\r\n\t\ttablixInfo2.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo2);\r\n\r\n\t\tTablixInfo tablixInfo3 = new TablixInfo();\r\n\t\ttablixInfo3.orderID = 3;\r\n\t\ttablixInfo3.product = \"Carnarvon Tigers\";\r\n\t\ttablixInfo3.sales = 600;\r\n\t\ttablixInfo3.productType = \"Seafood\";\r\n\t\ttablixInfo3.year = \"2017\";\r\n\t\ttablixInfo3.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo3);\r\n\r\n\t\tTablixInfo tablixInfo4 = new TablixInfo();\r\n\t\ttablixInfo4.orderID = 4;\r\n\t\ttablixInfo4.product = \"Spegesild\";\r\n\t\ttablixInfo4.sales = 288;\r\n\t\ttablixInfo4.productType = \"Seafood\";\r\n\t\ttablixInfo4.year = \"2017\";\r\n\t\ttablixInfo4.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo4);\r\n\r\n\t\tTablixInfo tablixInfo5 = new TablixInfo();\r\n\t\ttablixInfo5.orderID = 5;\r\n\t\ttablixInfo5.product = \"Carnarvon Tigers\";\r\n\t\ttablixInfo5.sales = 4250;\r\n\t\ttablixInfo5.productType = \"Seafood\";\r\n\t\ttablixInfo5.year = \"2017\";\r\n\t\ttablixInfo5.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo5);\r\n\r\n\t\tTablixInfo tablixInfo6 = new TablixInfo();\r\n\t\ttablixInfo6.orderID = 6;\r\n\t\ttablixInfo6.product = \"Escargots de Bourgogne\";\r\n\t\ttablixInfo6.sales = 636;\r\n\t\ttablixInfo6.productType = \"Seafood\";\r\n\t\ttablixInfo6.year = \"2017\";\r\n\t\ttablixInfo6.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo6);\r\n\r\n\t\tTablixInfo tablixInfo7 = new TablixInfo();\r\n\t\ttablixInfo7.orderID = 7;\r\n\t\ttablixInfo7.product = \"Röd Kaviar\";\r\n\t\ttablixInfo7.sales = 240;\r\n\t\ttablixInfo7.productType = \"Seafood\";\r\n\t\ttablixInfo7.year = \"2018\";\r\n\t\ttablixInfo7.season = \"Q1\";\r\n\t\ttablixInfos.add(tablixInfo7);\r\n\r\n\t\tTablixInfo tablixInfo8 = new TablixInfo();\r\n\t\ttablixInfo8.orderID = 8;\r\n\t\ttablixInfo8.product = \"Carnarvon Tigers\";\r\n\t\ttablixInfo8.sales = 450;\r\n\t\ttablixInfo8.productType = \"Seafood\";\r\n\t\ttablixInfo8.year = \"2018\";\r\n\t\ttablixInfo8.season = \"Q1\";\r\n\t\ttablixInfos.add(tablixInfo8);\r\n\r\n\t\tTablixInfo tablixInfo9 = new TablixInfo();\r\n\t\ttablixInfo9.orderID = 9;\r\n\t\ttablixInfo9.product = \"Röd Kaviar\";\r\n\t\ttablixInfo9.sales = 735;\r\n\t\ttablixInfo9.productType = \"Seafood\";\r\n\t\ttablixInfo9.year = \"2018\";\r\n\t\ttablixInfo9.season = \"Q2\";\r\n\t\ttablixInfos.add(tablixInfo9);\r\n\r\n\t\tTablixInfo tablixInfo10 = new TablixInfo();\r\n\t\ttablixInfo10.orderID = 10;\r\n\t\ttablixInfo10.product = \"Røgede sild\";\r\n\t\ttablixInfo10.sales = 1377;\r\n\t\ttablixInfo10.productType = \"Seafood\";\r\n\t\ttablixInfo10.year = \"2018\";\r\n\t\ttablixInfo10.season = \"Q2\";\r\n\t\ttablixInfos.add(tablixInfo10);\r\n\r\n\t\tTablixInfo tablixInfo11 = new TablixInfo();\r\n\t\ttablixInfo11.orderID = 11;\r\n\t\ttablixInfo11.product = \"Röd Kaviar\";\r\n\t\ttablixInfo11.sales = 1020;\r\n\t\ttablixInfo11.productType = \"Seafood\";\r\n\t\ttablixInfo11.year = \"2018\";\r\n\t\ttablixInfo11.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo11);\r\n\r\n\t\tTablixInfo tablixInfo12 = new TablixInfo();\r\n\t\ttablixInfo12.orderID = 12;\r\n\t\ttablixInfo12.product = \"Røgede sild\";\r\n\t\ttablixInfo12.sales = 190;\r\n\t\ttablixInfo12.productType = \"Seafood\";\r\n\t\ttablixInfo12.year = \"2018\";\r\n\t\ttablixInfo12.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo12);\r\n\r\n\t\tTablixInfo tablixInfo13 = new TablixInfo();\r\n\t\ttablixInfo13.orderID = 13;\r\n\t\ttablixInfo13.product = \"Röd Kaviar\";\r\n\t\ttablixInfo13.sales = 1725;\r\n\t\ttablixInfo13.productType = \"Seafood\";\r\n\t\ttablixInfo13.year = \"2018\";\r\n\t\ttablixInfo13.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo13);\r\n\r\n\t\tTablixInfo tablixInfo14 = new TablixInfo();\r\n\t\ttablixInfo14.orderID = 14;\r\n\t\ttablixInfo14.product = \"Carnarvon Tigers\";\r\n\t\ttablixInfo14.sales = 3562;\r\n\t\ttablixInfo14.productType = \"Seafood\";\r\n\t\ttablixInfo14.year = \"2018\";\r\n\t\ttablixInfo14.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo14);\r\n\r\n\t\tTablixInfo tablixInfo15 = new TablixInfo();\r\n\t\ttablixInfo15.orderID = 15;\r\n\t\ttablixInfo15.product = \"Sir Rodney's Marmalade\";\r\n\t\ttablixInfo15.sales = 4276;\r\n\t\ttablixInfo15.productType = \"Confections\";\r\n\t\ttablixInfo15.year = \"2017\";\r\n\t\ttablixInfo15.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo15);\r\n\r\n\t\tTablixInfo tablixInfo16 = new TablixInfo();\r\n\t\ttablixInfo16.orderID = 16;\r\n\t\ttablixInfo16.product = \"Maxilaku\";\r\n\t\ttablixInfo16.sales = 880;\r\n\t\ttablixInfo16.productType = \"Confections\";\r\n\t\ttablixInfo16.year = \"2017\";\r\n\t\ttablixInfo16.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo16);\r\n\r\n\t\tTablixInfo tablixInfo17 = new TablixInfo();\r\n\t\ttablixInfo17.orderID = 17;\r\n\t\ttablixInfo17.product = \"Maxilaku\";\r\n\t\ttablixInfo17.sales = 1040;\r\n\t\ttablixInfo17.productType = \"Confections\";\r\n\t\ttablixInfo17.year = \"2017\";\r\n\t\ttablixInfo17.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo17);\r\n\r\n\t\tTablixInfo tablixInfo18 = new TablixInfo();\r\n\t\ttablixInfo18.orderID = 18;\r\n\t\ttablixInfo18.product = \"NuNuCa Nuß-Nougat-Creme\";\r\n\t\ttablixInfo18.sales = 716.8;\r\n\t\ttablixInfo18.productType = \"Confections\";\r\n\t\ttablixInfo18.year = \"2017\";\r\n\t\ttablixInfo18.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo18);\r\n\r\n\t\tTablixInfo tablixInfo19 = new TablixInfo();\r\n\t\ttablixInfo19.orderID = 1;\r\n\t\ttablixInfo19.product = \"Sir Rodney's Marmalade\";\r\n\t\ttablixInfo19.sales = 2592;\r\n\t\ttablixInfo19.productType = \"Confections\";\r\n\t\ttablixInfo19.year = \"2018\";\r\n\t\ttablixInfo19.season = \"Q1\";\r\n\t\ttablixInfos.add(tablixInfo19);\r\n\r\n\t\tTablixInfo tablixInfo20 = new TablixInfo();\r\n\t\ttablixInfo20.orderID = 20;\r\n\t\ttablixInfo20.product = \"Maxilaku\";\r\n\t\ttablixInfo20.sales = 1296;\r\n\t\ttablixInfo20.productType = \"Confections\";\r\n\t\ttablixInfo20.year = \"2018\";\r\n\t\ttablixInfo20.season = \"Q1\";\r\n\t\ttablixInfos.add(tablixInfo20);\r\n\r\n\t\tTablixInfo tablixInfo21 = new TablixInfo();\r\n\t\ttablixInfo21.orderID = 21;\r\n\t\ttablixInfo21.product = \"Pavlova\";\r\n\t\ttablixInfo21.sales = 1473.4;\r\n\t\ttablixInfo21.productType = \"Confections\";\r\n\t\ttablixInfo21.year = \"2018\";\r\n\t\ttablixInfo21.season = \"Q1\";\r\n\t\ttablixInfos.add(tablixInfo21);\r\n\r\n\t\tTablixInfo tablixInfo22 = new TablixInfo();\r\n\t\ttablixInfo22.orderID = 22;\r\n\t\ttablixInfo22.product = \"Sir Rodney's Marmalade\";\r\n\t\ttablixInfo22.sales = 4374;\r\n\t\ttablixInfo22.productType = \"Confections\";\r\n\t\ttablixInfo22.year = \"2018\";\r\n\t\ttablixInfo22.season = \"Q2\";\r\n\t\ttablixInfos.add(tablixInfo22);\r\n\r\n\t\tTablixInfo tablixInfo23 = new TablixInfo();\r\n\t\ttablixInfo23.orderID = 23;\r\n\t\ttablixInfo23.product = \"Maxilaku\";\r\n\t\ttablixInfo23.sales = 1004;\r\n\t\ttablixInfo23.productType = \"Confections\";\r\n\t\ttablixInfo23.year = \"2018\";\r\n\t\ttablixInfo23.season = \"Q2\";\r\n\t\ttablixInfos.add(tablixInfo1);\r\n\r\n\t\tTablixInfo tablixInfo24 = new TablixInfo();\r\n\t\ttablixInfo24.orderID = 24;\r\n\t\ttablixInfo24.product = \"Pavlova\";\r\n\t\ttablixInfo24.sales = 3075;\r\n\t\ttablixInfo24.productType = \"Confections\";\r\n\t\ttablixInfo24.year = \"2018\";\r\n\t\ttablixInfo24.season = \"Q2\";\r\n\t\ttablixInfos.add(tablixInfo24);\r\n\r\n\t\tTablixInfo tablixInfo25 = new TablixInfo();\r\n\t\ttablixInfo25.orderID = 25;\r\n\t\ttablixInfo25.product = \"Sir Rodney's Marmalade\";\r\n\t\ttablixInfo25.sales = 1071;\r\n\t\ttablixInfo25.productType = \"Confections\";\r\n\t\ttablixInfo25.year = \"2018\";\r\n\t\ttablixInfo25.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo25);\r\n\r\n\t\tTablixInfo tablixInfo26 = new TablixInfo();\r\n\t\ttablixInfo26.orderID = 1;\r\n\t\ttablixInfo26.product = \"Maxilaku\";\r\n\t\ttablixInfo26.sales = 860;\r\n\t\ttablixInfo26.productType = \"Confections\";\r\n\t\ttablixInfo26.year = \"2018\";\r\n\t\ttablixInfo26.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo26);\r\n\r\n\t\tTablixInfo tablixInfo27 = new TablixInfo();\r\n\t\ttablixInfo27.orderID = 27;\r\n\t\ttablixInfo27.product = \"Pavlova\";\r\n\t\ttablixInfo27.sales = 732;\r\n\t\ttablixInfo27.productType = \"Confections\";\r\n\t\ttablixInfo27.year = \"2018\";\r\n\t\ttablixInfo27.season = \"Q3\";\r\n\t\ttablixInfos.add(tablixInfo27);\r\n\r\n\t\tTablixInfo tablixInfo28 = new TablixInfo();\r\n\t\ttablixInfo28.orderID = 28;\r\n\t\ttablixInfo28.product = \"Sir Rodney's Marmalade\";\r\n\t\ttablixInfo28.sales = 1071;\r\n\t\ttablixInfo28.productType = \"Confections\";\r\n\t\ttablixInfo28.year = \"2018\";\r\n\t\ttablixInfo28.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo28);\r\n\r\n\t\tTablixInfo tablixInfo29 = new TablixInfo();\r\n\t\ttablixInfo29.orderID = 29;\r\n\t\ttablixInfo29.product = \"Pavlova\";\r\n\t\ttablixInfo29.sales = 2634;\r\n\t\ttablixInfo29.productType = \"Confections\";\r\n\t\ttablixInfo29.year = \"2018\";\r\n\t\ttablixInfo29.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo29);\r\n\r\n\t\tTablixInfo tablixInfo30 = new TablixInfo();\r\n\t\ttablixInfo30.orderID = 30;\r\n\t\ttablixInfo30.product = \"Sir Rodney's Scones\";\r\n\t\ttablixInfo30.sales = 1790;\r\n\t\ttablixInfo30.productType = \"Confections\";\r\n\t\ttablixInfo30.year = \"2018\";\r\n\t\ttablixInfo30.season = \"Q4\";\r\n\t\ttablixInfos.add(tablixInfo30);\r\n\t\t///#endregion\r\n\r\n\t\t//Add data source\r\n\t\tworkbook.addDataSource(\"ds\", tablixInfos);\r\n\t\t//Invoke to process the template\r\n\t\tworkbook.processTemplate();\r\n\t",
  "com.grapecity.documents.excel.examples.template.templatesamples.Travel": "\r\n\t\t//Load template file Template_Score.xlsx from resource\r\n\t\tInputStream templateFile = this.getResourceStream(\"xlsx/Template_Travel.xlsx\");\r\n\t\tworkbook.open(templateFile);\r\n\r\n\t\t/// #region Define custom classes\r\n\t\t//\t\tpublic class FlightInfo {\r\n\t\t//\t\t\tpublic String carrier;\r\n\t\t//\t\t\tpublic int flightNo;\r\n\t\t//\t\t\tpublic Date date = new Date(0);\r\n\t\t//\t\t\tpublic String from;\r\n\t\t//\t\t\tpublic Calendar departureTime;\r\n\t\t//\t\t\tpublic String to;\r\n\t\t//\t\t\tpublic Calendar arrivalTime;\r\n\t\t//\t\t\tpublic String reservationNo;\r\n\t\t//\t\t}\r\n\r\n\t\t//\t\tpublic class LoadingInfo {\r\n\t\t//\t\t\tpublic String accommodations;\r\n\t\t//\t\t\tpublic Date date = new Date(0);\r\n\t\t//\t\t\tpublic String concierge;\r\n\t\t//\t\t\tpublic String phone;\r\n\t\t//\t\t\tpublic String email;\r\n\t\t//\t\t\tpublic String addressPart1;\r\n\t\t//\t\t\tpublic String addressPart2;\r\n\t\t//\t\t\tpublic String confirmNo;\r\n\t\t//\t\t\tpublic int days;\r\n\t\t//\t\t\tpublic double totalCost;\r\n\t\t//\t\t}\r\n\r\n\t\t//\t\tpublic class ContactInfo {\r\n\t\t//\t\t\tpublic String contact;\r\n\t\t//\t\t\tpublic String phone;\r\n\t\t//\t\t\tpublic String notes;\r\n\t\t//\t\t}\r\n\t\t/// #endregion\r\n\r\n\t\t///#region Init Data\r\n\t\tList<FlightInfo> flightInfos = new ArrayList<FlightInfo>();\r\n\r\n\t\tFlightInfo flightInfo1 = new FlightInfo();\r\n\t\tflightInfo1.carrier = \"Trenz Airlines\";\r\n\t\tflightInfo1.flightNo = 1623;\r\n\t\tflightInfo1.date = new GregorianCalendar(2018, 10, 25).getTime();\r\n\t\tflightInfo1.from = \"Lorem International\";\r\n\r\n\t\tGregorianCalendar departureTime1 = new GregorianCalendar();\r\n\t\tdepartureTime1.clear();\r\n\t\tdepartureTime1.set(0, 0, 0, 7, 56, 0);\r\n\t\tflightInfo1.departureTime = departureTime1;\r\n\r\n\t\tflightInfo1.to = \"Dolor Airport\";\r\n\r\n\t\tGregorianCalendar arrivalTime1 = new GregorianCalendar();\r\n\t\tarrivalTime1.clear();\r\n\t\tarrivalTime1.set(0, 0, 0, 9, 15, 0);\r\n\t\tflightInfo1.arrivalTime = arrivalTime1;\r\n\r\n\t\tflightInfo1.reservationNo = \"AG4567997\";\r\n\t\tflightInfos.add(flightInfo1);\r\n\r\n\t\tFlightInfo flightInfo2 = new FlightInfo();\r\n\t\tflightInfo2.carrier = \"Trenz Airlines\";\r\n\t\tflightInfo2.flightNo = 1323;\r\n\t\tflightInfo2.date = new GregorianCalendar(2018, 10, 30).getTime();\r\n\t\tflightInfo2.from = \"Lorem International\";\r\n\r\n\t\tGregorianCalendar departureTime2 = new GregorianCalendar();\r\n\t\tdepartureTime2.clear();\r\n\t\tdepartureTime2.set(0, 0, 0, 20, 25, 0);\r\n\t\tflightInfo2.departureTime = departureTime2;\r\n\r\n\t\tflightInfo2.to = \"Dolor Airport\";\r\n\r\n\t\tGregorianCalendar arrivalTime2 = new GregorianCalendar();\r\n\t\tarrivalTime2.clear();\r\n\t\tarrivalTime2.set(0, 0, 0, 21, 45, 0);\r\n\t\tflightInfo2.arrivalTime = arrivalTime2;\r\n\r\n\t\tflightInfo2.reservationNo = \"AG4567998\";\r\n\t\tflightInfos.add(flightInfo2);\r\n\r\n\t\tList<LoadingInfo> loadingInfos = new ArrayList<LoadingInfo>();\r\n\r\n\t\tLoadingInfo loadingInfo1 = new LoadingInfo();\r\n\t\tloadingInfo1.accommodations = \"Lorem Hotel\";\r\n\t\tloadingInfo1.date = new GregorianCalendar(2018, 10, 25).getTime();\r\n\t\tloadingInfo1.concierge = \"Charles\";\r\n\t\tloadingInfo1.phone = \"01234 567 890\";\r\n\t\tloadingInfo1.email = \"charles@lorem.com\";\r\n\t\tloadingInfo1.addressPart1 = \"123 High Street, \";\r\n\t\tloadingInfo1.addressPart2 = \"Anytown, County, Postcode\";\r\n\t\tloadingInfo1.confirmNo = \"A4567\";\r\n\t\tloadingInfo1.days = 2;\r\n\t\tloadingInfo1.totalCost = 800;\r\n\t\tloadingInfos.add(loadingInfo1);\r\n\r\n\t\tLoadingInfo loadingInfo2 = new LoadingInfo();\r\n\t\tloadingInfo2.accommodations = \"Deloz Hotel\";\r\n\t\tloadingInfo2.date = new GregorianCalendar(2018, 10, 27).getTime();\r\n\t\tloadingInfo2.concierge = \"James\";\r\n\t\tloadingInfo2.phone = \"01234 567 890\";\r\n\t\tloadingInfo2.email = \"no_reply@example.com\";\r\n\t\tloadingInfo2.addressPart1 = \"202 Halford Street, \";\r\n\t\tloadingInfo2.addressPart2 = \"Anytown, County, Postcode\";\r\n\t\tloadingInfo2.confirmNo = \"A4568\";\r\n\t\tloadingInfo2.days = 3;\r\n\t\tloadingInfo2.totalCost = 900;\r\n\t\tloadingInfos.add(loadingInfo2);\r\n\r\n\t\tList<ContactInfo> emergencyContactInfos = new ArrayList<ContactInfo>();\r\n\r\n\t\tContactInfo emergencyContactInfo1 = new ContactInfo();\r\n\t\temergencyContactInfo1.contact = \"Airline Reservations\";\r\n\t\temergencyContactInfo1.phone = \"01234 567 890\";\r\n\t\temergencyContactInfos.add(emergencyContactInfo1);\r\n\r\n\t\tContactInfo emergencyContactInfo2 = new ContactInfo();\r\n\t\temergencyContactInfo2.contact = \"Hotel Reservations\";\r\n\t\temergencyContactInfo2.phone = \"12342322232\";\r\n\t\temergencyContactInfos.add(emergencyContactInfo2);\r\n\r\n\t\tList<ContactInfo> contactInfos = new ArrayList<ContactInfo>();\r\n\r\n\t\tContactInfo contactInfo1 = new ContactInfo();\r\n\t\tcontactInfo1.contact = \"Tom Jenkins\";\r\n\t\tcontactInfo1.phone = \"01234 567 890\";\r\n\t\tcontactInfo1.notes = \"tom.jerkins@trenz.com\";\r\n\t\tcontactInfos.add(contactInfo1);\r\n\r\n\t\tContactInfo contactInfo2 = new ContactInfo();\r\n\t\tcontactInfo2.contact = \"Rayna James\";\r\n\t\tcontactInfo2.phone = \"19234222456\";\r\n\t\tcontactInfo1.notes = \"ratna.james@deloz.com\";\r\n\t\tcontactInfos.add(contactInfo2);\r\n\t\t///#endregion\r\n\r\n\t\t//Add data source\r\n\t\tworkbook.addDataSource(\"ds1\", flightInfos);\r\n\t\tworkbook.addDataSource(\"ds2\", loadingInfos);\r\n\t\tworkbook.addDataSource(\"ds3\", emergencyContactInfos);\r\n\t\tworkbook.addDataSource(\"ds4\", contactInfos);\r\n\t\t//Invoke to process the template\r\n\t\tworkbook.processTemplate();\r\n\t"
}VerticalAlignment(VerticalAlignment.Top);\r\n        a1.setOrientation(-90);\r\n        a1.setWrapText(true);\r\n\r\n        a1.setColumnWidth(27);\r\n        a1.setRowHeight(190);\r\n    "
}